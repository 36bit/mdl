'<PCODE "FIELDS">

<PACKAGE "FIELDS"> 

"communication system message field utilities" 

<ENTRY FLD GETFIX FGETFIX GETSTRING F==? MEMF OK?> 

<USE "M-DEFS" "M-DATA" "MADMAN" "VCTSRC" "OPSYS"> 

<SETG FLD <MOBLIST FLD>> 

"Here we set up the 'constant' fields of a message" 

<COND (<LOOKUP "MSG-NO" ,FLD>) (ELSE <SETG <INSERT "MSG-NO" ,FLD> 1> <SETG <
INSERT "MESSAGE-ID" ,FLD> 2> <SETG <INSERT "FROM" ,FLD> 3> <SETG <INSERT 
"SENDER" ,FLD> 4> <SETG <INSERT "RECEIVED-FROM-HOST" ,FLD> 5> <SETG <INSERT "TO"
,FLD> 6> <SETG <INSERT "ADDRESSED-TO" ,FLD> 7> <SETG <INSERT "ACTION-TO" ,FLD> 8
> <SETG <INSERT "CARBON-COPY-TO" ,FLD> 9> <SETG <INSERT "WHEN-ORIGINATED" ,FLD> 
10> <SETG <INSERT "SUBJECT" ,FLD> 11> <SETG <INSERT "BODY" ,FLD> 12> <SETG <
INSERT "TEXT" ,FLD> 12> <SETG <INSERT "CPU-SECONDS" ,FLD> 13> <SETG <INSERT 
"CONSOLE-MINUTES" ,FLD> 14> <SETG <INSERT "DAEMON" ,FLD> 15> <SETG <INSERT 
"WHEN-RECEIVED" ,FLD> 16> <SETG <INSERT "WHEN-DELIVERED" ,FLD> 17> <SETG <INSERT
"PROCESSING-NEEDED" ,FLD> 18> <SETG <INSERT "PROCESSING-COMPLETED" ,FLD> 19> <
SETG <INSERT "CPU-TIME" ,FLD> 20> <SETG <INSERT "EXPANDED-ADDRESSEE-LIST" ,FLD> 
21> <SETG <INSERT "UNPROCESSABLE-ADDRESSEES" ,FLD> 22> <SETG <INSERT 
"DELIVERY-COMPLETED" ,FLD> 23> <SETG <INSERT "DELIVERY-ATTEMPTS" ,FLD> 24> <SETG
<INSERT "NET-DELIVERY-ERRORS" ,FLD> 25> <SETG <INSERT "CONDITIONS" ,FLD> 26> <
SETG <INSERT "PENDING-CONDITIONS" ,FLD> 27> <SETG <INSERT 
"ACKNOWLEDGED-CONDITIONS" ,FLD> 28> <SETG <INSERT "WATCH-CONDITIONS" ,FLD> 29> <
SETG <INSERT "ERROR-CONDITIONS" ,FLD> 30> <SETG <INSERT "ERROR-TO" ,FLD> 31>)> 

"GETFIX -- get the FIX representation of a field id" 

<DEFMAC GETFIX ('X "AUX" N) <COND (<TYPE? .X STRING> <COND (<SET N <LOOKUP .X ,
FLD>> ,.N) (ELSE .X)>) (ELSE <FORM FGETFIX .X>)>> 

"FGETFIX -- get the FIX representation of a field id" 

<SETG FGETFIX  %<RSUBR!- '[ %<PCODE!- "FIELDS" 0> FGETFIX #DECL ("VALUE" <OR FIX
STRING> <OR FIX STRING>) VCTSRC DATUM %<RGLOC FLD T> "COMSYS-STRING-FIELDS" 
"COMSYS-FIX-FIELDS" T "COMSYS-FIX-DECLS" "COMSYS-STRING-DECLS" #FALSE (
"INVALID DATUM")]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,FGETFIX PGLUE ![671088640!]>> 


"GETSTRING -- get the STRING version of a field id" 

<SETG GETSTRING %<RSUBR-ENTRY '[FGETFIX GETSTRING #DECL ("VALUE" <OR FIX STRING>
<OR STRING FIX>)] 69>> 

"F==? -- predicate to determine equality of two fields (fix's or strings)" 

<SETG F==? %<RSUBR-ENTRY '[FGETFIX F==? #DECL ("VALUE" <OR ATOM FALSE> <OR FIX 
STRING> <OR FIX STRING>)] 103>> 

"MEMF -- given a field descriptor (fix|string) and a list, acts like
  a memq for a list of field names or fixes..." 

<SETG MEMF %<RSUBR-ENTRY '[FGETFIX MEMF #DECL ("VALUE" <OR FALSE <LIST [REST <OR
FIX STRING>]>> <OR FIX STRING> LIST)] 165>> 

"OK? -- given a field descriptor and a data item, does decl? check
  to see if data is valid.  returns t if ok or if no data
  for that field, and #false(\"invalid-datum\") otherwise" 

<SETG OK? %<RSUBR-ENTRY '[FGETFIX OK? #DECL ("VALUE" <OR ATOM !<FALSE STRING!>> 
<OR FIX STRING> ANY)] 227>> 

<ENDPACKAGE> 
