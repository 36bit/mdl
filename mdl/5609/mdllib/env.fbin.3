'<PCODE "2ENV">

<PACKAGE "ENV"> 

<RENTRY EVAL-WHEN FEATURE? FEATURES ENV-COND> 

<SETG FOBL <MOBLIST FEATURES>> 

<SETG FEATURE?  %<RSUBR!- '[ %<PCODE!- "2ENV" 0> FEATURE? #DECL ("VALUE" ANY 
"TUPLE" <TUPLE [REST <OR LIST ATOM STRING>]>) FEATURE? %<RGLOC FOBL T> T]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,FEATURE? PGLUE ![536870912!]>> 


<SETG FIND-FEATURE %<RSUBR-ENTRY '[FEATURE? FIND-FEATURE #DECL ("VALUE" ANY <OR 
LIST ATOM STRING> OBLIST)] 53>> 

<SETG FEATURES %<RSUBR-ENTRY '[FEATURE? FEATURES #DECL ("VALUE" <OR ATOM FALSE 
STRING> "TUPLE" <TUPLE [REST <OR ATOM LIST STRING>]>)] 226>> 

<SETG EVAL-WHEN %<RSUBR-ENTRY '[FEATURE? EVAL-WHEN #DECL ("VALUE" ANY ANY "ARGS"
ANY)] 377>> 

<DEFMAC ENV-COND ("ARGS" STUFF) #DECL ((STUFF) <LIST [REST LIST]>) <REPEAT (L FL
) <COND (<EMPTY? .STUFF> <RETURN <>>)> <SET L <1 .STUFF>> <COND (<NOT <EMPTY? .L
>> <SET FL <1 .L>> <COND (<OR <==? .FL T> <COND (<TYPE? .FL VECTOR> <FEATURE? !.
FL>) (<FEATURE? .FL>)>> <SET L <REST .L>> <COND (<EMPTY? .L> <RETURN T>) (<
LENGTH? .L 1> <RETURN <1 .L>>) (<RETURN <FORM BIND () !.L>>)>)>)> <SET STUFF <
REST .STUFF>>>> 

<ENDPACKAGE> 
