'<PCODE "1PEEPH">

"PEEPHOLE OPTIMIZER: IT WILL DO SEVERAL TYPES OF OPTIMIZATIONS ON THE
 CODE OUTPUT BY THE COMPILER.  THIS INCLUDES REMOVING UNREACHABLE CODE
 REMOVE THE COPYING OF SIMILAR CODE AND OTHER MINOR OPTIMIZATIONS." 

<SETG INSTRUCTION ,FORM> 

<BLOCK (<ROOT>)> 

TMP 

<ENDBLOCK> 

<SETG SKIP-TBL ![4 5 6 7 0 1 2 3!]> 

<SETG TEST-TBL ![2 3 0 1!]> 

<MANIFEST SKIP-TBL TEST-TBL> 

<NEWTYPE LNODE VECTOR '<VECTOR LIST LIST <OR FALSE TUPLE> ATOM>> 

<SETG LABLS-LN 1> 

<SETG JUMPS-LN 2> 

<SETG CODE-LN 3> 

<SETG NAME-LN 4> 

<NEWTYPE NULL LIST> 

<SETG NULL-INST <CHTYPE () NULL>> 

<NEWTYPE JUMP-INS LIST '<LIST <PRIMTYPE WORD> FIX <OR 'T FALSE> <OR FALSE LNODE>
>> 

<SETG INS-JMP 1> 

<SETG COND-JMP 2> 

<SETG UNCON-JMP 3> 

<SETG WHERE-JMP 4> 

<NEWTYPE SKIP-INS LIST '<LIST <PRIMTYPE WORD> FIX <OR 'T FALSE> <OR 'T FALSE>>> 

<SETG INS-SKP 1> 

<SETG COND-SKP 2> 

<SETG TEST-SKP 3> 

<SETG UNCON-SKP 4> 

<MANIFEST LABLS-LN JUMPS-LN CODE-LN NAME-LN NULL-INST INS-JMP COND-JMP UNCON-JMP
WHERE-JMP INS-SKP COND-SKP TEST-SKP UNCON-SKP> 

"CODE RANGES" 

<SETG JRST1 172> 

<SETG LOW-SKP1 192> 

<SETG HI-SKP1 207> 

<SETG LOW-JMP1 208> 

<SETG HI-JMP1 215> 

<SETG LO-SKP2 216> 

<SETG HI-SKP2 223> 

<SETG LO-JMP2 224> 

<SETG HI-JMP2 255> 

<SETG LO-TST1 384> 

<SETG HI-TST1 447> 

<MANIFEST JRST1 LOW-SKP1 HI-SKP1 LOW-JMP1 HI-JMP1 LO-SKP2 HI-SKP2 LO-JMP2 
HI-JMP2 LO-TST1 HI-TST1> 

\ 

"PEEP STARTS BY BUILDING A CODE STRUCTURE WITH SKIPS AND JUMPS REPLACED BY THERE
 EXPANDED INS-TYPES AND WITH JUMPS AND THIER LABELS LINKED UP WITH THE USE OF LNODES." 

<SETG PEEP  %<RSUBR!- '[ %<PCODE!- "1PEEPH" 0> PEEP #DECL ("VALUE" ANY LIST 
"TUPLE" ANY) PRINL1 PRINLC & CROSS-OPT MODLN (LIST) LABNUM (FIX) NUMLABS 
NNUMLABS SLABS INTERNAL-ENTRY!-OP %<TYPE-W LNODE VECTOR> %<TYPE-W NULL LIST> %<
TYPE-C JUMP-INS LIST> NLABLS REDO (<OR STRING FALSE ATOM>) T %<TYPE-C NULL LIST>
 "REMOVED JUMP CHAINING" %<TYPE-W JUMP-INS LIST> %<TYPE-C SKIP-INS LIST> 
"SKIP-CHAIN OPTIMIZATION" %<TYPE-C LNODE VECTOR> "OPTIMIZING CONDITIONAL JUMPS" 
%<TYPE-C OPCODE!-OP WORD> %<TYPE-W OPCODE!-OP WORD> 
"ADDI OR SUBI FOLLOWED BY A JUMP" "JUMP TO AN ADDI OR SUBI" DEALLOCATE .HERE!-OP
 "FLUSH UNREACHABLE CODE" PEEP %<TYPE-W SKIP-INS LIST> OUTCHAN "	" 
"CROSS-OPTIMIZATION" SKIP-INS ![2 3 0 1!] ![4 5 6 7 0 1 2 3!] "OPT" TMP OBLIST 
PSEUDO!-OP SETG <ANDB 262143 <CHTYPE .HERE!-OP FIX>> OUTL 
"Peephole optimization reduced code by " "%.     " " -> " 
"FLUSH REDUNDANT LABELS"]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,PEEP PGLUE ![717225983 -1 -1 -17179869184!]>> 


\ 

<SETG INSTYPE %<RSUBR-ENTRY '[PEEP INSTYPE #DECL ("VALUE" ANY ANY)] 2196>> 

<SETG NFIND-LAB %<RSUBR-ENTRY '[PEEP NFIND-LAB #DECL ("VALUE" ANY ANY)] 2348>> 

<SETG FIND-NOD %<RSUBR-ENTRY '[PEEP FIND-NOD #DECL ("VALUE" <OR FALSE LNODE> 
LIST ATOM)] 2421>> 

<SETG INSFIX %<RSUBR-ENTRY '[PEEP INSFIX #DECL ("VALUE" ANY ANY)] 2485>> 

<SETG PRT %<RSUBR-ENTRY '[PEEP PRT #DECL ("VALUE" <OR ATOM FALSE> STRUCTURED)] 
2594>> 

<SETG CROSS-OPT %<RSUBR-ENTRY '[PEEP CROSS-OPT #DECL ("VALUE" ATOM ANY TUPLE 
"TUPLE" TUPLE)] 2658>> 

<SETG FF %<RSUBR-ENTRY '[PEEP FF #DECL ("VALUE" ATOM STRUCTURED)] 2994>> 

"ROUTINE TO DETERMINE WHETHER AN INSTRUCTION CAN SKIP" 

<SETG HACK-PRINT %<RSUBR-ENTRY '[PEEP HACK-PRINT #DECL ("VALUE" ANY ANY)] 3041>> 

<SETG SKIPPABLE %<RSUBR-ENTRY '[PEEP SKIPPABLE #DECL ("VALUE" <OR ATOM FALSE 
LIST> ANY)] 3066>> 

"ROUTINE TO DELETE A JUMP-LN FROM AN LNODE." 

<SETG DEL-JUMP-LN %<RSUBR-ENTRY '[PEEP DEL-JUMP-LN #DECL ("VALUE" <OR ATOM FALSE
> TUPLE)] 3131>> 

<SETG CHANGE-COND %<RSUBR-ENTRY '[PEEP CHANGE-COND #DECL ("VALUE" SKIP-INS 
SKIP-INS)] 3240>> 

<SETG MAKE:LABEL %<RSUBR-ENTRY '[PEEP MAKE:LABEL #DECL ("VALUE" ATOM)] 3280>> 

<SETG NEXTS %<RSUBR-ENTRY '[PEEP NEXTS #DECL ("VALUE" ANY TUPLE "OPTIONAL" ANY 
ANY)] 3350>> 

<SETG BACKS %<RSUBR-ENTRY '[PEEP BACKS #DECL ("VALUE" ANY TUPLE TUPLE "OPTIONAL"
ANY FIX)] 3438>> 

<SETG ADDON %<RSUBR-ENTRY '[PEEP ADDON #DECL ("VALUE" <PRIMTYPE LIST> <PRIMTYPE 
LIST> <PRIMTYPE LIST>)] 3512>> 

<SETG FIND-LAB %<RSUBR-ENTRY '[PEEP FIND-LAB #DECL ("VALUE" <OR ATOM FALSE> ANY)
] 3542>> 

<SETG PSEUDO? %<RSUBR-ENTRY '[PEEP PSEUDO? #DECL ("VALUE" <OR ATOM FALSE> ANY)] 
3601>> 

<SETG MUNG-LAB %<RSUBR-ENTRY '[PEEP MUNG-LAB #DECL ("VALUE" ANY ANY ANY)] 3691>> 

<PRINTTYPE SKIP-INS ,HACK-PRINT> 

<PRINTTYPE JUMP-INS ,HACK-PRINT> 

<SETG PEEP-PRINT %<RSUBR-ENTRY '[PEEP PEEP-PRINT #DECL ("VALUE" ANY ANY ANY ANY 
ANY)] 3777>> 

<SETG CLEAN-IT-UP %<RSUBR-ENTRY '[PEEP CLEAN-IT-UP #DECL ("VALUE" ANY <LIST [
REST LNODE]>)] 3957>> 

<SETG FIND-END-OF-CHAIN %<RSUBR-ENTRY '[PEEP FIND-END-OF-CHAIN #DECL ("VALUE" <
OR FALSE LNODE> JUMP-INS)] 4132>> 

<SETG FLUSH-LABELS %<RSUBR-ENTRY '[PEEP FLUSH-LABELS #DECL ("VALUE" ANY ANY)] 
4181>> 
