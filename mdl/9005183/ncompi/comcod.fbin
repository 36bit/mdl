'<PCODE "1COMCOD">

<BLOCK (<ROOT>)> 

CSOURCE 

<ENDBLOCK> 

<BLOCK (!.OBLIST <GET PACKAGE OBLIST>)> 

<SETG MESSAGE  %<RSUBR!- '[ %<PCODE!- "1COMCOD" 0> MESSAGE #DECL ("VALUE" ATOM 
ANY ANY "TUPLE" ANY) ADDRESS:PAIR ADDRESS:C REGSTO POP:LOCS ASSEMBLE1!-CODING 
PEEP EXP-MAC CDUP PRT STACK:ARGUMENT SINACS RET-TMP-AC STACK:L TMPAC ADDR:VALUE1
 GETREG TOACV TEMP:ADDR ADDR:TYPE1 SGETREG DATUM MINL ISTYPE? TYPE-AND MESSAGE 
NODE-COMPLAIN DEBUGSW (ERROR NOTE WARNING INCONSISTANCY INCONSISTENCY) (ERRS 
NOTES WARNS INCONS INCONS) T OUTCHAN "*** " "	" ATOM %<TYPE-C NODE VECTOR> 
NODE-COMPLAIN " " ERROR " COMPILATION ABORTED " COMPILER INCONSISTANCY 
INCONSISTENCY " INFORM  BKD; OR CLR; " CODE:PTR %<TYPE-W ADDRESS:C LIST> %<
TYPE-W ADDRESS:PAIR LIST> %<TYPE-W TYPED:ADDRESS LIST> "TAG" TAG:COUNT %<RGLOC 
TMP:OBL T> %<TYPE-W OPCODE!-OP WORD> LOCAL-TAGS "MULTIPLY DEFINED TAG " 
" UNDEFINED LABEL (S) " GLUE PSEUDO!-OP SETG <ANDB 262143 <CHTYPE .HERE!-OP FIX>
> <NOT FALSE> ![CHANNEL RSUBR ATOM!] ![UVECTOR VECTOR!] %<TYPE-C AC VECTOR> %<
TYPE-W DATUM LIST> GETYP!-OP <TYPE-CODE!-OP FALSE> %<TYPE-W MUDREF!-OP WORD> 
MCALL!-OP %<RGLOC AC-A T> %<TYPE-W AC VECTOR> %<RGLOC AC-B T> %<TYPE-C TEMP 
VECTOR> %<TYPE-C ADDRESS:C LIST> %<TYPE-C ADDRESS:PAIR LIST> %<TYPE-C OFFPTR 
LIST> #ADDRESS:PAIR (|$TTB  `TB ) ![STORAGE UVECTOR!] %<RGLOC ACO T> 
TYPE-WORD!-OP "BAD ADDRESS " "INCONSISTENCY" "TEMPORARY OFFSET BAD" AC-HACK (
STACK) STK BSTB %<TYPE-W SCL WORD> TMPS (FUNNY-STACK) FCN LN - WORD LIST [0] 
MQUOTE!-OP QUOTE %<RGLOC NO-DATUM T> %<TYPE-C DATUM LIST> (-1) FLUSHED ANY-AC 
FIX DONT-CARE (`MOVE  `MOVEI  `MOVNI  `MOVSI ) %<TYPE-C OPCODE!-OP WORD> TITLE 
DECLARE!-OP ("VALUE" ATOM) RDCL SUB-ENTRY!-OP %<TYPE-W IRSUBR LIST> <`SUBM  
`M*  `(P) > ACALL!-OP <`JRST  |MPOPJ > <`JRST  |FMPOPJ > %<TYPE-W NODE VECTOR> 
BIN-FLG CSOURCE CODE:TOP PEEP "Starting assembler" OBLIST SPECD <`MOVE  `TP*  
`FRM > <`PUSHJ  `P*  |SSPECS > PSLOT PSTACK DEALLOCATE #ADDRESS:C (`(C) ) 
START:TAG <`SUB  `O  `M > <`HRLI  `O  TTP!-OP> <`PUSH  `TP*  `O > TTP!-OP <
`SUB  `A*  `M > %<RGLOC BIND-BEGIN T> NTSLOTS UNBOUND <TYPE-WORD!-OP UNBOUND> [
-1] ALLOCATE:SLOTS TTP!-MUDDLE <TYPE-WORD!-OP TIME> <TYPE-CODE!-OP TIME>]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,MESSAGE PGLUE ![715827882 -22906486785 -1 -1 
-1 -1 -1 -1 -1073741824 0!]>> 


"***** BEGINNING OF THE IMPLEMENTATION SECTION *****" 

<SETG EMIT %<RSUBR-ENTRY '[MESSAGE EMIT #DECL ("VALUE" LIST ANY)] 199>> 

<SETG BIND-BEGIN [<FORM (<CHTYPE <TYPE-C ATOM> FIX>) -1>]> 

<SETG INSTRUCTION ,FORM> 

"Special datum meaning nothing returned." 

<SETG NO-DATUM <DATUM FLUSHED FLUSHED>> 

<NEWTYPE ADDRESS:C LIST> 

<SETG ADDRESS:C %<RSUBR-ENTRY '[MESSAGE ADDRESS:C #DECL ("VALUE" ADDRESS:C 
"TUPLE" ANY)] 230>> 

<NEWTYPE ADDRESS:PAIR LIST> 

<SETG ADDRESS:PAIR %<RSUBR-ENTRY '[MESSAGE ADDRESS:PAIR #DECL ("VALUE" 
ADDRESS:PAIR "TUPLE" ANY)] 263>> 

<NEWTYPE TYPED:ADDRESS LIST> 

<SETG TYPED:ADDRESS %<RSUBR-ENTRY '[MESSAGE TYPED:ADDRESS #DECL ("VALUE" 
TYPED:ADDRESS ANY ANY)] 296>> 

<NEWTYPE IRSUBR LIST> 

<OR <GASSIGNED? TDEFER!-OP> <SETG TDEFER!-OP <SQUOTA |TDEFER >>> 

<OR <GASSIGNED? TTP!-OP> <SETG TTP!-OP <SQUOTA |TTP >>> 

<OR <GASSIGNED? TTB!-OP> <SETG TTB!-OP <SQUOTA |TTB >>> 

<SETG FRAMACT 9> 

<SETG FRAMLN 7> 

<SETG MAKE:TAG %<RSUBR-ENTRY '[MESSAGE MAKE:TAG #DECL ("VALUE" ATOM "OPTIONAL" 
STRING ATOM)] 320>> 

<SETG BRANCH:TAG %<RSUBR-ENTRY '[MESSAGE BRANCH:TAG #DECL ("VALUE" LIST ANY)] 
398>> 

<SETG LABEL:TAG %<RSUBR-ENTRY '[MESSAGE LABEL:TAG #DECL ("VALUE" LIST ANY)] 419>
> 

<SETG ISTAG? %<RSUBR-ENTRY '[MESSAGE ISTAG? #DECL ("VALUE" <OR ATOM FALSE> ANY)]
433>> 

<SETG UNIQUE:TAG %<RSUBR-ENTRY '[MESSAGE UNIQUE:TAG #DECL ("VALUE" ATOM ATOM <OR
ATOM FALSE>)] 493>> 

<SETG CHECK-LOCAL-TAGS %<RSUBR-ENTRY '[MESSAGE CHECK-LOCAL-TAGS #DECL ("VALUE" <
OR ATOM FALSE> LIST)] 602>> 

<SETG LABEL:OFF %<RSUBR-ENTRY '[MESSAGE LABEL:OFF #DECL ("VALUE" LIST ANY)] 669>
> 

<SETG TRUE:BRANCH:TAG %<RSUBR-ENTRY '[MESSAGE TRUE:BRANCH:TAG #DECL ("VALUE" 
LIST ANY ANY)] 707>> 

<SETG FALSE:BRANCH:TAG %<RSUBR-ENTRY '[MESSAGE FALSE:BRANCH:TAG #DECL ("VALUE" 
LIST ANY ANY)] 730>> 

<SETG D:B:TAG %<RSUBR-ENTRY '[MESSAGE D:B:TAG #DECL ("VALUE" LIST ANY DATUM <OR 
FALSE ATOM> ANY)] 753>> 

<SETG GEN:FALSE %<RSUBR-ENTRY '[MESSAGE GEN:FALSE #DECL ("VALUE" LIST)] 890>> 

<SETG SUBR:CALL %<RSUBR-ENTRY '[MESSAGE SUBR:CALL #DECL ("VALUE" LIST ANY ANY)] 
911>> 

<SETG FUNCTION:VALUE %<RSUBR-ENTRY '[MESSAGE FUNCTION:VALUE #DECL ("VALUE" DATUM
"OPTIONAL" ANY)] 935>> 

<SETG TMP:OBL <MOBLIST <OR <LOOKUP "TMP" <ROOT>> <INSERT "TMP" <ROOT>>>>> 

<SETG ADDR:TYPE %<RSUBR-ENTRY '[MESSAGE ADDR:TYPE #DECL ("VALUE" ANY <DATUM ANY 
ANY>)] 993>> 

<SETG ADDR:TYPE1 %<RSUBR-ENTRY '[MESSAGE ADDR:TYPE1 #DECL ("VALUE" ANY ANY)] 
1013>> 

<SETG GETUVT %<RSUBR-ENTRY '[MESSAGE GETUVT #DECL ("VALUE" <PRIMTYPE WORD> AC 
"OPTIONAL" AC ANY)] 1172>> 

<SETG TYPE:SYM %<RSUBR-ENTRY '[MESSAGE TYPE:SYM #DECL ("VALUE" FORM ANY)] 1294>> 

<SETG ADDR:VALUE %<RSUBR-ENTRY '[MESSAGE ADDR:VALUE #DECL ("VALUE" ANY <DATUM 
ANY ANY>)] 1311>> 

<SETG ADDR:VALUE1 %<RSUBR-ENTRY '[MESSAGE ADDR:VALUE1 #DECL ("VALUE" ANY ANY)] 
1332>> 

<SETG TEMP:ADDR %<RSUBR-ENTRY '[MESSAGE TEMP:ADDR #DECL ("VALUE" ANY TEMP FIX)] 
1458>> 

<SETG STEMP:ADDR %<RSUBR-ENTRY '[MESSAGE STEMP:ADDR #DECL ("VALUE" <OR ADDRESS:C
LIST> TEMP "OPTIONAL" FIX)] 1576>> 

"FIX:ADDR TAKES TWO ARGUMENTS. THESE ARE A NEGATIVE AND POSITIVE OFFSETS ON THE STACK
 AND BUILDS A COMPOSITE OFFSET ELIMINATING DUPLICATION" 

<SETG FIX:ADDR %<RSUBR-ENTRY '[MESSAGE FIX:ADDR #DECL ("VALUE" <OR <LIST FIX> <
LIST FORM>> LIST ANY)] 1674>> 

<SETG DEL %<RSUBR-ENTRY '[MESSAGE DEL #DECL ("VALUE" LIST <LIST ANY> FIX)] 1866>
> 

<SETG REFERENCE:ADR %<RSUBR-ENTRY '[MESSAGE REFERENCE:ADR #DECL ("VALUE" <OR 
ADDRESS:C ADDRESS:PAIR> ANY)] 1902>> 

<SETG REFERENCE %<RSUBR-ENTRY '[MESSAGE REFERENCE #DECL ("VALUE" DATUM ANY)] 
1978>> 

<SETG STACK:ARGUMENT %<RSUBR-ENTRY '[MESSAGE STACK:ARGUMENT #DECL ("VALUE" DATUM
<DATUM ANY ANY>)] 2000>> 

<SETG STACK:ADR %<RSUBR-ENTRY '[MESSAGE STACK:ADR #DECL ("VALUE" ANY ANY)] 2061>
> 

<SETG MOVE:ARG %<RSUBR-ENTRY '[MESSAGE MOVE:ARG #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 2106>> 

<SETG MOVE:TYP %<RSUBR-ENTRY '[MESSAGE MOVE:TYP #DECL ("VALUE" ANY ANY ANY)] 
3136>> 

<SETG MOVE:VALUE %<RSUBR-ENTRY '[MESSAGE MOVE:VALUE #DECL ("VALUE" ANY ANY ANY)]
3282>> 

<SETG ACMEMQ %<RSUBR-ENTRY '[MESSAGE ACMEMQ #DECL ("VALUE" <OR ATOM FALSE> AC 
DATUM)] 3378>> 

<SETG EXCH-ACL %<RSUBR-ENTRY '[MESSAGE EXCH-ACL #DECL ("VALUE" ANY AC AC <LIST [
REST DATUM]> "OPTIONAL" ANY)] 3450>> 

<SETG EXCH-AC %<RSUBR-ENTRY '[MESSAGE EXCH-AC #DECL ("VALUE" <OR FALSE DATUM AC>
AC AC DATUM)] 3526>> 

<SETG FIX-ACLINK %<RSUBR-ENTRY '[MESSAGE FIX-ACLINK #DECL ("VALUE" <OR <LIST ANY
> AC> AC ANY ANY)] 3741>> 

<SETG ACS? %<RSUBR-ENTRY '[MESSAGE ACS? #DECL ("VALUE" <PRIMTYPE LIST> <PRIMTYPE
LIST>)] 3810>> 

<SETG IMCHK %<RSUBR-ENTRY '[MESSAGE IMCHK #DECL ("VALUE" LIST <LIST ANY ANY> <
PRIMTYPE WORD> ANY)] 3887>> 

<SETG GROUP:INITIAL %<RSUBR-ENTRY '[MESSAGE GROUP:INITIAL #DECL ("VALUE" LIST 
ANY)] 4066>> 

<SETG FUNCTION:INITIAL %<RSUBR-ENTRY '[MESSAGE FUNCTION:INITIAL #DECL ("VALUE" 
LIST ANY)] 4146>> 

<SETG SUB:INITIAL %<RSUBR-ENTRY '[MESSAGE SUB:INITIAL #DECL ("VALUE" LIST ANY)] 
4184>> 

<SETG INT:INITIAL %<RSUBR-ENTRY '[MESSAGE INT:INITIAL #DECL ("VALUE" IRSUBR ANY)
] 4216>> 

<SETG SUB:INT:INITIAL %<RSUBR-ENTRY '[MESSAGE SUB:INT:INITIAL #DECL ("VALUE" 
LIST ANY)] 4237>> 

<SETG FCN:INT:INITIAL %<RSUBR-ENTRY '[MESSAGE FCN:INT:INITIAL #DECL ("VALUE" 
LIST ANY)] 4269>> 

<SETG INT:LOSER:INITIAL %<RSUBR-ENTRY '[MESSAGE INT:LOSER:INITIAL #DECL ("VALUE"
LIST ANY NODE)] 4303>> 

<SETG FCNSUB:FINAL %<RSUBR-ENTRY '[MESSAGE FCNSUB:FINAL #DECL ("VALUE" LIST ANY)
] 4551>> 

<SETG FS:INT:FINAL %<RSUBR-ENTRY '[MESSAGE FS:INT:FINAL #DECL ("VALUE" LIST ANY)
] 4573>> 

<SETG INT:FINAL %<RSUBR-ENTRY '[MESSAGE INT:FINAL #DECL ("VALUE" <LIST ANY> NODE
)] 4596>> 

<SETG ASSEM? %<RSUBR-ENTRY '[MESSAGE ASSEM? #DECL ("VALUE" ANY ANY "OPTIONAL" 
ANY)] 4626>> 

<SETG BLOCK:INITIAL %<RSUBR-ENTRY '[MESSAGE BLOCK:INITIAL #DECL ("VALUE" ATOM)] 
4741>> 

<SETG BLOCK:FINAL %<RSUBR-ENTRY '[MESSAGE BLOCK:FINAL #DECL ("VALUE" ATOM)] 4749
>> 

<SETG PROG:END %<RSUBR-ENTRY '[MESSAGE PROG:END #DECL ("VALUE" LIST)] 4757>> 

<SETG UNBIND:FUNNY %<RSUBR-ENTRY '[MESSAGE UNBIND:FUNNY #DECL ("VALUE" <OR FALSE
LIST> ANY "TUPLE" ANY)] 4775>> 

<SETG UNBIND:LOCS %<RSUBR-ENTRY '[MESSAGE UNBIND:LOCS #DECL ("VALUE" <OR FALSE 
LIST> ANY ANY "OPTIONAL" ANY)] 4842>> 

<SETG POP:LOCS %<RSUBR-ENTRY '[MESSAGE POP:LOCS #DECL ("VALUE" <OR ATOM FALSE> 
LIST LIST)] 4910>> 

<SETG COPY:ARGPNTR %<RSUBR-ENTRY '[MESSAGE COPY:ARGPNTR #DECL ("VALUE" LIST)] 
5223>> 

<SETG BUMP:ARGPNTR %<RSUBR-ENTRY '[MESSAGE BUMP:ARGPNTR #DECL ("VALUE" LIST 
"OPTIONAL" FIX)] 5258>> 

<SETG BUMP:CNTR %<RSUBR-ENTRY '[MESSAGE BUMP:CNTR #DECL ("VALUE" LIST "OPTIONAL"
FIX)] 5316>> 

<SETG TEST:ARGPNTR %<RSUBR-ENTRY '[MESSAGE TEST:ARGPNTR #DECL ("VALUE" LIST ANY)
] 5360>> 

<SETG REFERENCE:ARGPNTR %<RSUBR-ENTRY '[MESSAGE REFERENCE:ARGPNTR #DECL ("VALUE"
DATUM)] 5384>> 

<SETG TUPLE:FINAL %<RSUBR-ENTRY '[MESSAGE TUPLE:FINAL #DECL ("VALUE" DATUM)] 
5396>> 

<SETG REFERENCE:STACK:ADR %<RSUBR-ENTRY '[MESSAGE REFERENCE:STACK:ADR #DECL (
"VALUE" ADDRESS:C ANY "OPTIONAL" ANY)] 5425>> 

<SETG REFERENCE:STACK %<RSUBR-ENTRY '[MESSAGE REFERENCE:STACK #DECL ("VALUE" 
DATUM ANY)] 5482>> 

<SETG SPEC:REFERENCE:STACK %<RSUBR-ENTRY '[MESSAGE SPEC:REFERENCE:STACK #DECL (
"VALUE" DATUM ANY ANY)] 5503>> 

<SETG MAKE:ENV %<RSUBR-ENTRY '[MESSAGE MAKE:ENV #DECL ("VALUE" DATUM)] 5528>> 

<SETG ACT:INITIAL %<RSUBR-ENTRY '[MESSAGE ACT:INITIAL #DECL ("VALUE" LIST)] 5557
>> 

<SETG ACT:FINAL %<RSUBR-ENTRY '[MESSAGE ACT:FINAL #DECL ("VALUE" LIST)] 5642>> 

<SETG MAKE:ACT %<RSUBR-ENTRY '[MESSAGE MAKE:ACT #DECL ("VALUE" DATUM)] 5671>> 

<SETG BUILD:FRAME %<RSUBR-ENTRY '[MESSAGE BUILD:FRAME #DECL ("VALUE" LIST ANY)] 
5700>> 

<SETG SEGMENT:LIST %<RSUBR-ENTRY '[MESSAGE SEGMENT:LIST #DECL ("VALUE" LIST ANY 
ANY)] 5747>> 

<SETG SEGMENT:STACK %<RSUBR-ENTRY '[MESSAGE SEGMENT:STACK #DECL ("VALUE" LIST 
ANY ANY)] 5835>> 

<SETG SEGMENT:FINAL %<RSUBR-ENTRY '[MESSAGE SEGMENT:FINAL #DECL ("VALUE" LIST 
ANY)] 5896>> 

<SETG PCOUNTER %<RSUBR-ENTRY '[MESSAGE PCOUNTER #DECL ("VALUE" LIST ANY)] 5933>> 

<SETG COUNTP %<RSUBR-ENTRY '[MESSAGE COUNTP #DECL ("VALUE" LIST)] 5961>> 

<SETG PUSH:BIND %<RSUBR-ENTRY '[MESSAGE PUSH:BIND #DECL ("VALUE" ANY ANY ANY ANY
)] 5979>> 

<SETG PUSH:PAIR %<RSUBR-ENTRY '[MESSAGE PUSH:PAIR #DECL ("VALUE" DATUM ANY)] 
6008>> 

<SETG PUSH:ATB %<RSUBR-ENTRY '[MESSAGE PUSH:ATB #DECL ("VALUE" ANY ANY)] 6022>> 

<SETG STORE:BIND %<RSUBR-ENTRY '[MESSAGE STORE:BIND #DECL ("VALUE" LIST ANY ANY)
] 6042>> 

<SETG STORE:PAIR %<RSUBR-ENTRY '[MESSAGE STORE:PAIR #DECL ("VALUE" ANY ANY ANY)]
6154>> 

<SETG BIND:END %<RSUBR-ENTRY '[MESSAGE BIND:END #DECL ("VALUE" LIST)] 6188>> 

<SETG REFERENCE:UNBOUND %<RSUBR-ENTRY '[MESSAGE REFERENCE:UNBOUND #DECL ("VALUE"
DATUM)] 6209>> 

<SETG REFERENCE:ARG %<RSUBR-ENTRY '[MESSAGE REFERENCE:ARG #DECL ("VALUE" DATUM 
FIX)] 6226>> 

<SETG TEST:ARG %<RSUBR-ENTRY '[MESSAGE TEST:ARG #DECL ("VALUE" LIST ANY ANY)] 
6254>> 

<SETG SALLOC:SLOTS %<RSUBR-ENTRY '[MESSAGE SALLOC:SLOTS #DECL ("VALUE" LIST 
"TUPLE" ANY)] 6316>> 

<SETG ALLOC:SLOTS %<RSUBR-ENTRY '[MESSAGE ALLOC:SLOTS #DECL ("VALUE" LIST 
"TUPLE" ANY)] 6354>> 

<SETG FAST:VAL %<RSUBR-ENTRY '[MESSAGE FAST:VAL #DECL ("VALUE" LIST)] 6470>> 

<SETG FAST:SET %<RSUBR-ENTRY '[MESSAGE FAST:SET #DECL ("VALUE" LIST)] 6491>> 

<SETG FAST:GVAL %<RSUBR-ENTRY '[MESSAGE FAST:GVAL #DECL ("VALUE" LIST)] 6512>> 

<SETG FAST:SETG %<RSUBR-ENTRY '[MESSAGE FAST:SETG #DECL ("VALUE" LIST)] 6533>> 

<SETG TIME:STACK %<RSUBR-ENTRY '[MESSAGE TIME:STACK #DECL ("VALUE" LIST)] 6554>> 

<SETG TIME:CHECK %<RSUBR-ENTRY '[MESSAGE TIME:CHECK #DECL ("VALUE" ATOM)] 6611>> 

<ENDBLOCK> 
