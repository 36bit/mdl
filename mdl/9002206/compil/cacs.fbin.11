'<PCODE "1CACS">

<PUT SYMBOL DECL '<OR SYMTAB TEMP COMMON>> 

<NEWTYPE TEMP VECTOR '<VECTOR SCL <OR FALSE DATUM>>> 

<NEWTYPE SAVED-STATE LIST '<LIST [REST <LIST AC <OR FALSE <LIST [REST SYMBOL]>> 
[REST <LIST SYMBOL [3 ANY]>]>]>> 

<SETG TMPNO 1> 

<SETG TMPAC 2> 

<SETG DATTYP 1> 

<SETG DATVAL 2> 

<SETG ADDRSYM 1> 

<SETG ACSYM 2> 

<SETG ACLINK 3> 

<SETG ACAGE 4> 

<SETG ACNUM 5> 

<SETG ACPROT 6> 

<SETG AC1SYM 7> 

<SETG ACRESIDUE 8> 

<SETG ACPREF 9> 

<NEWTYPE AC VECTOR '<<PRIMTYPE VECTOR> <PRIMTYPE WORD> <PRIMTYPE WORD> <OR <LIST
[REST DATUM]> FALSE> FIX FIX <OR FALSE ATOM> <PRIMTYPE WORD> <OR FALSE LIST> <OR
FALSE ATOM>>> 

<NEWTYPE DATUM LIST '<LIST <OR ATOM <PRIMTYPE LIST> <PRIMTYPE VECTOR>> <OR ATOM 
<PRIMTYPE LIST> <PRIMTYPE VECTOR>>>> 

<NEWTYPE OFFPTR LIST '<LIST FIX DATUM ATOM>> 

<SETG ALLACS <MAPF ,UVECTOR <FUNCTION (N1 N2 N N+1 NAME) <SETG .NAME <CHTYPE [.
N1 .N2 <> 0 .N <> .N+1 <> <>] AC>>> ![`A  `B  `C  `D  `E  `F  `TVP  `SP !] ![
`A*  `B*  `C*  `D*  `E*  `F*  `TVP*  `SP* !] ![1 2 3 4 5 6 7 8!] ![`B*  `C*  
`D*  `E*  `F*  `TVP*  `SP*  `AB* !] ![AC-A AC-B AC-C AC-D AC-E AC-F AC-G AC-H!]>
> 

<SETG NUMACS <LENGTH ,ALLACS>> 

<SETG LAST-AC ,AC-H> 

<SETG LAST-AC-1 ,AC-G> 

<SETG REACS  %<RSUBR!- '[ %<PCODE!- "1CACS" 0> REACS #DECL ("VALUE" FIX) DATUM 
PRIM-CODE RES-FLS EMIT SMASH-NUM-SYM ISTYPE? KILL-LOOP-AC MOVE:TYP MOVE:VALUE 
MESSAGE STORE-TMP STEMP:ADDR DATUM CREATE-TMP STOREV %<RGLOC ALLACS T> %<RGLOC 
REGS T> %<RGLOC ATIME T> %<TYPE-W AC VECTOR> PREV NEXT %<TYPE-C DATUM LIST> %<
TYPE-W DATUM LIST> %<TYPE-C AC VECTOR> %<TYPE-C SYMTAB VECTOR> T %<RGLOC AC-A T>
 %<RGLOC LAST-AC T> %<TYPE-W TEMP VECTOR> %<TYPE-C TEMP VECTOR> %<TYPE-C OFFPTR 
LIST> INCONSISTENCY "AC-LOSSAGE" INCONSISTANCY "NEEDED AC IS PROTECTED? " 
" AC LOSSAGE " %<TYPE-W OFFPTR LIST> %<TYPE-W SAVED-STATE LIST> %<TYPE-W SYMTAB 
VECTOR> LIST %<TYPE-C COMMON VECTOR> %<TYPE-W COMMON VECTOR> (#FALSE ()) %<RGLOC
STORE:TVAR T> %<TYPE-W TOKEN VECTOR> KILL-LIST %<RGLOC KILL:STORE T> %<RGLOC 
STORE:VAR T> ACLIST (LIST) <INTGO!-OP> <`SKIPGE  |INTFLG > TYPE-WORD!-OP %<
TYPE-W OPCODE!-OP WORD> TEMPLATE %<RGLOC DATABITS T> WORD ANY]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,REACS PGLUE ![715827882 -1 -1 -4194304!]>> 


<REACS> 

<SETG LINKED 1> 

<SETG NO-RESIDUE 10000000> 

<SETG STORED-RESIDUE 1000000> 

<SETG NOT-STORED-RESIDUE 100000> 

<SETG NOT-PREF 10000> 

<SETG P-N-CLEAN 1000> 

<SETG P-N-STO-RES 100> 

<SETG P-N-NO-STO-RES 10> 

<SETG P-N-LINKED 1> 

<MANIFEST LINKED NO-RESIDUE STORED-RESIDUE NOT-STORED-RESIDUE NOT-PREF 
P-N-LINKED P-N-CLEAN P-N-STO-RES P-N-NO-STO-RES> 

<SETG GETREG %<RSUBR-ENTRY '[REACS GETREG #DECL ("VALUE" AC ANY "OPTIONAL" ANY)]
37>> 

<SETG ALL-STORED? %<RSUBR-ENTRY '[REACS ALL-STORED? #DECL ("VALUE" <OR ATOM 
FALSE> LIST)] 274>> 

<SETG RATE %<RSUBR-ENTRY '[REACS RATE #DECL ("VALUE" FIX AC ATOM)] 310>> 

<SETG UNPREFER %<RSUBR-ENTRY '[REACS UNPREFER #DECL ("VALUE" <OR FALSE AC>)] 402
>> 

<SETG PREFER-DATUM %<RSUBR-ENTRY '[REACS PREFER-DATUM #DECL ("VALUE" <OR AC 
FALSE> <OR DATUM ATOM>)] 425>> 

<SETG PREF-AC %<RSUBR-ENTRY '[REACS PREF-AC #DECL ("VALUE" <OR FALSE AC> ANY)] 
451>> 

<SETG RELREG %<RSUBR-ENTRY '[REACS RELREG #DECL ("VALUE" AC AC DATUM)] 474>> 

<SETG GETTMP %<RSUBR-ENTRY '[REACS GETTMP #DECL ("VALUE" TEMP ANY)] 542>> 

<SETG SAVE:REG %<RSUBR-ENTRY '[REACS SAVE:REG #DECL ("VALUE" AC AC ANY 
"OPTIONAL" ANY)] 563>> 

<SETG RETTMP %<RSUBR-ENTRY '[REACS RETTMP #DECL ("VALUE" <OR AC FALSE> TEMP)] 
1007>> 

<SETG MUNG-AC %<RSUBR-ENTRY '[REACS MUNG-AC #DECL ("VALUE" AC AC "OPTIONAL" <
PRIMTYPE LIST> ANY)] 1056>> 

<SETG VAR-STORE %<RSUBR-ENTRY '[REACS VAR-STORE #DECL ("VALUE" <OR AC FALSE> 
"OPTIONAL" ANY)] 1293>> 

<SETG GET:ACS %<RSUBR-ENTRY '[REACS GET:ACS #DECL ("VALUE" <LIST [REST AC]>)] 
1333>> 

<SETG REGSTO %<RSUBR-ENTRY '[REACS REGSTO #DECL ("VALUE" <OR AC FALSE> ANY 
"OPTIONAL" ANY)] 1374>> 

<SETG SGETREG %<RSUBR-ENTRY '[REACS SGETREG #DECL ("VALUE" AC AC ANY)] 1412>> 

<SETG DATUM %<RSUBR-ENTRY '[REACS DATUM #DECL ("VALUE" DATUM ANY ANY)] 1626>> 

<SETG OFFPTR %<RSUBR-ENTRY '[REACS OFFPTR #DECL ("VALUE" OFFPTR ANY ANY ANY)] 
1647>> 

<SETG SPEC-OFFPTR %<RSUBR-ENTRY '[REACS SPEC-OFFPTR #DECL ("VALUE" OFFPTR ANY 
ANY ANY ANY)] 1674>> 

<SETG DATTYP-FLUSH %<RSUBR-ENTRY '[REACS DATTYP-FLUSH #DECL ("VALUE" ANY DATUM)]
1707>> 

<SETG RET-TMP-AC %<RSUBR-ENTRY '[REACS RET-TMP-AC #DECL ("VALUE" ANY ANY 
"OPTIONAL" DATUM)] 1736>> 

<SETG ACO <CHTYPE [`O*  `O*  <> 0 0 <> `A*  <> <>] AC>> 

<SETG TOACV %<RSUBR-ENTRY '[REACS TOACV #DECL ("VALUE" DATUM DATUM)] 1830>> 

<SETG TOACT %<RSUBR-ENTRY '[REACS TOACT #DECL ("VALUE" DATUM DATUM)] 1879>> 

<SETG AC+1OK? %<RSUBR-ENTRY '[REACS AC+1OK? #DECL ("VALUE" <OR ATOM FALSE> ANY)]
1923>> 

<SETG GET2REG %<RSUBR-ENTRY '[REACS GET2REG #DECL ("VALUE" <OR FALSE AC>)] 1974>
> 

<SETG ANY2ACS %<RSUBR-ENTRY '[REACS ANY2ACS #DECL ("VALUE" DATUM)] 2015>> 

<SETG GET1REG %<RSUBR-ENTRY '[REACS GET1REG #DECL ("VALUE" <OR FALSE AC>)] 2045>
> 

<SETG FREE-ACS %<RSUBR-ENTRY '[REACS FREE-ACS #DECL ("VALUE" FIX "OPTIONAL" ANY)
] 2070>> 

<SETG SAVE-STATE %<RSUBR-ENTRY '[REACS SAVE-STATE #DECL ("VALUE" SAVED-STATE)] 
2118>> 

<SETG SS-SYM-SLOT 1> 

"POINTER TO SYMBOL" 

<SETG SS-DAT-SLOT 2> 

"DATUM OF THE SYMBOL" 

<SETG SS-STORED-SLOT 3> 

"IS THE SYMBOL STORED" 

<SETG SS-POTENT-SLOT 4> 

"IS THE SYMBOL POTENTIAL" 

<MANIFEST SS-SYM-SLOT SS-DAT-SLOT SS-STORED-SLOT SS-POTENT-SLOT> 

<SETG RESTORE-STATE %<RSUBR-ENTRY '[REACS RESTORE-STATE #DECL ("VALUE" <OR 
COMMON FALSE SYMTAB TEMP> SAVED-STATE "OPTIONAL" ANY)] 2294>> 

<SETG GET-STORED %<RSUBR-ENTRY '[REACS GET-STORED #DECL ("VALUE" <OR ATOM FALSE>
SYMTAB <OR FALSE ATOM> <OR FALSE ATOM>)] 2569>> 

<SETG MERGE-STATE %<RSUBR-ENTRY '[REACS MERGE-STATE #DECL ("VALUE" <OR COMMON 
FALSE SYMTAB TEMP> SAVED-STATE)] 2618>> 

<SETG SINACS %<RSUBR-ENTRY '[REACS SINACS #DECL ("VALUE" <OR DATUM FALSE> SYMBOL
)] 3017>> 

<SETG SMASH-INACS %<RSUBR-ENTRY '[REACS SMASH-INACS #DECL ("VALUE" <OR TEMP 
COMMON SYMTAB> SYMBOL ANY "OPTIONAL" ANY)] 3048>> 

<SETG TEMP-MOD %<RSUBR-ENTRY '[REACS TEMP-MOD #DECL ("VALUE" <OR FALSE LIST AC> 
DATUM)] 3100>> 

<SETG POTENT-L-V? %<RSUBR-ENTRY '[REACS POTENT-L-V? #DECL ("VALUE" <OR ATOM 
FALSE> SYMTAB)] 3236>> 

<SETG SAVE:RES %<RSUBR-ENTRY '[REACS SAVE:RES #DECL ("VALUE" LIST)] 3277>> 

<SETG SAVE-NUM-SYM %<RSUBR-ENTRY '[REACS SAVE-NUM-SYM #DECL ("VALUE" LIST <LIST 
[REST SYMTAB ANY ANY <OR FALSE ATOM> ANY]>)] 3426>> 

<SETG FIX-NUM-SYM %<RSUBR-ENTRY '[REACS FIX-NUM-SYM #DECL ("VALUE" ATOM <LIST [
REST LIST]> <LIST [REST SYMTAB ANY ANY <OR FALSE ATOM> ANY]>)] 3497>> 

<SETG CHECK:VARS %<RSUBR-ENTRY '[REACS CHECK:VARS #DECL ("VALUE" ATOM <LIST [
REST SYMTAB ANY ANY <OR FALSE ATOM> <OR FALSE LIST>]> ANY)] 3596>> 

<SETG STORE-TVAR %<RSUBR-ENTRY '[REACS STORE-TVAR #DECL ("VALUE" ANY ANY ANY ANY
ANY)] 3829>> 

<SETG KILL-STORE %<RSUBR-ENTRY '[REACS KILL-STORE #DECL ("VALUE" ANY ANY)] 3873>
> 

<SETG STORE-VAR %<RSUBR-ENTRY '[REACS STORE-VAR #DECL ("VALUE" ANY ANY DATUM ANY
ANY)] 3910>> 

<SETG FLUSH-RESIDUE %<RSUBR-ENTRY '[REACS FLUSH-RESIDUE #DECL ("VALUE" <OR FALSE
AC> AC SYMBOL)] 3969>> 

<SETG CALL-INTERRUPT %<RSUBR-ENTRY '[REACS CALL-INTERRUPT #DECL ("VALUE" ANY)] 
4002>> 

<SETG DEPOSIT-DATA %<RSUBR-ENTRY '[REACS DEPOSIT-DATA #DECL ("VALUE" <OR FALSE 
FIX> FIX FIX AC DATUM)] 4263>> 

<SETG DEPOSIT-TYPE %<RSUBR-ENTRY '[REACS DEPOSIT-TYPE #DECL ("VALUE" FIX FIX FIX
ATOM)] 4333>> 

<SETG DEPOSIT-AC %<RSUBR-ENTRY '[REACS DEPOSIT-AC #DECL ("VALUE" FIX FIX FIX AC)
] 4437>> 

<SETG DATABITS ![<BITS 6 30> <BITS 6 24> <BITS 6 18> <BITS 6 12> <BITS 6 6> <
BITS 6 0>!]> 

<GDECL (DATABITS) <UVECTOR [6 BITS]>> 

<SETG FIND-AC-TYPE %<RSUBR-ENTRY '[REACS FIND-AC-TYPE #DECL ("VALUE" ANY ANY)] 
4467>> 

<SETG FIND-AC-VAL %<RSUBR-ENTRY '[REACS FIND-AC-VAL #DECL ("VALUE" <OR ATOM <
PRIMTYPE LIST> <PRIMTYPE VECTOR>> ANY)] 4489>> 

<SETG FIND-TYPE-OF-ACL %<RSUBR-ENTRY '[REACS FIND-TYPE-OF-ACL #DECL ("VALUE" <OR
ATOM FALSE> DATUM)] 4512>> 

<SETG HACK-OFFPTR %<RSUBR-ENTRY '[REACS HACK-OFFPTR #DECL ("VALUE" DATUM OFFPTR 
TEMP)] 4562>> 

<OR <AND <ASSIGNED? HELP-COMPIL> .HELP-COMPIL> <FLOAD "SUBRTY.MUD">> 
