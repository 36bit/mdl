'<PCODE "MAPGEN">

" Definitions of offsets into MAPINFO vector used by MAP hackers inferiors." 

<SETG MAP-STRS 1> 

<SETG MAP-SRC 2> 

\ 

<SETG MAP-FR 3> 

<SETG MAP-TAG 4> 

<SETG MAP-STK 5> 

<SETG MAP-STOF 6> 

<SETG MAP-OFF 7> 

<SETG MAP-TGL 8> 

<SETG MAP-STSTR 9> 

<SETG MAP-STKFX 10> 

<SETG MAP-POFF 11> 

\ 

<SETG MAPFR-GEN  %<RSUBR!- '[ %<PCODE!- "MAPGEN" 0> MAPFR-GEN #DECL ("VALUE" ANY
NODE ANY) SEGMENT:STACK VAR-STORE REFERENCE:UNBOUND TOACV DATTYP-FLUSH END-FRAME
 FIX-ACLINK ACFIX CLEANUP-STATE AGAIN-UP LINACS-SLOT UNBIND:LOCS UNBIND:FUNNY 
LABEL:OFF PROG:END SEQ-GEN CALL-INTERRUPT ACT:FINAL FLUSH-RESIDUE MESSAGE 
ACT:INITIAL PROG-START-AC BEGIN-FRAME UNPREFER PREFER-DATUM EMIT-PRE MINL 
GENFLOAT BINDUP SALLOC:SLOTS RETURN-UP LVAL-UP TYPE-AND DEFERN OFFPTR 
GET-ELE-TYPE SPEC-OFFPTR SGETREG GET-TMPS GEN-FLOAT STFIXIT COUNTP PCOUNTER 
TYPE-OK? ADDRESS:PAIR REFERENCE STACK:L ADDR:TYPE ADDR:VALUE CREATE-TMP MUNG-AC 
GETREG ISTYPE-GOOD? LADDR POP:LOCS ISTYPE? STRUCTYP BRANCH:TAG MOVE:ARG 
ADDRESS:C FUNCTION:VALUE SUBR:CALL ADD:STACK RET-TMP-AC STACK:ARGUMENT GEN EMIT 
LABEL:TAG MAKE:TAG DATUM GOODACS REGSTO %<TYPE-W NODE VECTOR> MPINFO (<VECTOR <
LIST [REST NODE]> DATUM <OR FALSE ATOM> <LIST [REST ATOM]> ANY <OR FALSE LIST> 
FIX LIST LIST <PRIMTYPE LIST> FIX>) FIX ANY-AC %<RGLOC MAPR T> T "MAP" STK (LIST
) FLUSHED <INTGO!-OP> DONT-CARE PRE (0) APPLY %<TYPE-W OPCODE!-OP WORD> <
`SETZM  |DSTORE > %<TYPE-W SYMTAB VECTOR> DUMMY-MAPF STRING BYTES %<TYPE-W AC 
VECTOR> %<TYPE-C AC VECTOR> %<TYPE-W DATUM LIST> %<TYPE-C DATUM LIST> %<TYPE-C 
TEMPV LIST> BSTB AC-HACK (FUNNY-STACK) FCN TMPS %<TYPE-W TEMPV LIST> LIST 
TEMPLATE <`PUSH  `P*  [-1]> PSLOT %<TYPE-C SYMTAB VECTOR> VECTOR TUPLE [<2 (2)>]
 <`MOVE  [<2 (2)>]> UVECTOR STORAGE [<1 (1)>] <`MOVE  [<1 (1)>]> FRMS %<TYPE-W 
MUDREF!-OP WORD> REASONABLE FALSE <`PUSH  `P*  [0]> <GETYP!-OP `O*  -1 `(TP) > <

`CAIN  `O*  <TYPE-CODE!-OP FALSE>> <`SETOM  -1 `(P) > PSTACK %<RGLOC NO-DATUM T>
 <`SKIPGE  -1 `(P) > %<RGLOC AC-C T> %<RGLOC AC-D T> <`MOVEI  `E*  0> <`PUSHJ  
`P*  |CICONS > (-2) %<RGLOC MINS T> <`POP  `P*  `A > <`POP  `P*  0> <ACALL!-OP 
`A*  APPLY> <`POP  `TP*  `B > <`POP  `TP*  `A > STACK ACALL!-OP FLOAT %<RGLOC 
FSLOT-FIRST T> %<RGLOC SLOT-FIRST T> #FALSE (1) - %<RGLOC MAP-OFF T> + %<RGLOC 
MAP-STOF T> %<RGLOC MAP-STRS T> %<RGLOC MAP-TGL T> %<RGLOC MAP-STKFX T> %<RGLOC 
MAP-TAG T> ALL GETYP!-OP TDEFER!-OP CHARACTER <`PUSHJ  `P*  |TYPSEG > <`XCT  
|INCR1  `(C) > <`XCT  |TESTR  `(C) > <`MOVE  `A*  |DSTORE > <`MOVE  `B*  
`D > <`XCT  |TYPG  `(C) > <`XCT  |VALG  `(C) > <`JSP  `E*  |CHKAB > <`MOVE  
`O*  |DSTORE > INRAP GVAL NTSLOTS GSTK <`CAIN  `O*  TDEFER!-OP> MNOD (NODE) 
NSLOTS (FIX) SPECD (<OR FALSE ATOM>) STB POFF ANY? (ANY) NARG START:TAG STRV 
MAPLP (ATOM) STOP BTP BASEF MAYBE-FALSE DEST (<OR ATOM DATUM>) CD EXIT "MAPEX" 
APPLTAG "MAPAP" GMF RTAG TOT-SPEC <PRIMTYPE LIST> %<RGLOC MBINDERS T> TEMPV 
ERROR "NOT IMPLEMENTED MAPF/R TUPLES " %<RGLOC AC-A T> %<RGLOC AC-B T> %<RGLOC 
LOOPVARS-LENGTH T> ANY %<RGLOC SNODES T> DEALLOCATE <`PUSHJ  `P*  |SSPECS > 
"NOT IMPLEMENTED MAPF/R TUPLES" %<RGLOC MAPSTOP T> 
" NOT IMLEMENTED HAIRY MAPRET/STOP " <`SETZM  `(P) > <`SUB  `P*  [<1 (1)>]> <
`SUB  `TP*  [<(2) 2>]> FCNS]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,MAPFR-GEN PGLUE ![715827882 -22906492246 
-22906492246 -22906492246 -22548578305 -1 -1 -1 -1 -1 -1 -1 -4194304 0!]>> 


\ 

<SETG KEEP-IN-ACS %<RSUBR-ENTRY '[MAPFR-GEN KEEP-IN-ACS #DECL ("VALUE" ATOM <
LIST [REST SYMTAB]> <LIST [REST NODE]> ANY)] 641>> 

<SETG PUSH-STRUCS %<RSUBR-ENTRY '[MAPFR-GEN PUSH-STRUCS #DECL ("VALUE" <OR ATOM 
FALSE> <LIST [REST NODE]> ANY ANY <LIST [REST SYMTAB]> ANY)] 823>> 

<SETG REST-STRUCS %<RSUBR-ENTRY '[MAPFR-GEN REST-STRUCS #DECL ("VALUE" ATOM <
LIST [REST SYMTAB]> <LIST [REST NODE]> LIST ANY ANY ANY)] 1220>> 

<SETG FIND-FIRST-STRUC %<RSUBR-ENTRY '[MAPFR-GEN FIND-FIRST-STRUC #DECL ("VALUE"
ANY DATUM LIST ANY)] 1748>> 

<SETG DO-FINAL-SETUP %<RSUBR-ENTRY '[MAPFR-GEN DO-FINAL-SETUP #DECL ("VALUE" ANY
NODE ANY)] 1851>> 

<SETG DO-STACK-ARGS %<RSUBR-ENTRY '[MAPFR-GEN DO-STACK-ARGS #DECL ("VALUE" ANY 
ANY DATUM)] 1939>> 

\ 

<SETG DO-FUNNY-LAST %<RSUBR-ENTRY '[MAPFR-GEN DO-FUNNY-LAST #DECL ("VALUE" ANY 
NODE FIX ANY)] 2034>> 

<SETG MINS '![![`CAMGE  `CAMLE  `IMULM  `ADDM !] ![`CAMGE  `CAMLE  `FMPRM  
`FADRM !]!]> 

<SETG DO-FUNNY-HACK %<RSUBR-ENTRY '[MAPFR-GEN DO-FUNNY-HACK #DECL ("VALUE" ATOM 
DATUM <LIST FIX LIST> NODE NODE NODE)] 2100>> 

<SETG DO-LAST %<RSUBR-ENTRY '[MAPFR-GEN DO-LAST #DECL ("VALUE" ANY ANY ANY ANY)]
2381>> 

<SETG GOOD-CALL %<RSUBR-ENTRY '[MAPFR-GEN GOOD-CALL #DECL ("VALUE" ANY ANY)] 
2482>> 

<SETG SLOT-FIRST [<CHTYPE <MIN> FIX> <CHTYPE <MAX> FIX> 1 0]> 

<SETG FSLOT-FIRST [<MIN> <MAX> 1.0 0.0000000]> 

\ 

<SETG DO-FIRST-SETUP %<RSUBR-ENTRY '[MAPFR-GEN DO-FIRST-SETUP #DECL ("VALUE" <OR
ATOM FALSE> NODE ANY ANY ANY ANY ANY)] 2560>> 

\ 

<SETG DO-FIRST-SETUP-2 %<RSUBR-ENTRY '[MAPFR-GEN DO-FIRST-SETUP-2 #DECL ("VALUE"
<OR ATOM FALSE> NODE ANY <OR FALSE SYMTAB> ANY ANY ANY)] 2694>> 

\ 

<SETG MPARGS-GEN %<RSUBR-ENTRY '[MAPFR-GEN MPARGS-GEN #DECL ("VALUE" ANY ANY ANY
)] 3052>> 

\ 

<SETG STACKM %<RSUBR-ENTRY '[MAPFR-GEN STACKM #DECL ("VALUE" DATUM NODE DATUM 
ANY ANY FIX)] 3390>> 

<SETG ISET %<RSUBR-ENTRY '[MAPFR-GEN ISET #DECL ("VALUE" ANY ANY SYMTAB SYMTAB 
ANY ANY ANY ANY ANY)] 4053>> 

<SETG IISET %<RSUBR-ENTRY '[MAPFR-GEN IISET #DECL ("VALUE" ANY ANY SYMTAB DATUM 
ANY)] 5299>> 

<SETG DO-EVEN-FUNNIER-HACK %<RSUBR-ENTRY '[MAPFR-GEN DO-EVEN-FUNNIER-HACK #DECL 
("VALUE" ANY DATUM ANY NODE NODE NODE ANY)] 5481>> 

\ 

<SETG HMAPFR %<RSUBR-ENTRY '[MAPFR-GEN HMAPFR #DECL ("VALUE" ANY NODE ANY <LIST 
[REST NODE]>)] 5634>> 

<SETG BLT-HACK %<RSUBR-ENTRY '[MAPFR-GEN BLT-HACK #DECL ("VALUE" <OR ATOM FALSE>
ANY ANY ANY)] 8131>> 

<SETG NO-INTERFERE %<RSUBR-ENTRY '[MAPFR-GEN NO-INTERFERE #DECL ("VALUE" <OR 
ATOM FALSE> NODE <LIST [REST SYMTAB]>)] 8695>> 

\ 

<SETG GEN-TAGS %<RSUBR-ENTRY '[MAPFR-GEN GEN-TAGS #DECL ("VALUE" ANY LIST ANY)] 
8792>> 

<SETG MOPTG %<RSUBR-ENTRY '[MAPFR-GEN MOPTG #DECL ("VALUE" ANY SYMTAB)] 8899>> 

<SETG MOPTG2 %<RSUBR-ENTRY '[MAPFR-GEN MOPTG2 #DECL ("VALUE" ANY SYMTAB)] 8915>> 

<SETG NOTIMP %<RSUBR-ENTRY '[MAPFR-GEN NOTIMP #DECL ("VALUE" ANY ANY)] 8931>> 

<SETG MAPLEAVE-GEN %<RSUBR-ENTRY '[MAPFR-GEN MAPLEAVE-GEN #DECL ("VALUE" ANY 
NODE ANY)] 8946>> 

<SETG MAP:UNBIND %<RSUBR-ENTRY '[MAPFR-GEN MAP:UNBIND #DECL ("VALUE" ANY ANY ANY
)] 9073>> 

\ 

<SETG MAPRET-STOP-GEN %<RSUBR-ENTRY '[MAPFR-GEN MAPRET-STOP-GEN #DECL ("VALUE" 
ANY NODE ANY)] 9126>> 

\ 

<SETG DO-FUNNY-MAPRET %<RSUBR-ENTRY '[MAPFR-GEN DO-FUNNY-MAPRET #DECL ("VALUE" 
ANY NODE FIX <LIST [REST NODE]> NODE)] 9811>> 

<SETG AP? %<RSUBR-ENTRY '[MAPFR-GEN AP? #DECL ("VALUE" ANY NODE)] 10024>> 
