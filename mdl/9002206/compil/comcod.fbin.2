'<PCODE "COMCOD">

<BLOCK (<ROOT>)> 

CSOURCE 

<ENDBLOCK> 

<BLOCK (!.OBLIST <GET PACKAGE OBLIST>)> 

<SETG MESSAGE  %<RSUBR!- '[ %<PCODE!- "COMCOD" 0> MESSAGE #DECL ("VALUE" ATOM 
ANY ANY "TUPLE" ANY) ADDRESS:PAIR ADDRESS:C REGSTO ASSEMBLE1!-CODING PEEP 
EXP-MAC CDUP PRT SINACS RET-TMP-AC STACK:L TMPAC GETREG TOACV SGETREG DATUM MINL
 ISTYPE? TYPE-AND MESSAGE NODE-COMPLAIN DEBUGSW (ERROR NOTE WARNING 
INCONSISTANCY INCONSISTENCY) (ERRS NOTES WARNS INCONS INCONS) T OUTCHAN "*** " 
"	" ATOM %<TYPE-C NODE VECTOR> NODE-COMPLAIN " " ERROR 
" COMPILATION ABORTED " COMPILER INCONSISTANCY INCONSISTENCY 
" INFORM  BKD; OR CLR; " CODE:PTR %<TYPE-W ADDRESS:C LIST> %<TYPE-W ADDRESS:PAIR
LIST> %<TYPE-W TYPED:ADDRESS LIST> "TAG" TAG:COUNT %<RGLOC TMP:OBL T> %<TYPE-W 
OPCODE!-OP WORD> LOCAL-TAGS "MULTIPLY DEFINED TAG " " UNDEFINED LABEL (S) " GLUE
 PSEUDO!-OP SETG <ANDB 262143 <CHTYPE .HERE!-OP FIX>> <NOT FALSE> ![CHANNEL 
RSUBR ATOM!] ![UVECTOR VECTOR!] %<TYPE-C AC VECTOR> %<TYPE-W DATUM LIST> 
GETYP!-OP <TYPE-CODE!-OP FALSE> %<TYPE-W MUDREF!-OP WORD> MCALL!-OP %<RGLOC AC-A
T> %<TYPE-W AC VECTOR> %<RGLOC AC-B T> %<TYPE-C TEMP VECTOR> %<TYPE-C ADDRESS:C 
LIST> %<TYPE-C ADDRESS:PAIR LIST> %<TYPE-C OFFPTR LIST> #ADDRESS:PAIR (|$TTB  
`TB ) ![STORAGE UVECTOR!] %<RGLOC ACO T> TYPE-WORD!-OP "BAD ADDRESS " %<TYPE-W 
TEMP VECTOR> "INCONSISTENCY" "TEMPORARY OFFSET BAD" AC-HACK (STACK) STK BSTB 
TMPS (FUNNY-STACK) FCN - WORD LIST [0] MQUOTE!-OP QUOTE %<RGLOC NO-DATUM T> %<
TYPE-C DATUM LIST> (-1) FLUSHED ANY-AC FIX DONT-CARE (`MOVE  `MOVEI  `MOVNI  
`MOVSI ) %<TYPE-C OPCODE!-OP WORD> TITLE DECLARE!-OP ("VALUE" ATOM) RDCL 
SUB-ENTRY!-OP %<TYPE-W IRSUBR LIST> <`SUBM  `M*  `(P) > ACALL!-OP <`JRST  
|MPOPJ > <`JRST  |FMPOPJ > %<TYPE-W NODE VECTOR> BIN-FLG CSOURCE CODE:TOP PEEP 
OBLIST SPECD <`MOVE  `TP*  `FRM > <`PUSHJ  `P*  |SSPECS > PSLOT PSTACK 
DEALLOCATE #ADDRESS:C (`(C) ) START:TAG <`SUB  `O*  `M > <`HRLI  `O*  TTP!-OP> <

`PUSH  `TP*  `O* > TTP!-OP <`SUB  `A*  `M > %<RGLOC BIND-BEGIN T> NTSLOTS 
UNBOUND <TYPE-WORD!-OP UNBOUND> [-1] ALLOCATE:SLOTS TTP!-MUDDLE <TYPE-WORD!-OP 
TIME> <TYPE-CODE!-OP TIME>]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,MESSAGE PGLUE ![715827882 -22900899841 -1 -1 
-1 -1 -1 -256 0!]>> 


"***** BEGINNING OF THE IMPLEMENTATION SECTION *****" 

<SETG EMIT %<RSUBR-ENTRY '[MESSAGE EMIT #DECL ("VALUE" LIST ANY)] 174>> 

<SETG BIND-BEGIN [<FORM (<CHTYPE <TYPE-C ATOM> FIX>) -1>]> 

<SETG INSTRUCTION ,FORM> 

"Special datum meaning nothing returned." 

<SETG NO-DATUM <CHTYPE (FLUSHED FLUSHED) DATUM>> 

<NEWTYPE ADDRESS:C LIST> 

<SETG ADDRESS:C %<RSUBR-ENTRY '[MESSAGE ADDRESS:C #DECL ("VALUE" ADDRESS:C 
"TUPLE" ANY)] 205>> 

<NEWTYPE ADDRESS:PAIR LIST> 

<SETG ADDRESS:PAIR %<RSUBR-ENTRY '[MESSAGE ADDRESS:PAIR #DECL ("VALUE" 
ADDRESS:PAIR "TUPLE" ANY)] 271>> 

<NEWTYPE TYPED:ADDRESS LIST> 

<SETG TYPED:ADDRESS %<RSUBR-ENTRY '[MESSAGE TYPED:ADDRESS #DECL ("VALUE" 
TYPED:ADDRESS ANY ANY)] 337>> 

<NEWTYPE IRSUBR LIST> 

<OR <GASSIGNED? TDEFER!-OP> <SETG TDEFER!-OP <SQUOTA |TDEFER >>> 

<OR <GASSIGNED? TTP!-OP> <SETG TTP!-OP <SQUOTA |TTP >>> 

<OR <GASSIGNED? TTB!-OP> <SETG TTB!-OP <SQUOTA |TTB >>> 

<SETG FRAMACT 9> 

<SETG FRAMLN 7> 

<SETG MAKE:TAG %<RSUBR-ENTRY '[MESSAGE MAKE:TAG #DECL ("VALUE" ATOM "OPTIONAL" 
STRING ATOM)] 357>> 

<SETG BRANCH:TAG %<RSUBR-ENTRY '[MESSAGE BRANCH:TAG #DECL ("VALUE" LIST ANY)] 
422>> 

<SETG LABEL:TAG %<RSUBR-ENTRY '[MESSAGE LABEL:TAG #DECL ("VALUE" LIST ANY)] 443>
> 

<SETG ISTAG? %<RSUBR-ENTRY '[MESSAGE ISTAG? #DECL ("VALUE" <OR ATOM FALSE> ANY)]
457>> 

<SETG UNIQUE:TAG %<RSUBR-ENTRY '[MESSAGE UNIQUE:TAG #DECL ("VALUE" ATOM ATOM <OR
ATOM FALSE>)] 496>> 

<SETG CHECK-LOCAL-TAGS %<RSUBR-ENTRY '[MESSAGE CHECK-LOCAL-TAGS #DECL ("VALUE" <
OR ATOM FALSE> LIST)] 607>> 

<SETG LABEL:OFF %<RSUBR-ENTRY '[MESSAGE LABEL:OFF #DECL ("VALUE" LIST ANY)] 654>
> 

<SETG TRUE:BRANCH:TAG %<RSUBR-ENTRY '[MESSAGE TRUE:BRANCH:TAG #DECL ("VALUE" 
LIST ANY ANY)] 692>> 

<SETG FALSE:BRANCH:TAG %<RSUBR-ENTRY '[MESSAGE FALSE:BRANCH:TAG #DECL ("VALUE" 
LIST ANY ANY)] 715>> 

<SETG D:B:TAG %<RSUBR-ENTRY '[MESSAGE D:B:TAG #DECL ("VALUE" LIST ANY DATUM <OR 
FALSE ATOM> ANY)] 738>> 

<SETG GEN:FALSE %<RSUBR-ENTRY '[MESSAGE GEN:FALSE #DECL ("VALUE" LIST)] 874>> 

<SETG SUBR:CALL %<RSUBR-ENTRY '[MESSAGE SUBR:CALL #DECL ("VALUE" LIST ANY ANY)] 
895>> 

<SETG FUNCTION:VALUE %<RSUBR-ENTRY '[MESSAGE FUNCTION:VALUE #DECL ("VALUE" DATUM
"OPTIONAL" ANY)] 919>> 

<SETG TMP:OBL <MOBLIST <OR <LOOKUP "TMP" <ROOT>> <INSERT "TMP" <ROOT>>>>> 

<SETG ADDR:TYPE %<RSUBR-ENTRY '[MESSAGE ADDR:TYPE #DECL ("VALUE" ANY <DATUM ANY 
ANY>)] 972>> 

<SETG ADDR:TYPE1 %<RSUBR-ENTRY '[MESSAGE ADDR:TYPE1 #DECL ("VALUE" ANY ANY)] 992
>> 

<SETG GETUVT %<RSUBR-ENTRY '[MESSAGE GETUVT #DECL ("VALUE" <PRIMTYPE WORD> AC 
"OPTIONAL" AC ANY)] 1168>> 

<SETG TYPE:SYM %<RSUBR-ENTRY '[MESSAGE TYPE:SYM #DECL ("VALUE" FORM ANY)] 1276>> 

<SETG ADDR:VALUE %<RSUBR-ENTRY '[MESSAGE ADDR:VALUE #DECL ("VALUE" ANY <DATUM 
ANY ANY>)] 1293>> 

<SETG ADDR:VALUE1 %<RSUBR-ENTRY '[MESSAGE ADDR:VALUE1 #DECL ("VALUE" ANY ANY)] 
1314>> 

<SETG TEMP:ADDR %<RSUBR-ENTRY '[MESSAGE TEMP:ADDR #DECL ("VALUE" ANY TEMP FIX)] 
1479>> 

<SETG STEMP:ADDR %<RSUBR-ENTRY '[MESSAGE STEMP:ADDR #DECL ("VALUE" <OR ADDRESS:C
LIST> TEMP "OPTIONAL" FIX)] 1636>> 

"FIX:ADDR TAKES TWO ARGUMENTS. THESE ARE A NEGATIVE AND POSITIVE OFFSETS ON THE STACK
 AND BUILDS A COMPOSITE OFFSET ELIMINATING DUPLICATION" 

<SETG FIX:ADDR %<RSUBR-ENTRY '[MESSAGE FIX:ADDR #DECL ("VALUE" <LIST <OR FIX 
FORM>> LIST ANY)] 1777>> 

<SETG DEL %<RSUBR-ENTRY '[MESSAGE DEL #DECL ("VALUE" LIST <LIST ANY> FIX)] 1939>
> 

<SETG REFERENCE:ADR %<RSUBR-ENTRY '[MESSAGE REFERENCE:ADR #DECL ("VALUE" <OR 
ADDRESS:C ADDRESS:PAIR> ANY)] 1975>> 

<SETG REFERENCE %<RSUBR-ENTRY '[MESSAGE REFERENCE #DECL ("VALUE" DATUM ANY)] 
2050>> 

<SETG STACK:ARGUMENT %<RSUBR-ENTRY '[MESSAGE STACK:ARGUMENT #DECL ("VALUE" DATUM
<DATUM ANY ANY>)] 2069>> 

<SETG STACK:ADR %<RSUBR-ENTRY '[MESSAGE STACK:ADR #DECL ("VALUE" ANY ANY)] 2141>
> 

<SETG MOVE:ARG %<RSUBR-ENTRY '[MESSAGE MOVE:ARG #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 2186>> 

<SETG MOVE:TYP %<RSUBR-ENTRY '[MESSAGE MOVE:TYP #DECL ("VALUE" ANY ANY ANY)] 
3164>> 

<SETG MOVE:VALUE %<RSUBR-ENTRY '[MESSAGE MOVE:VALUE #DECL ("VALUE" ANY ANY ANY)]
3305>> 

<SETG ACMEMQ %<RSUBR-ENTRY '[MESSAGE ACMEMQ #DECL ("VALUE" <OR ATOM FALSE> AC 
DATUM)] 3401>> 

<SETG EXCH-ACL %<RSUBR-ENTRY '[MESSAGE EXCH-ACL #DECL ("VALUE" ANY AC AC <LIST [
REST DATUM]> "OPTIONAL" ANY)] 3474>> 

<SETG EXCH-AC %<RSUBR-ENTRY '[MESSAGE EXCH-AC #DECL ("VALUE" <OR FALSE DATUM AC>
AC AC DATUM)] 3540>> 

<SETG FIX-ACLINK %<RSUBR-ENTRY '[MESSAGE FIX-ACLINK #DECL ("VALUE" <OR <LIST ANY
> AC> AC ANY ANY)] 3732>> 

<SETG ACS? %<RSUBR-ENTRY '[MESSAGE ACS? #DECL ("VALUE" <PRIMTYPE LIST> <PRIMTYPE
LIST>)] 3794>> 

<SETG IMCHK %<RSUBR-ENTRY '[MESSAGE IMCHK #DECL ("VALUE" LIST <LIST ANY ANY> <
PRIMTYPE WORD> ANY "OPTIONAL" ANY)] 3871>> 

<SETG GROUP:INITIAL %<RSUBR-ENTRY '[MESSAGE GROUP:INITIAL #DECL ("VALUE" LIST 
ANY)] 4059>> 

<SETG FUNCTION:INITIAL %<RSUBR-ENTRY '[MESSAGE FUNCTION:INITIAL #DECL ("VALUE" 
LIST ANY)] 4139>> 

<SETG SUB:INITIAL %<RSUBR-ENTRY '[MESSAGE SUB:INITIAL #DECL ("VALUE" LIST ANY)] 
4177>> 

<SETG INT:INITIAL %<RSUBR-ENTRY '[MESSAGE INT:INITIAL #DECL ("VALUE" IRSUBR ANY)
] 4208>> 

<SETG SUB:INT:INITIAL %<RSUBR-ENTRY '[MESSAGE SUB:INT:INITIAL #DECL ("VALUE" 
LIST ANY)] 4230>> 

<SETG FCN:INT:INITIAL %<RSUBR-ENTRY '[MESSAGE FCN:INT:INITIAL #DECL ("VALUE" 
LIST ANY)] 4261>> 

<SETG INT:LOSER:INITIAL %<RSUBR-ENTRY '[MESSAGE INT:LOSER:INITIAL #DECL ("VALUE"
LIST ANY NODE)] 4295>> 

<SETG FCNSUB:FINAL %<RSUBR-ENTRY '[MESSAGE FCNSUB:FINAL #DECL ("VALUE" LIST ANY)
] 4536>> 

<SETG FS:INT:FINAL %<RSUBR-ENTRY '[MESSAGE FS:INT:FINAL #DECL ("VALUE" LIST ANY)
] 4558>> 

<SETG INT:FINAL %<RSUBR-ENTRY '[MESSAGE INT:FINAL #DECL ("VALUE" <LIST ANY> NODE
)] 4581>> 

<SETG ASSEM? %<RSUBR-ENTRY '[MESSAGE ASSEM? #DECL ("VALUE" ANY ANY "OPTIONAL" 
ANY)] 4611>> 

<SETG BLOCK:INITIAL %<RSUBR-ENTRY '[MESSAGE BLOCK:INITIAL #DECL ("VALUE" ATOM)] 
4721>> 

<SETG BLOCK:FINAL %<RSUBR-ENTRY '[MESSAGE BLOCK:FINAL #DECL ("VALUE" ATOM)] 4729
>> 

<SETG PROG:END %<RSUBR-ENTRY '[MESSAGE PROG:END #DECL ("VALUE" LIST)] 4737>> 

<SETG UNBIND:FUNNY %<RSUBR-ENTRY '[MESSAGE UNBIND:FUNNY #DECL ("VALUE" <OR FALSE
LIST> ANY "TUPLE" ANY)] 4755>> 

<SETG UNBIND:LOCS %<RSUBR-ENTRY '[MESSAGE UNBIND:LOCS #DECL ("VALUE" <OR FALSE 
LIST> ANY ANY "OPTIONAL" ANY)] 4822>> 

<SETG POP:LOCS %<RSUBR-ENTRY '[MESSAGE POP:LOCS #DECL ("VALUE" <OR ATOM FALSE> 
LIST LIST)] 4885>> 

<SETG COPY:ARGPNTR %<RSUBR-ENTRY '[MESSAGE COPY:ARGPNTR #DECL ("VALUE" LIST)] 
5210>> 

<SETG BUMP:ARGPNTR %<RSUBR-ENTRY '[MESSAGE BUMP:ARGPNTR #DECL ("VALUE" LIST 
"OPTIONAL" FIX)] 5245>> 

<SETG BUMP:CNTR %<RSUBR-ENTRY '[MESSAGE BUMP:CNTR #DECL ("VALUE" LIST "OPTIONAL"
FIX)] 5298>> 

<SETG TEST:ARGPNTR %<RSUBR-ENTRY '[MESSAGE TEST:ARGPNTR #DECL ("VALUE" LIST ANY)
] 5337>> 

<SETG REFERENCE:ARGPNTR %<RSUBR-ENTRY '[MESSAGE REFERENCE:ARGPNTR #DECL ("VALUE"
DATUM)] 5361>> 

<SETG TUPLE:FINAL %<RSUBR-ENTRY '[MESSAGE TUPLE:FINAL #DECL ("VALUE" DATUM)] 
5373>> 

<SETG REFERENCE:STACK:ADR %<RSUBR-ENTRY '[MESSAGE REFERENCE:STACK:ADR #DECL (
"VALUE" ADDRESS:C ANY "OPTIONAL" ANY)] 5402>> 

<SETG REFERENCE:STACK %<RSUBR-ENTRY '[MESSAGE REFERENCE:STACK #DECL ("VALUE" 
DATUM ANY)] 5459>> 

<SETG SPEC:REFERENCE:STACK %<RSUBR-ENTRY '[MESSAGE SPEC:REFERENCE:STACK #DECL (
"VALUE" DATUM ANY ANY)] 5480>> 

<SETG MAKE:ENV %<RSUBR-ENTRY '[MESSAGE MAKE:ENV #DECL ("VALUE" DATUM)] 5505>> 

<SETG ACT:INITIAL %<RSUBR-ENTRY '[MESSAGE ACT:INITIAL #DECL ("VALUE" LIST)] 5534
>> 

<SETG ACT:FINAL %<RSUBR-ENTRY '[MESSAGE ACT:FINAL #DECL ("VALUE" LIST)] 5619>> 

<SETG MAKE:ACT %<RSUBR-ENTRY '[MESSAGE MAKE:ACT #DECL ("VALUE" DATUM)] 5648>> 

<SETG BUILD:FRAME %<RSUBR-ENTRY '[MESSAGE BUILD:FRAME #DECL ("VALUE" LIST ANY)] 
5677>> 

<SETG SEGMENT:LIST %<RSUBR-ENTRY '[MESSAGE SEGMENT:LIST #DECL ("VALUE" LIST ANY 
ANY)] 5724>> 

<SETG SEGMENT:STACK %<RSUBR-ENTRY '[MESSAGE SEGMENT:STACK #DECL ("VALUE" LIST 
ANY ANY)] 5812>> 

<SETG SEGMENT:FINAL %<RSUBR-ENTRY '[MESSAGE SEGMENT:FINAL #DECL ("VALUE" LIST 
ANY)] 5873>> 

<SETG PCOUNTER %<RSUBR-ENTRY '[MESSAGE PCOUNTER #DECL ("VALUE" LIST ANY)] 5910>> 

<SETG COUNTP %<RSUBR-ENTRY '[MESSAGE COUNTP #DECL ("VALUE" LIST)] 5938>> 

<SETG PUSH:BIND %<RSUBR-ENTRY '[MESSAGE PUSH:BIND #DECL ("VALUE" ANY ANY ANY ANY
)] 5956>> 

<SETG PUSH:PAIR %<RSUBR-ENTRY '[MESSAGE PUSH:PAIR #DECL ("VALUE" DATUM ANY)] 
6000>> 

<SETG PUSH:ATB %<RSUBR-ENTRY '[MESSAGE PUSH:ATB #DECL ("VALUE" ANY ANY)] 6014>> 

<SETG STORE:BIND %<RSUBR-ENTRY '[MESSAGE STORE:BIND #DECL ("VALUE" LIST ANY ANY)
] 6045>> 

<SETG STORE:PAIR %<RSUBR-ENTRY '[MESSAGE STORE:PAIR #DECL ("VALUE" ANY ANY ANY)]
6170>> 

<SETG BIND:END %<RSUBR-ENTRY '[MESSAGE BIND:END #DECL ("VALUE" LIST)] 6204>> 

<SETG REFERENCE:UNBOUND %<RSUBR-ENTRY '[MESSAGE REFERENCE:UNBOUND #DECL ("VALUE"
DATUM)] 6225>> 

<SETG REFERENCE:ARG %<RSUBR-ENTRY '[MESSAGE REFERENCE:ARG #DECL ("VALUE" DATUM 
FIX)] 6242>> 

<SETG TEST:ARG %<RSUBR-ENTRY '[MESSAGE TEST:ARG #DECL ("VALUE" LIST ANY ANY)] 
6267>> 

<SETG SALLOC:SLOTS %<RSUBR-ENTRY '[MESSAGE SALLOC:SLOTS #DECL ("VALUE" LIST 
"TUPLE" ANY)] 6329>> 

<SETG ALLOC:SLOTS %<RSUBR-ENTRY '[MESSAGE ALLOC:SLOTS #DECL ("VALUE" LIST 
"TUPLE" ANY)] 6367>> 

<SETG FAST:VAL %<RSUBR-ENTRY '[MESSAGE FAST:VAL #DECL ("VALUE" LIST)] 6483>> 

<SETG FAST:SET %<RSUBR-ENTRY '[MESSAGE FAST:SET #DECL ("VALUE" LIST)] 6504>> 

<SETG FAST:GVAL %<RSUBR-ENTRY '[MESSAGE FAST:GVAL #DECL ("VALUE" LIST)] 6525>> 

<SETG FAST:SETG %<RSUBR-ENTRY '[MESSAGE FAST:SETG #DECL ("VALUE" LIST)] 6546>> 

<SETG TIME:STACK %<RSUBR-ENTRY '[MESSAGE TIME:STACK #DECL ("VALUE" LIST)] 6567>> 

<SETG TIME:CHECK %<RSUBR-ENTRY '[MESSAGE TIME:CHECK #DECL ("VALUE" ATOM)] 6624>> 

<ENDBLOCK> 
