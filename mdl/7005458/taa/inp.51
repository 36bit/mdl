.BEGIN READER
.AUXIL
; COMMAND READER.
; PUSHJ P,GETLIN READS TO AN ALTMODE AND FILLS IN THE INPUT BUFFER
; ACCORDINGLY
; TAKES BUFFER IN B
; BUFPRM	; PROMPT FOR THIS BUFFER (NOT A BYTE POINTER)
; BUFBEG	; REAL BEGINNING OF BUFFER
; BUFFCH	; FIRST VISIBLE CHARACTER
; BUFNCH	; NEXT FREE CHARACTER
; BUFLEN	; TOTAL LENGTH OF BUFFER BLOCK
; BUFVLN	; LENGTH OF VISIBLE BLOCK
; BUFCCT	; TOTAL # CHARS HERE
; BUFVCT	; # VISIBLE CHARACTERS
; BUFHLP	; ADDRESS TO PUSHJ TO WHEN ? IS TYPED

;.M"GETBUF	; MAIN ENTRY
;.M"REPPER	; REDISPLAY BUFFER
;.M"RCLEAR	; CLEAR SCREEN FIRST
;.M"INREAD	; -1 IF IN READER
; XCTRUB	; INSTRUCTION TO TO RUBOUT
; RUBFLS	; FLUSH
; RUBECH	; DON'T FLUSH
; TOFCI		; FULL-CHARACTER INPUT
; TOERS		; SELECTIVE ERASE
; CRBRK		; FALL OUT ON CR
; KEEPQT	; IF -1, QUOTE CHARACTER GOES IN BUFFER AS WELL AS QUOTING
; LSTBRK	; LAST TERMINATOR TYPED

CBUF=16

.M"BUFPRM==0
.M"BUFBEG==1
.M"BUFFCH==2
.M"BUFNCH==3
.M"BUFLEN==4
.M"BUFVLN==5
.M"BUFCCT==6
.M"BUFVCT==7
.M"BUFHLP==10

DEFINE .M"BUFMAKE NAME,LEN,HLP,PROMPT
ZZZ==.
ZZ==LEN/5
	BLOCK	ZZ
NAME=.
	[ASCIZ	/PROMPT/]
	440700,,ZZZ
	440700,,ZZZ
	440700,,ZZZ
	5*ZZ
	5*ZZ
	0
	0
	HLP
TERMIN

DEFINE ECHO
	.IOT TTYO,A
TERMIN

	BUFMAKE FILBUF,200,HLPFIL,[File:  ]	; Buffer for ctrl-Y command
FINBUF:	BLOCK	40
FINBLN==5*40
FILBLK:
FILDEV:	SIXBIT	/DSK/
FILSNM:	0
FILFN1:	0
FILFN2:	SIXBIT	/>/
DSKI:	0				; SET UP BY CHNFND FOR READING FROM DISK
ENDFIL:	0				; -1 WHEN READING LAST CHUNK OF FILE
PRMPT2:	0
.M"INREAD:	0
.M"RQUOTE:	0			; LAST CHARACTER WAS CTRL-Q
.M"XCTRUB:	0
.M"TOFCI:	0
.M"TOERS:	0
CHPOS:	0
CVPOS:	0
.M"KEEPQT:	0
.M"CRBRK:	0
CTRLYQ:	-1			; CTRL-Y ALLOWED IF NON-ZERO
.M"LSTBRK:	0

RCMDNX:	MOVEM	B,BUFNCH(CBUF)
	SKIPGE	C
	 MOVEI	C,0
	MOVEM	C,BUFVCT(CBUF)
	JRST	RCMD

.M"GETBUF:
	PUSH	P,CBUF
	MOVE	CBUF,B		; SET UP CURRENT BUFFER
	PUSH	P,C
	PUSH	P,D
RCMDXX:
RCMD:	MOVE	B,BUFNCH(CBUF)	; POINTER TO NEXT FREE CHARACTER
	MOVE	C,BUFVCT(CBUF)	; # OF CHARACTERS ALREADY HERE
	SKIPE	TOERS		; SKIP DISPLAY ON PRINTING TERMINAL
	 JUMPN	C,[PUSHJ P,REPPER
		   JRST RCMD0]	; DISPLAY BUFFER IF NON-EMPTY
	PUSHJ	P,PPRMPT
RCMD0:	SETOM	INREAD		; HAVE REASONABLE INPUT BUFFER TO REDISPLAY
RCMD1:	.IOT	TTYI,A
	SKIPE	RQUOTE		; IN QUOTE MODE?
	 JRST	[SETZM	RQUOTE
		 SKIPE	KEEPQT	; WANT IT TO STAY?
		  JRST	RCMDL	; YES
		 SKIPN	TOERS	; SELECTIVE ERASE?
		  JRST	RCMDL
		 PUSH	P,A
		 MOVEI	A,^Q
		 PUSHJ	P,RUBFLS	; ERASE IT
		 POP	P,A
		 JRST	RCMDL]
	CAIG	A,33		
	 JRST	@CHRTAB(A)	; DISPATCH ON SPECIAL CHARACTERS (^@-)
	CAIN	A,177
	 JRST	RUB
	CAIN	A,"?
	 JRST	[JUMPN	C,RCMDL
		 SKIPN	BUFHLP(CBUF)
		  JRST	RCMDL
		 ECHO
		 PUSHJ	P,@BUFHLP(CBUF)
		 JRST	RCMDNX]
RCMDL:	ECHO
RCMDLN:	PUSHJ	P,ADDCHR
	CAIE	A,^M
	 JRST	RCMD1
	MOVEI	A,^J
	JRST	RCMDL

; ADD A CHR AT RANDOM (MAINLY USED BY CHRSWP)
RADDCH:	ECHO
	PUSHJ	P,ADDCHR
	CAIE	A,^M
	 JRST	CPOPJ
	MOVEI	A,^J
	ECHO
	PUSHJ	P,ADDCHR
	POPJ	P,

ADDCHR:	ADDI	C,1
	CAML	C,BUFVLN(CBUF)
	 JRST	[MOVEM	C,BUFVCT(CBUF)
		 MOVEM	B,BUFNCH(CBUF)	; MAKE BUFFER CONSISTENT
		 PUSHJ	P,BUFGRO
		 MOVE	B,BUFNCH(CBUF)
		 JRST	.+1]
	IDPB	A,B
	POPJ	P,

; DISPATCH TABLE FOR CONTROL CHARACTERS
CHRTAB:	RSTBUF			; CLEAR BUFFER
	RCMDL			; ^A
	RCMDL			; ^B
	RCMDXE			; ^C--EXIT
	[PUSHJ	P,RREPEA
	 JRST	RCMD1]		; ^D--REDISPLAY
	RCMDL			; ^E
	RCMDL			; ^F
	QUIT			; ^G--QUIT
	RCMDL			; ^H
	RCMDL			; ^I
	RCMDL			; ^J
	RCMDL			; ^K
	[PUSHJ	P,RCLEAR
	 JRST	RCMD1]		; ^L--CLEAR AND REDISPLAY
	[SKIPN	CRBRK
	  JRST	RCMDL
	 JRST	RCMDXE]		; ^M--CR
	RCMDL			; ^N
	RCMDL			; ^O
	RCMDL			; ^P
	[SETOM	RQUOTE
	 ECHO		; ECHO THE CROCK
	 SKIPN	KEEPQT
	  JRST	RCMD1
	 JRST	RCMDLN]		; ^Q--QUOTE
	RCMDL			; ^R
	RCMDL			; ^S
	CHRSWP			; ^T
	LNFLUS			; ^U
	RCMDL			; ^V
	WDFLUS			; ^W--FLUSH WORD
	LNFLUS			; ^X--FLUSH LINE
	[SKIPN	CTRLYQ
	  JRST	RCMDL
	 PUSHJ	P,RDFILE
	 JRST	RCMD1]		; ^Y--READ FILE
	RCMDL			; ^Z
	RCMDXE			; --EXIT

RCMDXE:	ECHO			; ECHO NON-SYMBOL ALTMODES
RCMDX1:	MOVEM	A,LSTBRK	; SAVE THIS
	MOVEI	A,0		; DEPOSIT ZERO
	IDPB	A,B
	DBP	B
	MOVEM	C,BUFVCT(CBUF)
	MOVEM	B,BUFNCH(CBUF)
	MOVE	B,BUFLEN(CBUF)	; # CHARS IN BUFFER
	SUB	B,BUFVLN(CBUF)	; # INVISIBLE CHARS
	ADDI	B,(C)		; PLUS # VISIBLE CHARS
	MOVEM	B,BUFCCT(CBUF)	; GIVES TOTAL # CHARS
	SETZM	INREAD
	SKIPE	C
	 AOS	-3(P)
	POP	P,D
	POP	P,C
	POP	P,CBUF
	POPJ	P,		; EXIT

RSTBUF:	ECHO			; ECHO THE CHAR AND CLEAR THE BUFFER
RSTBF1:	OASCR	TTYO,[0]
	SETZ	C,
	PUSHJ	P,CLINBI
	MOVE	B,BUFFCH(CBUF)
	PUSHJ	P,REPPER
	JRST	RCMD1

PPRMPT:	OCTLP	TTYO,"A
	OASC	TTYO,@BUFPRM(CBUF)
	SKIPE	PRMPT2
	 OASC	TTYO,@PRMPT2
	POPJ	P,

RREPEA:	ECHO
	OASCR	TTYO,[0]		; RETYPE LINE
	JRST	REPPER
.M"RCLEAR:
	OCTLP	TTYO,"C
.M"REPPER:
	PUSHJ	P,PPRMPT
	OBPTR	TTYO,BUFFCH(CBUF)
	POPJ	P,

; CLEAR THE INPUT BUFFER

.M"CLINBF:
	PUSH	P,CBUF
	MOVE	CBUF,B
	PUSHJ	P,CLINBI
	POP	P,CBUF
	POPJ	P,

; INTERNAL ENTRY
CLINBI:	PUSH	P,A
	PUSH	P,B
	PUSH	P,C
	MOVE	A,BUFFCH(CBUF)
	MOVE	B,BUFVLN(CBUF)
	JUMPL	A,CLINB1		; ALREADY ON WORD BOUNDARY
	MOVEI	C,0
CLINBL:	TLNE	A,760000
	 CAIA
	  AOJA	A,CLINB1		; NOW ON WORD BOUNDARY
	IDPB	C,A
	SOJA	B,CLINBL
CLINB1:	SETZM	(A)
	IDIVI	B,5			; # WORDS TO BE CLOBBERED
	ADDI	B,-1(A)			; WHERE TO STOP
	HRLS	A
	ADDI	A,1	
	BLT	A,(B)
	MOVE	A,BUFFCH(CBUF)
	MOVEM	A,BUFNCH(CBUF)
	SETZM	BUFVCT(CBUF)
	MOVE	A,BUFLEN(CBUF)
	SUB	A,BUFVLN(CBUF)
	MOVEM	A,BUFCCT(CBUF)
	POP	P,C
	POP	P,B
	POP	P,A
	POPJ	P,

; GROW THE BUFFER IN CBUF (DOUBLE ITS SIZE).
BUFGRO:	PUSH	P,A
	PUSH	P,B
	PUSH	P,C
	MOVE	A,BUFLEN(CBUF)
	IDIVI	A,5
	LSH	A,1
	IBLOCK	C,(A)			; GET THE STORAGE
	PUSH	P,C
	MOVE	A,BUFLEN(CBUF)
	ADDM	A,BUFLEN(CBUF)
	ADDM	A,BUFVLN(CBUF)		; AOS COUNTS
	HRL	C,BUFBEG(CBUF)		; BEGINNING OF BUFFER--BLT POINTER
	IDIVI	A,5
	ADDI	A,-1(C)
	BLT	C,(A)			; TRANSFER CHARACTERS
	POP	P,C
	HRRZ	B,BUFBEG(CBUF)
	SUB	C,B
	ADDM	C,BUFBEG(CBUF)
	ADDM	C,BUFFCH(CBUF)
	ADDM	C,BUFNCH(CBUF)		; UPDATE POINTERS
	POP	P,C
	POP	P,B
	POP	P,A
	POPJ	P,

SUBTTL	FILE INPUT HACKERY

RDFILE:	PUSH	P,KEEPQT
	PUSH	P,CRBRK			; SAVE SWITCHES
	PUSH	P,CTRLYQ		; WE'LL WANT TO DISALLOW CTRL-Y IN HERE
	PUSH	P,INREAD
	PUSH	P,D
	PUSH	P,E
	PUSH	P,F			; SAVE RANDOM AC'S
	PUSH	P,A
	PUSH	P,B			; SAVE NEXT-CHAR POINTER FOR CURRENT BUFFER
	PUSH	P,C			; AND SO ON
	SKIPE	FILSNM			; FIRST TIME CALLED?
	 JRST	NODEF
	.SUSET	[.RXUNAM,,A]		; INITIALIZE DEFAULTS
	MOVEM	A,FILSNM
	MOVEM	A,FILFN1
NODEF:	SETOM	KEEPQT			; KEEP QUOTES
	SETOM	CRBRK			; TERMINATE ON CR
	SETZM	CTRLYQ			; DISALLOW CTRL-Y
	MOVEI	B,FILBUF
	PUSHJ	P,CLINBF		; CLEAN IT OUT
	PUSHJ	P,GETBUF		; GET FILE NAME
	 JRST	[MOVE	B,LSTBRK
		 CAIE	B,^M
		  OASCR	TTYO,[0]
		 OASCR	TTYO,[ASCIZ	/Aborted./]
		 POP	P,C
		 POP	P,B
		 POP	P,A
		 JRST	RDFILX]
	MOVE	B,LSTBRK
	CAIE	B,^M
	 OASCR	TTYO,[0]
	MOVEI	B,FILBUF		; GET THE BUFFER BACK
	MOVE	A,BUFFCH(B)		; POINTER TO FILE STRING
	MOVE	B,BUFVCT(B)		; LENGTH
	PUSHJ	P,FILPRS		; PARSE THE FILE NAME
	PUSHJ	P,CHNFND		; FIND A CHANNEL, PUT # IN DSKI
	.CALL	[SETZ
		 SIXBIT	/OPEN/
		 MOVSI	.UAI
		 DSKI
		 FILDEV
		 FILFN1
		 FILFN2
		 SETZ	FILSNM]
	 JRST	FILERR
	POP	P,C			; CURRENT COUNT
	POP	P,B			; NEXT CHAR
	POP	P,A			; RESTORE BUFFER STUFF, IN SHORT
	SETZM	ENDFIL			; FLAG TO INDICATE EOF
FRDLOP:	MOVEI	D,FINBLN
	MOVE	E,[440700,,FINBUF]
	.CALL	[SETZ
		 SIXBIT	/SIOT/
		 DSKI
		 E
		 SETZ	D]
	 .LOSE	%LSSYS
	SUBI	D,FINBLN
	JUMPE	D,FILDON
	MOVNS	D			; # CHARS WE GOT
	CAIL	D,FINBLN
	 JRST	FINSTR
	SETOM	ENDFIL			; THIS IS THE LAST TIME
	MOVEI	F,4
PDLOOP:	LDB	O,E
	CAIE	O,^C
	 CAIN	O,0
	  JRST	PDFLS
	JRST	FINSTR
PDFLS:	MOVEI	O,0
	DPB	O,E
	DBP	E
	SOJLE	D,FILDON
	SOJG	F,PDLOOP
FINSTR:	MOVE	E,[440700,,FINBUF]
FINLOP:	ILDB	A,E
	PUSHJ	P,ADDCHR		; ADD THIS GUY
	SOJG	D,FINLOP
	SKIPN	ENDFIL
	 JRST	FRDLOP
FILDON:	OASCR	TTYO,[ASCIZ	/"DONE"/]
	.CALL	[SETZ
		 SIXBIT	/CLOSE/
		 SETZ	DSKI]
	 .LOSE	%LSSYS
RDFILX:	POP	P,F
	POP	P,E
	POP	P,D
	POP	P,INREAD
	POP	P,CTRLYQ
	POP	P,CRBRK
	POP	P,KEEPQT
	POPJ	P,

; FILE-TYPE UTILITIES

; FIND A FREE CHANNEL
CHNFND:	PUSH	P,A
	PUSH	P,B
	MOVEI	A,17
CHNFNL:	.CALL	[SETZ
		 SIXBIT	/STATUS/
		 A
		 SETZM	B]
	 .LOSE	%LSSYS
	JUMPE	B,CHNFNW
	SOJGE	A,CHNFNL
	.VALUE	[ASCIZ	/:No channels??
/]
CHNFNW:	MOVEM	A,DSKI
	POP	P,B
	POP	P,A
	POPJ	P,

; PRINT CURRENT DEFAULT (FOR ?)
HLPFIL:	OASC	TTYO,[ASCIZ /Default is:  /]
	OSIX	TTYO,FILDEV
	OASCI	TTYO,":
	OSIX	TTYO,FILSNM
	OASCI	TTYO,";
	OSIX	TTYO,FILFN1
	OASCI	TTYO,40
	OSIX	TTYO,FILFN2
	OASCR	TTYO,[0]
	POPJ	P,

; PRINT MESSAGE IF OPEN JUST FAILED
FILERR:	OASC	TTYO,[ASCIZ /Open of /]
	OSIX	TTYO,FILDEV
	OASCI	TTYO,":
	OSIX	TTYO,FILSNM
	OASCI	TTYO,";
	OSIX	TTYO,FILFN1
	OASCI	TTYO,40
	OSIX	TTYO,FILFN2
	OASC	TTYO,[ASCIZ / failed:  /]
	.CALL	[SETZ
		 SIXBIT	/STATUS/
		 DSKI
		 SETZM	A]
	 .LOSE	%LSSYS
	.CALL	[SETZ
		 SIXBIT	/OPEN/
		 MOVSI	.UAI
		 DSKI
		 [SIXBIT /ERR/]
		 MOVEI	3
		 SETZ	A]
	 .LOSE	%LSFIL
	MOVE	A,[440700,,FINBUF]
	MOVEI	B,FINBLN
	.CALL	[SETZ
		 SIXBIT	/SIOT/
		 DSKI
		 A
		 SETZ	B]
	 .LOSE	%LSSYS
	.CALL	[SETZ
		 SIXBIT	/CLOSE/
		 SETZ	DSKI]
	 .LOSE	%LSSYS
	MOVEI	B,0
	DPB	B,A
	OASCR	TTYO,FINBUF
	POP	P,C
	POP	P,B
	POP	P,A
	JRST	RDFILX			; FLUSH

; FILE PARSER.  STRING IN A, LENGTH IN B, PARSE INTO FILDEV-FILFN2

FILPRS:	PUSH	P,C
	PUSH	P,D
	PUSH	P,E
	PUSH	P,F			; USE FOR BREAK CHARACTER
	MOVEI	E,0			; GOT A FIRST FILE NAME IF NON-ZERO
FILPRL:	PUSHJ	P,GETSYL		; GET A SYLLABLE
	JUMPE	F,FILPRQ
	JUMPE	C,FILPRL		; NULL NAME IS IGNORED
	CAIN	F,":
	 JRST	[MOVEM	C,FILDEV
		 JRST	FILPRL]
	CAIN	F,";
	 JRST	[MOVEM	C,FILSNM
		 JRST	FILPRL]
FILPRQ:	JUMPE	C,FILPQ1
	JUMPE	E,[MOVNI E,1
		   MOVEM C,FILFN1
		   JRST	FILPQ1]
	MOVEM	C,FILFN2
FILPQ1:	JUMPN	F,FILPRL
	POP	P,F
	POP	P,E
	POP	P,D
	POP	P,C
	POPJ	P,

; POINTER IN A, RETURN SIXBIT IN C, BREAK IN F, DON'T CLOBBER E
GETSYL:	MOVEI	C,0
	MOVE	B,[440600,,C]
GETSY1:	ILDB	F,A
	JUMPE	F,GETSYX		; DONE
	CAIE	F,":
	 CAIN	F,";
	  JRST	GETSYX
	CAIE	F,40
	 CAIN	F,11
	  JRST	GETSX1
	CAIN	F,^Q
	 ILDB	F,A
	SUBI	F,40
	CAIL	F,100
	 SUBI	F,40
	TLNE	B,770000
	 IDPB	F,B
	JRST	GETSY1
GETSX1:	JUMPE	C,GETSY1
GETSYX:	POPJ	P,
	

SUBTTL	RUBOUTS &C.

; CHARACTER COUNT IS IN C, BYTE POINTER IS IN B

RUB:	PUSHJ	P,RUBBER		; FLUSH A CHAR
	 JRST	RCMDNX			; NONE LEFT--REDISPLAY PROMPT
	JRST	RCMD1			; JUST KEEP FROBBING

RUBBER:	SOJL	C,CPOPJ
	LDB	A,B			; GET CHARACTER
	MOVEI	D,0
	DPB	D,B			; ZERO IT
	XCT	XCTRUB			; DO THE RUBOUT
	DBP	B
	CAIE	A,^J
	 JRST	RUBOUT
	JUMPLE	C,RUBOUT
	PUSH	P,A
	LDB	A,B
	CAIE	A,^M
	 JRST	[POP	P,A
		 JRST	RUBOUT]
	SUB	P,[1,,1]
	MOVEI	D,0
	DPB	D,B
	SUBI	C,1
	XCT	XCTRUB
	DBP	B
RUBOUT:	AOS	(P)
	POPJ	P,			; SKIP RETURN, WITH CHARACTER IN A

.M"RUBECH:
	OASCI	TTYO,(A)			; ECHO
	POPJ	P,

; MUCH OF THE FOLLOWING IS RIPPED OFF FROM MUDDLE
.M"RUBFLS:
	PUSH	P,B
	PUSH	P,C
	PUSHJ	P,RCPOS			; GET CURSOR POSITION
	PUSHJ	P,CHRTYP		; GET CHARACTER TYPE
	SKIPGE	C,FIXIM2(C)		; # OF CHARS, OR ROUTINE TO HACK IT
	 JRST	(C)			; SPECIAL ROUTINE
	OCTLP	TTYO,"X			; RUB IT OUT
	SOJG	C,.-1			; UNTIL DONE
RUBDON:	POP	P,C
	POP	P,B
	POPJ	P,

; RETURN CHARACTER TYPE (OFFSET INTO FIXIM2 AND FIXIM3) IN C.  CHARACTER IS IN A
CHRTYP:	MOVEI	C,0
	CAIG	A,37			; SKIP IF MIGHT BE FUNNY
	 JRST	CHRTY1
	CAIN	A,177			; RUBOUT?
	 AOJA	C,CPOPJ			; TWO CHARACTERS WIDE
	POPJ	P,
CHRTY1:	PUSH	P,A
	IDIVI	A,12.			; GET WORD TO ACCESS
	MOVE	A,FIXIML(A)		; FROM FIXIML TABLE
	IMULI	B,3
	ROTC	A,3(B)			; GET CODE INTO LOW END OF B
	ANDI	B,7			; AND KILL EVERYTHING ELSE
	MOVEI	C,(B)			; PUT IT IN C
	POP	P,A
	POPJ	P,

; CTRL-Z AND CTRL-_
FOURQ:	OCTLP	TTYO,"X
	OCTLP	TTYO,"X
	SKIPE	TOFCI			; TV KEYBOARD?
	 JRST	RUBDON
	OCTLP	TTYO,"X
	OCTLP	TTYO,"X
	JRST	RUBDON

; BACK SPACE
BSKILL:	AOS	CHPOS			; GET NEW HPOS +8.
	OHPOS	TTYO,@CHPOS
	JRST	RUBDON

CGKILL:	JRST	RUBDON			; CTRL-G TAKES NO SPACE

TBKILL:	PUSHJ	P,GHPOS			; FIND NEW POSITION
	OHPOS	TTYO,@CHPOS
	OCTLP	TTYO,"L			; CLEAR TO END OF LINE
	JRST	RUBDON

CRKILL:	PUSHJ	P,GHPOS
	OHPOS	TTYO,@CHPOS
	JRST	RUBDON

LFKILL:	PUSH	P,A
	MOVEI	A,1
	PUSHJ	P,LNSTRV
	POP	P,A
	JRST	RUBDON

; TAKES NUMBER OF LINES TO GO UP IN A, POSITIONS CURSOR AT END OF LAST LINE REMAINING
LNSTRV:	CAMLE	A,CVPOS
	 JRST	LNREDO
	SOJE	A,LNONE			; SPECIAL CASE FOR ONE LINEFEED
	OCTLP	TTYO,"H			; GO TO BEGINNING OF LINE
	OASCI	TTYO,10
LNSLOP:	OCTLP	TTYO,"L			; KILL LINE AND GO UP
	OCTLP	TTYO,"U
	SOS	CVPOS			; UPDATE CVPOS
	SOJGE	A,LNSLOP		; LOOP
	PUSHJ	P,GHPOS
	OHPOS	TTYO,@CHPOS		; FROB HORIZONTAL POSITION
	OCTLP	TTYO,"L			; AND CLEAR THE LAST LINE
	POPJ	P,
; ONLY ONE TO HACK
LNONE:	OCTLP	TTYO,"U			; DO LINE STARVE
	POPJ	P,
LNREDO:	OCTLP	TTYO,"T		; HOME UP AND CLEAR FIRST LINE
	OCTLP	TTYO,"L
	PUSHJ	P,PPRMPT		; REDISPLAY PROMPT
	OBPTR	TTYO,BUFFCH(CBUF)	; INPUT BUFFER
	PUSHJ	P,RCPOS			; READ CURSOR POSITION
	POPJ	P,			; AND FLUSH

; TABLE OF CHARACTER LENGTHS OR SPECIAL ROUTINES
FIXIM2:	1
	2
	SETZ	FOURQ			; CTRL-Z AND CTRL-_
	SETZ	CRKILL			; SETZ SO SKIPGE WON'T
	SETZ	LFKILL			; LINE FEED
	SETZ	BSKILL			; BACK SPACE
	SETZ	TBKILL			; TAB
	SETZ	CGKILL			; CTRL-G

; INSTRUCTIONS TO GET CHARACTER WIDTHS ON DISPLAY, INTO C
FIXIM3:	MOVEI	C,1
	MOVEI	C,2
	PUSHJ	P,CNTCTZ		; MAY BE EITHER TWO OR FOUR
	MOVEI	C,0			; CRLF
	MOVEI	C,0			; LF
	MOVNI	C,1
	PUSHJ	P,CNTTAB		; GET WIDTH OF TAB
	MOVEI	C,0

CNTCTZ:	MOVEI	C,2
	SKIPN	TOFCI			; TV KEYBOARD?
	 MOVEI	C,4
	POPJ	P,

CNTTAB:	ANDCMI	O,7			; ZERO LOW THREE BITS OF POSITION COUNT
	ADDI	O,10			; AND ADD 8
	MOVEI	C,0
	POPJ	P,

FIXIML:	111111,,175641			; CTRL @ABCDE,,FGHIJK
	131111,,111111			; LMNOPQ,,RSTUVW
	112011,,120000			; XYZ[\],,^_

; READ  CURSOR POSITION, PUT IN CHPOS AND CVPOS
RCPOS:	PUSH	P,A
	.CALL	[SETZ
		 SIXBIT	/RCPOS/
		 MOVEI	TTYI
		 SETZM	A]
	 .LOSE	%LSSYS
	HLRM	A,CVPOS
	HRRM	A,CHPOS
	POP	P,A
	POPJ	P,

; COME HERE TO FIND CURRENT HORIZONTAL POSITION (GIVEN THAT CURSOR ISN'T
; IN THE RIGHT PLACE, DUMMY).  PUT IT IN CHPOS.  ACCUMULATE IN 0
GHPOS:	PUSH	P,O
	PUSH	P,A
	PUSH	P,B
	PUSH	P,C
	PUSH	P,D
	MOVEI	O,0
	MOVE	D,BUFPRM(CBUF)		; PICK UP LONG PROMPT
	PUSHJ	P,CNTSTR		; GET LENGTH OF IT IN O
	SKIPE	D,PRMPT2
	 PUSHJ	P,CNTSTR
GHPOS1:	MOVE	D,BUFFCH(CBUF)
	PUSHJ	P,CNTSTR
	MOVEM	O,CHPOS
	POP	P,D
	POP	P,C
	POP	P,B
	POP	P,A
	POP	P,O
	POPJ	P,

CNTSTR:	TLNN	D,-1			; SEE IF REAL BPTR
	 HRLI	D,440700		; BYTE POINTER TO STRING
CNTST1:	ILDB	A,D			; GET CHARACTER
	JUMPE	A,CPOPJ			; NULL TERMINATES
	CAIN	A,^M			; CR?
	 JRST	[MOVEI	O,0
		 JRST	CNTST1]
	PUSHJ	P,CHRTYP
	XCT	FIXIM3(C)
	ADD	O,C			; UPDATE COUNT
	JRST	CNTST1			; AND TRY AGAIN

; SWAP THE LAST TWO CHARACTERS.  COUNT IN C, BP IN B
CHRSWP:	CAIG	C,1
	 JRST	RCMD1
	PUSHJ	P,RUBBER
	 .VALUE
	CAIGE	C,1			; FUNNY CASE--CRLF AND NOTHING ELSE
	 JRST	[PUSHJ	P,RADDCH	; SO JUST STUFF IT BACK IN
		 JRST	RCMD1]		; AND RETURN
	PUSH	P,A
	PUSHJ	P,RUBBER
	 .VALUE
	EXCH	A,(P)
	PUSHJ	P,RADDCH
	POP	P,A
	PUSHJ	P,RADDCH
	JRST	RCMD1

; RUB OUT A WORD:  STOP AT <CR>, <LF>, <TAB>, OR <SP>, RUBBING OUT AT LEAST
; ONE CHARACTER NOT IN THAT SET.

WDFLUS:	PUSHJ	P,RUBBER		; RETURNS DEAD CHAR IN A
	 JRST	RCMDNX			; RAN OUT OF CHARACTERS
	PUSHJ	P,BREAK			; BREAK CHARACTER?
	 JRST	WDFLU1			; NO, SO GO TO SECOND LOOP
	JRST	WDFLUS			; KEEP TRYING
WDFLU1:	JUMPE	C,RCMD1
	LDB	A,B			; GET CHARACTER ABOUT TO FLUSH
	PUSHJ	P,BREAK
	 JRST	WDFLU2
	JRST	RCMD1			; FOUND A BREAK, SO STOP
WDFLU2:	PUSHJ	P,RUBBER
	 JRST	RCMDNX
	JRST	WDFLU1

; SKIP IF CHARACTER IN A IS ONE OF <SP>, <CR>, <LF>, <TAB>, <;>
BREAK:	CAIE	A,^I
	 CAIN	A,^J
	  JRST	POPJ1
	CAIE	A,^M
	 CAIN	A,40
	  JRST	POPJ1
	CAIE	A,";
	 CAIN	A,",
	  JRST	POPJ1
	CAIE	A,".
	 CAIN	A,":
	  JRST	POPJ1
	POPJ	P,

; DELETE A LINE.  IF AT BEGINNING OF LINE (FIRST CHAR IS CTRL-J, DELETE
; PREVIOUS LINE.
LNFLUS:	PUSHJ	P,RUBBER		; ONE CHARACTER WILL ALWAYS BE FLUSHED
	 JRST	RCMDNX
LNFLUL:	LDB	A,B
	CAIN	A,^J			; FINISHED?
	 JRST	LNFLUD
	MOVEI	O,0
	DPB	O,B			; ZERO THE CHAR
	DBP	B
	SOJLE	C,LNLEAV		; OUT OF CHARS?
	JRST	LNFLUL
LNFLUD:	PUSH	P,B
	DBP	B
	LDB	A,B
	POP	P,B			; LOOK AT THE CHARACTER BEFORE THE CTRL-J
	CAIN	A,^M
	 JRST	LNFLKL			; CTRL-M, SO JUST KILL THE LINE
LNLEAV:	PUSHJ	P,GHPOS
LNLEV1:	SKIPN	TOERS			; CAN WE DO ERASE?
	 JRST	[OASCR	TTYO,[ASCIZ /  XXX?/]
		 JRST	RCMD1]
	OHPOS	TTYO,@CHPOS		; GET HORIZONTAL POSITION
	OCTLP	TTYO,"L			; AND CLEAR LINE
	JRST	RCMD1
LNFLKL:	SETZM	CHPOS			; HORIZONTAL POSITION IS 0
	JRST	LNLEV1			; GO DO IT

.END