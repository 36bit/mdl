'<PCODE "NCACS">

<PUT SYMBOL DECL '<OR SYMTAB TEMP COMMON>> 

<NEWTYPE TEMP VECTOR '<VECTOR SCL <OR FALSE DATUM>>> 

<NEWTYPE SAVED-STATE LIST '<LIST [REST <LIST AC <OR FALSE <LIST [REST SYMBOL]>> 
[REST <LIST SYMBOL [3 ANY]>]>]>> 

<SETG TMPNO 1> 

<SETG TMPAC 2> 

<SETG DATTYP 1> 

<SETG DATVAL 2> 

<SETG ADDRSYM 1> 

<SETG ACSYM 2> 

<SETG ACLINK 3> 

<SETG ACAGE 4> 

<SETG ACNUM 5> 

<SETG ACPROT 6> 

<SETG AC1SYM 7> 

<SETG ACRESIDUE 8> 

<SETG ACPREF 9> 

<NEWTYPE AC VECTOR '<VECTOR <PRIMTYPE WORD> <PRIMTYPE WORD> <OR <LIST [REST 
DATUM]> FALSE> FIX FIX <OR FALSE ATOM> <PRIMTYPE WORD> ANY <OR FALSE ATOM>>> 

<NEWTYPE DATUM LIST '<LIST <OR ATOM <PRIMTYPE LIST> <PRIMTYPE VECTOR>> <OR ATOM 
<PRIMTYPE LIST> <PRIMTYPE VECTOR>>>> 

<NEWTYPE OFFPTR LIST '<LIST FIX DATUM ATOM>> 

<SETG ALLACS <MAPF ,UVECTOR <FUNCTION (N1 N2 N N+1 NAME) <SETG .NAME <CHTYPE [.
N1 .N2 <> 0 .N <> .N+1 <> <>] AC>>> ![`A  `B  `C  `D  `E  `F  `TVP  `SP !] ![
`A*  `B*  `C*  `D*  `E*  `F*  `TVP*  `SP* !] ![1 2 3 4 5 6 7 8!] ![`B*  `C*  
`D*  `E*  `F*  `TVP*  `SP*  `AB* !] ![AC-A AC-B AC-C AC-D AC-E AC-F AC-G AC-H!]>
> 

<SETG NUMACS <LENGTH ,ALLACS>> 

<SETG LAST-AC ,AC-H> 

<SETG LAST-AC-1 ,AC-G> 

<SETG REACS  %<RSUBR!- '[ %<PCODE!- "NCACS" 0> REACS #DECL ("VALUE" FIX) DATUM 
PRIM-CODE RES-FLS EMIT SMASH-NUM-SYM COMMON-DATUM ISTYPE? KILL-LOOP-AC MOVE:TYP 
MOVE:VALUE STORE-TMP STEMP:ADDR DATUM CREATE-TMP STOREV MESSAGE %<RGLOC ALLACS T
> %<TYPE-W AC VECTOR> %<RGLOC REGS T> %<RGLOC ATIME T> T INCONSISTANCY 
"ALL ACS PROTECTED? " %<TYPE-C DATUM LIST> %<TYPE-C AC VECTOR> %<TYPE-W TEMP 
VECTOR> %<TYPE-W DATUM LIST> %<TYPE-C SYMTAB VECTOR> %<RGLOC TMPAC T> %<TYPE-C 
TEMP VECTOR> %<TYPE-C OFFPTR LIST> INCONSISTENCY "AC-LOSSAGE" 
"NEEDED AC IS PROTECTED? " " AC LOSSAGE " %<TYPE-W OFFPTR LIST> %<TYPE-W 
SAVED-STATE LIST> %<TYPE-W SYMTAB VECTOR> %<TYPE-C COMMON VECTOR> %<RGLOC 
COMMON-DATUM T> %<RGLOC POTLV T> %<RGLOC STORE:TVAR T> %<TYPE-W TOKEN VECTOR> 
KILL-LIST %<RGLOC KILL:STORE T> %<RGLOC STORE:VAR T> ACLIST (LIST) <INTGO!-OP> <

`SKIPGE  |INTFLG > TYPE-WORD!-OP %<TYPE-W OPCODE!-OP WORD> TEMPLATE %<RGLOC 
DATABITS T> WORD ANY]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,REACS PGLUE ![715827882 -17179869185 -1 
-67108864!]>> 


<REACS> 

<SETG GETREG %<RSUBR-ENTRY '[REACS GETREG #DECL ("VALUE" AC ANY)] 54>> 

<SETG UNPREFER %<RSUBR-ENTRY '[REACS UNPREFER #DECL ("VALUE" <OR FALSE AC>)] 334
>> 

<SETG PREFER-DATUM %<RSUBR-ENTRY '[REACS PREFER-DATUM #DECL ("VALUE" <OR AC 
FALSE> <OR DATUM ATOM>)] 370>> 

<SETG PREF-AC %<RSUBR-ENTRY '[REACS PREF-AC #DECL ("VALUE" <OR FALSE AC> ANY)] 
396>> 

<SETG RELREG %<RSUBR-ENTRY '[REACS RELREG #DECL ("VALUE" AC AC DATUM)] 419>> 

<SETG GETTMP %<RSUBR-ENTRY '[REACS GETTMP #DECL ("VALUE" TEMP ANY)] 487>> 

<SETG SAVE:REG %<RSUBR-ENTRY '[REACS SAVE:REG #DECL ("VALUE" AC AC ANY 
"OPTIONAL" ANY)] 508>> 

<SETG RETTMP %<RSUBR-ENTRY '[REACS RETTMP #DECL ("VALUE" ANY TEMP)] 1017>> 

<SETG MUNG-AC %<RSUBR-ENTRY '[REACS MUNG-AC #DECL ("VALUE" AC AC "OPTIONAL" <
PRIMTYPE LIST> ANY)] 1070>> 

<SETG VAR-STORE %<RSUBR-ENTRY '[REACS VAR-STORE #DECL ("VALUE" <OR AC FALSE> 
"OPTIONAL" ANY)] 1343>> 

<SETG GET:ACS %<RSUBR-ENTRY '[REACS GET:ACS #DECL ("VALUE" <LIST [REST AC]>)] 
1402>> 

<SETG REGSTO %<RSUBR-ENTRY '[REACS REGSTO #DECL ("VALUE" <OR AC FALSE> ANY 
"OPTIONAL" ANY)] 1449>> 

<SETG SGETREG %<RSUBR-ENTRY '[REACS SGETREG #DECL ("VALUE" AC AC ANY)] 1506>> 

<SETG DATUM %<RSUBR-ENTRY '[REACS DATUM #DECL ("VALUE" DATUM ANY ANY)] 1731>> 

<SETG OFFPTR %<RSUBR-ENTRY '[REACS OFFPTR #DECL ("VALUE" OFFPTR ANY ANY ANY)] 
1750>> 

<SETG SPEC-OFFPTR %<RSUBR-ENTRY '[REACS SPEC-OFFPTR #DECL ("VALUE" OFFPTR ANY 
ANY ANY ANY)] 1773>> 

<SETG DATTYP-FLUSH %<RSUBR-ENTRY '[REACS DATTYP-FLUSH #DECL ("VALUE" ANY DATUM)]
1800>> 

<SETG RET-TMP-AC %<RSUBR-ENTRY '[REACS RET-TMP-AC #DECL ("VALUE" ANY ANY 
"OPTIONAL" DATUM)] 1829>> 

<SETG ACO <CHTYPE [`O*  `O*  <> 0 0 <> `A*  <> <>] AC>> 

<SETG TOACV %<RSUBR-ENTRY '[REACS TOACV #DECL ("VALUE" DATUM DATUM)] 1928>> 

<SETG TOACT %<RSUBR-ENTRY '[REACS TOACT #DECL ("VALUE" DATUM DATUM)] 1977>> 

<SETG AC+1OK? %<RSUBR-ENTRY '[REACS AC+1OK? #DECL ("VALUE" <OR ATOM FALSE> ANY)]
2021>> 

<SETG GET2REG %<RSUBR-ENTRY '[REACS GET2REG #DECL ("VALUE" <OR FALSE AC>)] 2072>
> 

<SETG ANY2ACS %<RSUBR-ENTRY '[REACS ANY2ACS #DECL ("VALUE" DATUM)] 2113>> 

<SETG GET1REG %<RSUBR-ENTRY '[REACS GET1REG #DECL ("VALUE" <OR FALSE AC>)] 2143>
> 

<SETG FREE-ACS %<RSUBR-ENTRY '[REACS FREE-ACS #DECL ("VALUE" FIX "OPTIONAL" ANY)
] 2168>> 

<SETG SAVE-STATE %<RSUBR-ENTRY '[REACS SAVE-STATE #DECL ("VALUE" SAVED-STATE)] 
2235>> 

<SETG SS-SYM-SLOT 1> 

"POINTER TO SYMBOL" 

<SETG SS-DAT-SLOT 2> 

"DATUM OF THE SYMBOL" 

<SETG SS-STORED-SLOT 3> 

"IS THE SYMBOL STORED" 

<SETG SS-POTENT-SLOT 4> 

"IS THE SYMBOL POTENTIAL" 

<MANIFEST SS-SYM-SLOT SS-DAT-SLOT SS-STORED-SLOT SS-POTENT-SLOT> 

<SETG RESTORE-STATE %<RSUBR-ENTRY '[REACS RESTORE-STATE #DECL ("VALUE" <OR 
COMMON FALSE SYMTAB TEMP> SAVED-STATE "OPTIONAL" ANY)] 2398>> 

<SETG GET-STORED %<RSUBR-ENTRY '[REACS GET-STORED #DECL ("VALUE" <OR ATOM FALSE>
ANY <OR FALSE ATOM> <OR FALSE ATOM>)] 2714>> 

<SETG MERGE-STATE %<RSUBR-ENTRY '[REACS MERGE-STATE #DECL ("VALUE" <OR COMMON 
FALSE SYMTAB TEMP> SAVED-STATE)] 2772>> 

<SETG SINACS %<RSUBR-ENTRY '[REACS SINACS #DECL ("VALUE" ANY SYMBOL)] 3242>> 

<SETG SMASH-INACS %<RSUBR-ENTRY '[REACS SMASH-INACS #DECL ("VALUE" <OR COMMON 
TEMP SYMTAB> SYMBOL ANY "OPTIONAL" ANY)] 3270>> 

<SETG TEMP-MOD %<RSUBR-ENTRY '[REACS TEMP-MOD #DECL ("VALUE" ANY DATUM)] 3331>> 

<SETG POTENT-L-V? %<RSUBR-ENTRY '[REACS POTENT-L-V? #DECL ("VALUE" <OR ATOM 
FALSE> SYMTAB)] 3466>> 

<SETG SAVE:RES %<RSUBR-ENTRY '[REACS SAVE:RES #DECL ("VALUE" LIST)] 3505>> 

<SETG SAVE-NUM-SYM %<RSUBR-ENTRY '[REACS SAVE-NUM-SYM #DECL ("VALUE" LIST <LIST 
[REST SYMTAB ANY ANY <OR FALSE ATOM> ANY]>)] 3675>> 

<SETG FIX-NUM-SYM %<RSUBR-ENTRY '[REACS FIX-NUM-SYM #DECL ("VALUE" ATOM <LIST [
REST LIST]> <LIST [REST SYMTAB ANY ANY <OR FALSE ATOM> ANY]>)] 3745>> 

<SETG CHECK:VARS %<RSUBR-ENTRY '[REACS CHECK:VARS #DECL ("VALUE" ATOM <LIST [
REST SYMTAB ANY ANY <OR FALSE ATOM> ANY]> ANY)] 3844>> 

<SETG STORE-TVAR %<RSUBR-ENTRY '[REACS STORE-TVAR #DECL ("VALUE" ANY ANY ANY ANY
ANY)] 4115>> 

<SETG KILL-STORE %<RSUBR-ENTRY '[REACS KILL-STORE #DECL ("VALUE" ANY ANY)] 4159>
> 

<SETG STORE-VAR %<RSUBR-ENTRY '[REACS STORE-VAR #DECL ("VALUE" ANY ANY DATUM ANY
ANY)] 4196>> 

<SETG FLUSH-RESIDUE %<RSUBR-ENTRY '[REACS FLUSH-RESIDUE #DECL ("VALUE" ANY ANY 
ANY)] 4255>> 

<SETG CALL-INTERRUPT %<RSUBR-ENTRY '[REACS CALL-INTERRUPT #DECL ("VALUE" ANY)] 
4304>> 

<SETG DEPOSIT-DATA %<RSUBR-ENTRY '[REACS DEPOSIT-DATA #DECL ("VALUE" <OR FALSE <
UVECTOR [2 FIX]>> <UVECTOR [2 FIX]> FIX AC DATUM)] 4497>> 

<SETG DEPOSIT-TYPE %<RSUBR-ENTRY '[REACS DEPOSIT-TYPE #DECL ("VALUE" <UVECTOR [2
FIX]> <UVECTOR [2 FIX]> FIX ATOM)] 4567>> 

<SETG DEPOSIT-AC %<RSUBR-ENTRY '[REACS DEPOSIT-AC #DECL ("VALUE" <UVECTOR [2 FIX
]> <UVECTOR [2 FIX]> FIX AC)] 4739>> 

<SETG DATABITS ![<BITS 6 30> <BITS 6 24> <BITS 6 18> <BITS 6 12> <BITS 6 6> <
BITS 6 0>!]> 

<GDECL (DATABITS) <UVECTOR [6 BITS]>> 

<SETG FIND-AC-TYPE %<RSUBR-ENTRY '[REACS FIND-AC-TYPE #DECL ("VALUE" ANY ANY)] 
4802>> 

<SETG FIND-AC-VAL %<RSUBR-ENTRY '[REACS FIND-AC-VAL #DECL ("VALUE" <OR ATOM <
PRIMTYPE LIST> <PRIMTYPE VECTOR>> ANY)] 4824>> 

<SETG FIND-TYPE-OF-ACL %<RSUBR-ENTRY '[REACS FIND-TYPE-OF-ACL #DECL ("VALUE" ANY
DATUM)] 4847>> 

<SETG HACK-OFFPTR %<RSUBR-ENTRY '[REACS HACK-OFFPTR #DECL ("VALUE" DATUM OFFPTR 
TEMP)] 4896>> 

<OR <AND <ASSIGNED? HELP-COMPIL> .HELP-COMPIL> <FLOAD "COMPIL;SUBRTY">> 
