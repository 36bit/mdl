<RPACKAGE "ENV" "IENV" 3>

<ENTRY FEATURE? FEATURES EVAL-WHEN>

<COND (<NOT <GASSIGNED? FEATURE-LIST>> <SETG FEATURE-LIST ()>)>

<GDECL (FEATURE-LIST) <LIST [REST STRING]>>

<DEFINE FEATURES ("TUPLE" FOO "AUX" (L ,FEATURE-LIST))
  #DECL ((FOO) <TUPLE [REST <OR ATOM STRING FALSE>]> (L) <LIST [REST STRING]>)
  <COND (<EMPTY? .FOO> .L)
	(T
	 <MAPR <>
	       <FUNCTION (X) <COND (<TYPE? <1 .X> ATOM> <PUT .X 1 <SPNAME <1 .X>>>)>>
	       .FOO>
	 <COND (<1 .FOO>
		<MAPF <>
		  <FUNCTION (X) #DECL ((X) STRING)
		    <COND (<NOT <MEMBER .X .L>> <SET L (.X !.L)>)>>
		  .FOO>
		<SETG FEATURE-LIST .L>)
	       (T
		<SET FOO <REST .FOO>>
		<REPEAT ((OP .L) (P .L)) #DECL ((OP P) <LIST [REST STRING]>)
		  <COND (<EMPTY? .P> <RETURN>)>
		  <COND (<MEMBER <1 .P> .FOO>
			 <COND (<==? .OP .P>
				<SET L <SET OP <SET P <REST .P>>>>)
			       (T
				<PUTREST .OP <REST .P>>
				<SET P <REST .P>>)>)
			(T
			 <SET OP .P>
			 <SET P <REST .P>>)>>
		<SETG FEATURE-LIST .L>)>)>>

<DEFINE FEATURE? F ("TUPLE" FOO "AUX" (L ,FEATURE-LIST))
  #DECL ((F) ACTIVATION (FOO) <TUPLE [REST <OR ATOM STRING>]> (L) <LIST [REST STRING]>)
  <MAPF <>
    <FUNCTION (X)
      <COND (<TYPE? .X ATOM> <SET X <SPNAME .X>>)>
      <COND (<MEMBER .X .L> <RETURN T .F>)>>
    .FOO>
  <>>

<DEFINE EVAL-WHEN (FEATURES "ARGS" L)
  #DECL ((L) LIST (FEATURES) <OR LIST ATOM STRING>)
  <COND (<COND (<TYPE? .FEATURES LIST>
		<COND (<1 .FEATURES>
		       <FEATURE? !.FEATURES>)
		      (<NOT <FEATURE? !<REST .FEATURES>>>)>)
	       (<FEATURE? .FEATURES>)>
	 <MAPF <>
	   <FUNCTION (X)
	     <EVAL .X>>
	   .L>)>>

<ENDPACKAGE>