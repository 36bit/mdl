
"THE FOLLOWING ROUTINE IS USED TO GARBAGE COLLECT THE MUDDLE DATA-BASE SYSTEM."

<USE "SORTX">

<SETG DIRBUF <IUVECTOR 1024 0>>

<SETG NDIRBUF <IUVECTOR 1024 0>>

;"PAGE TO HOLD MAIN DIRECTORY"

<SETG SDIRBUF <IUVECTOR 256 0>>

<SETG N_NM1 3>

<SETG MNDIR "BTB">

<SETG VERSION-FD <BITS 10 18>>

;"MUDDLE VERSION FILE WAS CREATED IN"

<SETG LENGTH-FD <BITS 7 28>>

;"LENGTH OF FILE IN BLOCKS (256 WORDS FIXUP, 1024 WORDS SAV)"

<SETG BLOCK-FD <BITS 18 0>>

;"BLOCK FILE STARTS ON"

<SETG RCL ![0!]>

"ROUTINE TO GATHER ALL THE DIRECTORIES TOGETHER IN A UVECTOR AND RETURN THE UVECTOR"

<DEFINE GATHER-FILES (CH UVEC "AUX" TUVEC LNT) 
	#DECL ((CH) CHANNEL (TUVEC UVEC) <UVECTOR [REST FIX]>)
	<ACCESS .CH 0>
	<SET TUVEC .UVEC>
	<MAPR <> <FUNCTION (ZER) <PUT .ZER 1 0>> .UVEC>
	<READB ,RCL .CH>
	<REPEAT ((NLNT <1 ,RCL>) (ACC 1))
		<COND (<0? .NLNT> <RETURN>)>
		<ACCESS .CH .ACC>
		<READB ,RCL .CH>
		<ACCESS .CH <* <1 ,RCL> 1024>>
		<READB ,DIRBUF .CH>
		<SET LNT <1 ,DIRBUF>>
		<SUBSTRUC ,DIRBUF 1 .LNT .UVEC>
		<SET UVEC <REST .UVEC .LNT>>
		<SET NLNT <- .NLNT 1>>
		<SET ACC <+ .ACC 1>>>
	<SUBSTRUC .TUVEC
		  0
		  <- <LENGTH .TUVEC> <LENGTH .UVEC>>
		  <REST .TUVEC <LENGTH .UVEC>>>>

<DEFINE GARBAGE-COLLECT BF (DIRNAM
			    "OPTIONAL" (OUTL <>)
			    "AUX" PAGE-START SCNT DIRVEC DIRPLAN CH BUFFR
				  (DIRS ()) PGLNT PAGES)
	#DECL ((PGLNT PAGES PAGE-START) FIX (BUFFR DIRVEC DIRPLAN) UVECTOR
	       (CH) <OR FALSE CHANNEL>)
	<COND (.OUTL <SET OUTCH .OUTL>)
	      (ELSE
	       <SET OUTCH <CHANNEL "PRINTO" .DIRNAM "FILE" "DSK" ,MNDIR>>)>
	<SET CH <OPEN "READB" .DIRNAM "FILE" "DSK" ,MNDIR>>
	<COND (<NOT .CH> <RETURN #FALSE ("BAD DATA-BASE NAME") .BF>)>
	<READB ,NDIRBUF .CH>
	<SET SCNT <1 ,NDIRBUF>>
	<SET UVEC <IUVECTOR <* .SCNT 1024> 0>>
	<SET UVEC <GATHER-FILES .CH .UVEC>>
	<SET DIRPLAN <IUVECTOR <LENGTH .UVEC> 0>>
	<SORT ,SPEC-SORT .UVEC 2 1>
	<COND (<=? <N_NM1 .CH> "SAV">
	       <SET BUFFR ,DIRBUF>
	       <SET PGLNT 1024>
	       <SET PAGE-START 2>
	       <SET PAGES 1>)
	      (<=? <N_NM1 .CH> "FIXUP">
	       <SET BUFFR ,SDIRBUF>
	       <SET PGLNT 256>
	       <SET PAGE-START 8>
	       <SET PAGES 4>)
	      (<ERROR BAD-FILE-NAME!-ERRORS>)>
	<REPEAT ((WD 0) LNT (DP .DIRPLAN) (UV .UVEC))
		#DECL ((WD) <PRIMTYPE WORD> (DP UV) <UVECTOR [REST FIX]>
		       (LNT) FIX)
		<SET LNT <CHTYPE <GETBITS <2 .UV> ,LENGTH-FD> FIX>>
		<SET WD <PUTBITS .WD ,LENGTH-FD .LNT>>
		<SET WD <PUTBITS .WD ,BLOCK-FD .PAGE-START>>
		<REPEAT ((LNT .LNT) (NCH .OUTCH) (PS .PAGE-START)
			 (OBLK <CHTYPE <GETBITS <2 .UV> ,BLOCK-FD> FIX>))
			<COND (<0? .LNT>
			       <ERROR DATA-BASE-IN-BAD-FORMAT!-ERRORS>)>
			<COND (<N==? .PS .OBLK>
			       <ACCESS .CH <* .PGLNT .OBLK>>
			       <READB .BUFFR .CH>
			       <COND (.OUTL
				      <SPEC-ACCESS .NCH <* .PGLNT .PS>>
				      <PRINTB .BUFFR .NCH>)
				     (ELSE
				      <CLOSE .CH>
				      <SPEC-RESET .NCH>
				      <ACCESS .NCH <* .PGLNT .PS>>
				      <PRINTB .BUFFR .NCH>
				      <CLOSE .NCH>
				      <SPEC-RESET .CH>)>)>
			<SET PS <+ .PS 1>>
			<SET OBLK <+ .OBLK 1>>
			<COND (<0? <SET LNT <- .LNT 1>>> <RETURN>)>>
		<SET PAGE-START <+ .PAGE-START .LNT>>
		<SET WD
		     <PUTBITS .WD ,VERSION-FD <GETBITS <2 .UV> ,VERSION-FD>>>
		<PUT .DP 1 <1 .UV>>
		<PUT .DP 2 <CHTYPE .WD FIX>>
		<SET DP <REST .DP 2>>
		<COND (<EMPTY? <SET UV <REST .UV 2>>> <RETURN>)>>
	<REPEAT ((SL .SCNT))
		<SET DIRS (<IUVECTOR 1024 0> !.DIRS)>
		<COND (<0? <SET SL <- .SL 1>>> <RETURN>)>>
	<REPEAT (LSTCHR (PTR .DIRPLAN) NPTR)
		<SET LSTCHR <1 .PTR>>
		<REPEAT (CH)
			<SET CH <CHTYPE <GETBITS .LSTCHR <BITS 6 0>> FIX>>
			<COND (<NOT <0? .CH>> <SET LSTCHR .CH> <RETURN>)
			      (<SET LSTCHR </ .LSTCHR 64>>)>>
		<SET LSTCHR <+ <MOD .LSTCHR .SCNT> 1>>
		<SET NPTR <NTH .DIRS .LSTCHR>>
		<PUT .NPTR 1 <1 .PTR>>
		<PUT .NPTR 2 <2 .PTR>>
		<PUT .DIRS .LSTCHR <REST .NPTR 2>>
		<COND (<EMPTY? <SET PTR <REST .PTR 2>>> <RETURN>)>>
	<REPEAT (NNDIR (DIREC .DIRS) LN DIR TDIR)
		#DECL ((DIREC) LIST (TDIR DIR) UVECTOR)
		<SET DIR <1 .DIREC>>
		<SET TDIR <TOP .DIR>>
		<SET LN <- <LENGTH .TDIR> <LENGTH .DIR>>>
		<SET NNDIR
		     <SUBSTRUC .TDIR 0 .LN <REST .TDIR <- <LENGTH .TDIR> .LN>>>>
		<SORT <> .NNDIR 2 0>
		<PUT .TDIR 1 .LN>
		<SUBSTRUC <REST .TDIR <- <LENGTH .TDIR> .LN>>
			  0
			  .LN
			  <REST .TDIR>>
		<PUT .DIREC 1 .TDIR>
		<COND (<EMPTY? <SET DIREC <REST .DIREC>>> <RETURN>)>>
	<SET PAGE-START </ <+ .PAGE-START <- .PAGES 1>> .PAGES>>
	<PROG ((NCH .OUTCH))
	      <OR .OUTL <CLOSE .CH>>
	      <REPEAT ((MNDIR <REST ,NDIRBUF>) (DIREC .DIRS))
		      <OR .OUTL <SPEC-RESET .NCH>>
		      <SPEC-ACCESS .NCH <* .PAGE-START 1024>>
		      <PRINTB <1 .DIREC> .NCH>
		      <PUT .MNDIR 1 .PAGE-START>
		      <SET MNDIR <REST .MNDIR>>
		      <SET PAGE-START <+ .PAGE-START 1>>
		      <COND (<EMPTY? <SET DIREC <REST .DIREC>>> <RETURN>)>>
	      <OR .OUTL <SPEC-RESET .NCH>>
	      <ACCESS .NCH 0>
	      <PRINTB ,NDIRBUF .NCH>
	      <PRINTB <IUVECTOR 1024 0> .NCH>
	      <OR .OUTL <CLOSE .NCH>>
	      <AND .OUTL <CLOSE .CH>>
	      <AND .OUTL <CLOSE .NCH>>>
	"DONE">

<DEFINE SPEC-SORT (A B) 
	<G? <CHTYPE <GETBITS .A ,BLOCK-FD> FIX>
	    <CHTYPE <GETBITS .B ,BLOCK-FD> FIX>>>



<DEFINE SPEC-RESET (CHN)
	#DECL ((CHN) CHANNEL)
	<REPEAT (ERR)
	   <COND (<SET ERR <RESET .CHN>> <RETURN .CHN>)>
	   <PRINT .ERR ,OUTCHAN>
	   <SLEEP 1>>>

<DEFINE SPEC-ACCESS (CHN NUM "AUX" (FL <FILE-LENGTH .CHN>))
	#DECL ((CHN) CHANNEL (NUM FL) FIX)
	<REPEAT ()
		<COND (<L? .NUM .FL> <RETURN <ACCESS .CH .NUM>>)>
		<PRINTB ,DIRBUF .CHN>
		<SET FL <+ .FL 1024>>>>
		  