<DEFINE SIZE (OBJ "AUX" (ATOMS ()))
	#DECL ((ATOMS) <SPECIAL LIST> (VALUE) FIX)
	<COND (<==? WORD <PRIMTYPE .OBJ>> 2)
	      (ELSE <ISIZE .OBJ>)>>


<DEFINE ISIZE (OBJ "OPTIONAL" (L? <>)
	       "EXTRA" (PT <PRIMTYPE .OBJ>))
	#DECL ((PT) ATOM (VALUE) FIX)
	<COND (<==? .PT WORD> 0)
	      (<==? .PT LIST> <LISTSIZE .OBJ>)
	      (<==? .PT VECTOR> <VECTORSIZE .OBJ>)
	      (<OR <==? .PT UVECTOR> <==? .PT STORAGE>>
	       <UVECTORSIZE .OBJ>)
	      (<==? .PT STRING> <STRINGSIZE .OBJ 5 .L?>)
	      (<==? .PT TEMPLATE> <TEMPLATESIZE .OBJ>)
	      (<==? .PT BYTES> <STRINGSIZE .OBJ <BYTE-SIZE <CHTYPE .OBJ BYTES>> .L?>)
	      (<==? .PT ATOM> <ATOMSIZE .OBJ>)
	      (<==? .PT ASOC> <ASSOCIATIONSIZE .OBJ>)
	      (<MEMQ .PT '[FRAME TUPLE LOCS LOCA]> <BIGPTRSIZE .OBJ .L?>)
	      (<LOCATIVE? .OBJ>
	       0	;"LOCB LOCAS LOCR LOCT LOCU LOCD LOCV LOCL")
	      (<OR <==? .PT PROCESS> <==? .PT INTERNAL>>  0)
	      (ELSE <ERROR UNKNOWN-PRIMTYPE .OBJ SIZE>)>>


<DEFINE LISTSIZE (OBJ)
	#DECL ((OBJ) <PRIMTYPE LIST> (VALUE) FIX)
	<+ <* 2 <LENGTH .OBJ>>
	   <MAPF ,+ <FUNCTION (X) <ISIZE .X T>> .OBJ>>>

<DEFINE VECTORSIZE (OBJ)
	#DECL ((OBJ) <PRIMTYPE VECTOR>)
	<+ 2 <* 2 <LENGTH .OBJ>>
	   <MAPF ,+ ,ISIZE .OBJ>>>

<DEFINE UVECTORSIZE (OBJ)
	#DECL ((OBJ) <OR <PRIMTYPE UVECTOR> <PRIMTYPE STORAGE>>
	       (VALUE) FIX)
	<+ 2 <LENGTH .OBJ>
	   <MAPF ,+ ,ISIZE .OBJ>>>

<DEFINE STRINGSIZE (OBJ PER L?)
	#DECL ((OBJ) <PRIMTYPE STRING>
	       (PER VALUE) FIX)
	<+ 2 </ <+ <LENGTH .OBJ> <- .PER 1>> .PER>
	   <COND (.L? 2) (ELSE 0)>>>

<DEFINE ATOMSIZE (OBJ)
	#DECL ((OBJ) <PRIMTYPE ATOM> (ATOMS) <SPECIAL LIST>
	       (VALUE) FIX)
	<COND (<==? <OBLIST? .OBJ> <ROOT>> 0)
	      (<MEMQ .OBJ .ATOMS> 0)
	      (ELSE
	       <SET ATOMS (.OBJ !.ATOMS)>
	       <+ 5 </ <+ <LENGTH <SPNAME .OBJ>> 4> 5>>)>>

<DEFINE TEMPLATESIZE (OBJ)
	#DECL ((OBJ) <PRIMTYPE TEMPLATE>
	       (VALUE) FIX)
	<+ 2	;"Need to Determine Size of Body"
	   <MAPF ,+ ,ISIZE .OBJ>>>

<DEFINE ASSOCIATIONSIZE (OBJ)
	#DECL ((OBJ) <PRIMTYPE ASOC>
	       (VALUE) FIX)
	<+ 10 <ISIZE <ITEM .OBJ>>
	   <ISIZE <INDICATOR .OBJ>>
	   <ISIZE <AVALUE .OBJ>>>>

<DEFINE BIGPTRSIZE (OBJ L?)
	#DECL ((VALUE) FIX)
	<COND (.L? 2)
	      (ELSE 0)>>
