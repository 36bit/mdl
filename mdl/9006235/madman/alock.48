;"(c) Copyright 1978 Massachusetts Institute of Technology.  All Rights Reserved."

	<OR <GASSIGNED? NOFFSET>
	    <DEFINE NOFFSET (VAR) <- <* <VALUE .VAR> 2> 1>>>
	<SETG DLOCKTABLE <REST <FREEZE <IUVECTOR 50 #WORD *0*>> 50>>
	<SETG DLTBLCOPY <REST <FREEZE <IUVECTOR 50 #WORD *0*>> 50>>
	<SETG CCTABLE <REST <FREEZE <IUVECTOR 30 #WORD *0*>> 30>>
	<SET DLENMAX <LENGTH <TOP ,DLOCKTABLE>>>
	<SETG DATA-LOCK-TRIES 10>
	<SETG DATA-LOCK-SLEEP 500>


; "The undoing instruction for CC4 is <SETZM @ A>"

; "ITSUNLOCK unlocks all hacks locked by DHLOCK and DSLOCK"

<TITLE ITSUNLOCK>
	<DECLARE ("VALUE" 'T)>
	<PUSHJ	P* IITS>
	<JRST	FINIS>

<INTERNAL-ENTRY IITS 0>
	<SUBM	M* (P)>
	<MOVE	A* <TYPE-WORD ATOM>>	; "SAVE TIME LATER"
	<MOVE	B* <MQUOTE T>>
	<MOVE	C* *43*>
UNLOOP	<JUMPE	C* [<JRST MPOPJ>]>	; "BY MAKING THIS WORK"
	<HRR	D* C>
	<HLL	D* 1(C)>
	<XCT	D>			; "UNLOCKIFY"
	<HRRZ	C* 1(C)>
	<MOVEM	C* *43*>		; "AND UPDATE 43"
	<JRST	UNLOOP>

<TITLE DHLOCK>
	<DECLARE ("VALUE" <OR <PRIMTYPE WORD> FALSE> <PRIMTYPE WORD>)>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* DHLOCK1>
	<JRST	FINIS>

<INTERNAL-ENTRY DHLOCK1 1>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<MOVE	B* <MQUOTE '%<RGLOC DATA-LOCK-TRIES T>>>
	<ADD	B* GLOTOP 1 >
	<MOVE	B* 1(B)>
	<SETZ	C*>
	<PUSHJ	P* LOCKER>
	<JRST	DSLOSE>
	<JFCL>
	<MOVE	A* -1(TP)>
	<MOVE	B* (TP)>
	<JRST	DSEND>

; "The undoing instruction for CC2 is <SOS @ A>"

<SUB-ENTRY DSLOCK ("VALUE" <OR <PRIMTYPE WORD> FALSE> <PRIMTYPE WORD>)>

<IFOPSYS
(ITS	<PSEUDO <SET SLFEEP #OPCODE *042000000003*>>)>

	<DPUSH	TP* (AB)>
	<PUSHJ	P* DSLOCK1>
	<JRST	FINIS>

<INTERNAL-ENTRY DSLOCK1 1>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<MOVE	B* <MQUOTE '%<RGLOC DATA-LOCK-TRIES T>>>
	<ADD	B* GLOTOP 1 >
	<MOVE	B* 1(B)>
	<MOVEI	C* 1>
	<PUSHJ	P* LOCKER>
	<JRST	DSLOSE>
	<JFCL>
	<MOVE	A* -1(TP)>
	<MOVE	B* (TP)>
DSEND	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>

DSLOSE	<MOVE	A* <TYPE-WORD FALSE>>	
	<MOVE	B* <MQUOTE ("ALREADY-LOCKED")>>
	<JRST	DSEND>


<SUB-ENTRY DUNLOCK ("VALUE" <OR FALSE <PRIMTYPE WORD>> <PRIMTYPE WORD>)>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* DSUNL1>
	<JRST	FINIS>

<INTERNAL-ENTRY DSUNL1 1>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<PUSHJ	P* DMULOK>
	<JRST	DSUERR>
	<MOVE	A* -1(TP)>
	<MOVE	B* (TP)>
	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>

DSUERR	<MOVE	A* <TYPE-WORD FALSE>>
	<MOVE	B* <MQUOTE ("NOT-LOCKED")>>
	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>	

; "DSLEEP - sleeping routine
	<JSP	E* DSLEEP>
	<INSTRUCTION which skips if successful>
	<XCT this if all fails>
	<JRST here if ever wins>
   Maximum number of retries in B
  "

DSLEEP1	<SKIPN	B>
	<XCT	1(E)>

<IFOPSYS
((10X 20X)
		<PUSH	P*	A>
		<MOVE	A* <MQUOTE '%<RGLOC DATA-LOCK-SLEEP T>>>
		<ADD	A* GLOTOP 1 >
		<MOVE	A* 1(A)>
		<DISMS>
		<POP	P*	A>)
(ITS
		<MOVE	D* <MQUOTE '%<RGLOC DATA-LOCK-SLEEP T>>>
		<ADD	D* GLOTOP 1 >
		<MOVE	D* 1(D)>
		<LSH	D* -5>
		<SLFEEP D*>)>

DSLEEP	<XCT	(E)>
	<SOJA	B* DSLEEP1>
	<JRST	2(E)>


; "The undoing instruction for CC3 is <SOS @ B>
   For CC5, <SETZM @ B>"

DMULOK	<SUBM	M* (P)>
	<MOVE	C* <MQUOTE '%<RGLOC DLOCKTABLE T>>>
	<ADD	C* GLOTOP 1>
	<MOVE	B* 1(C)>
	<CAME	A* (B)>
	<JRST	DMULK1>
	<ADD	B* [<2 (2)>]>
	<MOVEM	B* 1(C)>
	<MOVEI	C* *42*>
	<SUBI	B* 2>
	<JRST	UNHACK>

DMULK1	<MOVEI	B* *42*>
DMULP	<MOVE	C* B>
	<HRRZ	B* 1(C)>
	<JUMPE	B* CHOMP>
	<CAME	A* (B)>
	<JRST	DMULP>
UNHACK	<MOVE	D* 1(B)>
	<MOVE	B* (B)>
	<SKIPGE	(B)>
	<JRST	UNHARD>
UNSOFT	<HRRM	D* 1(C)>
CC3-IN	<SOS	@ B>
CC3-OUT	<SOS	(P)>
CHOMP	<JRST	MPOPJ>

UNHARD	<HRRM	D* 1(C)>
CC2-IN	<SETZM	@ B>
CC2-OUT	<SOS	(P)>
	<JRST	MPOPJ>


; "HERE IF NO 44 TABLE ==> DO A DINIT"

DINITX	<SUBM	M* (P)>
	<PUSH	P* A>
	<PUSH	P* B>
	<PUSH	P* C>
	<MCALL	0 DINIT>
	<POP	P* C>
	<POP	P* B>
	<POP	P* A>
	<MOVE	D* *44*>
	<JRST	MPOPJ>

; "HERE TO DO THE ACTUAL LOCKING"

LOCKER	<SUBM	M* (P)>
	<IMULI	C* 4>
	<ADDI	C* INSTBL>
	<SKIPN	D* *44*>
	<PUSHJ	P* DINITX>
	<HLRE	E* D>
	<SUBM	D* E>		; "O POINTS TO FIRST DW"
	<MOVE	D* 2(C)>
	<MOVEM	D* -1(E)>	; "LAST ENTRY IN TABLE"
	<JSP	E* DSLEEP>
	<XCT	(C)>
	<JRST	MPOPJ>
	<XCT	1(C)>
CC1-IN	<JRST	LOKLSR>
	<PUSH	P* C>
	<MOVE	B* <MQUOTE '%<RGLOC DLOCKTABLE T>>>
	<ADD	B* GLOTOP 1 >
	<MOVE	C* 1(B)>	; "VALUE WORD OF UVECTOR"
	<HLRE	D* C>		; "GET THE LENGTH"
	<MOVNS	D>
	<CAIGE	D* DLENMAX>	; "BETTER HAVE SOME ROOM"
	<JRST	NOGC>
	<PUSH	P* A>
	<PUSH	P* B>
	<PUSH	P* C>
	<MOVE	B* <MQUOTE '%<RGLOC DLTBLCOPY T>>>
	<ADD	B* GLOTOP 1 >
	<MOVE	C* 1(B)>	; "VALUE WORD OF UVECTOR"
	<HLRE	D* C>
	<SUBM	C* D>		; "D POINTS TO DOPE WORDS"
	<HRRZS	D>
	<SKIPN	*43*>
	<JRST	GCEND1>
	<MOVE	C* *43*>
	<SUB	D* [<2 (2)>]>
	<PUSH	P* D>
GCLOOP	<JUMPE	C* GCEND>
	<MOVE	A* (C)>
	<MOVEM	A* (D)>
	<MOVE	A* 1(C)>
	<MOVEM	A* 1(D)>
	<HRRZ	C* A>
	<SUB	D* [<2 (2)>]>
	<HRRM	D* 3(D)>
	<JRST	GCLOOP>
GCEND	<POP	P* C>
	<HRRM	C* *43*>
	<ADD	D* [<2 (2)>]>
	<HLLZS	1(D)>
GCEND1	<POP	P* C>
	<MOVEM	C* 1(B)>	; "MAKE DLTBLCOPY POINT TO OLD ONE"
	<POP	P* B>
	<MOVEM	D* 1(B)>	; "MAKE DLOCKTABLE POINT HERE!"
	<POP	P* A>
	<MOVE	C* D>
	<HLRE	D* C>
	<MOVNS	D>
	<CAIL	D* DLENMAX>
	<ERRUUO* <MQUOTE TOO-MANY-LOCKS!-ERRORS>>
NOGC	<SUB	C* [<2 (2)>]>	
	<MOVEM	C* 1(B)>	; "BACK THE UVECTOR 2"
	<MOVEM	A* (C)>		; "PUT LOCK LOCATION INTO TABLE"
	<POP	P* B>
	<HRL	D* 3(B)>	; "CREATE UNLOCK INSTRUCTION"
	<TLO	D* *20*>
	<HRR	D* *43*>	; "GET NEW CDR OF LIST"
	<MOVEM	D* 1(C)>	; "AND PUT INTO TABLE"
	<HRRM	C* *43*>	; "SMASH CAR INTO MAGIC 43"
CC1-OUT	<SOS	(P)>
	<SOS	(P)>
	<JRST	MPOPJ>

LOKLSR	<SOS	(P)>
	<JRST	MPOPJ>

INSTBL

;"Hard lock instructions"

	<SKIPL (A)>
	<AOSE (A)>
	<SETOM @ A>
	<(SETOM)>

;"Soft lock instructions"

	<SKIPGE (A)>
	<AOSA (A)>
	<SOS @ A>
	<(SOS)>

; "Here to add to 44 table.
   Word 1 in O
   Word 2 in A"

<SUB-ENTRY DINIT ("VALUE" <OR ATOM FALSE>)>
	<PUSHJ	P* DINIT1>
	<JRST	FINIS>

<INTERNAL-ENTRY DINIT1 0>
	<SUBM	M* (P)>
	<SKIPE	B* *44*>
	<JRST	DINWIN>
<IFOPSYS
(ITS	<*SUSET [*000054000000*]>
	<TLO	*1000*>
	<*SUSET	[*400054000000*]>)>
	<MOVE	C* <MQUOTE '%<RGLOC CCTABLE T>>>
	<ADD	C* GLOTOP 1>
	<MOVE	B* 1(C)>
	<HRLI	O* CC1-IN>
	<HRRI	O* CC1-OUT>
	<MOVE	A* [<MOVS @ A>]>
	<SUB	B* [<2 (2)>]>
	<MOVEM	O* (B)>
	<MOVEM	A* 1(B)>
	<HRLI	O* CC2-IN>
	<HRRI	O* CC2-OUT>
	<MOVE	A* [<SETZM @ B>]>
	<SUB	B* [<2 (2)>]>
	<MOVEM	O* (B)>
	<MOVEM	A* 1(B)>
	<HRLI	O* CC3-IN>
	<HRRI	O* CC3-OUT>
	<MOVE	A* [<SOS @ B>]>
	<SUB	B* [<2 (2)>]>
	<MOVEM	O* (B)>
	<MOVEM	A* 1(B)>
	<HRLI	O* CC4-IN>
	<HRRI	O* CC4-OUT>
	<MOVE	A* [<MOVEM A* DINITRQ (C)>]>
	<SUB	B* [<2 (2)>]>
	<MOVEM	O* (B)>
	<MOVEM	A* 1(B)>
	<HRLI	O* CC6-IN>
	<HRRI	O* CC6-OUT>
	<MOVE	A* [<MOVEM A* DINITRQ (C)>]>
	<SUB	B* [<2 (2)>]>
	<MOVEM	O* (B)>
	<MOVEM	A* 1(B)>
	<MOVEM	B* *44*>
DINWIN	<MOVE	A* <TYPE-WORD ATOM>>
	<MOVE	B* <MQUOTE T>>
	<JRST	MPOPJ>

<SUB-ENTRY MFD-INIT ("VALUE" <OR FALSE 'T> <PRIMTYPE VECTOR>)>

<IFOPSYS (ITS <PSEUDO <SET SLFEEP #OPCODE *042000000003*>>)>

	<DPUSH	TP* (AB)>
	<PUSHJ	P* MFD-INIT1>
	<JRST	FINIS>

<INTERNAL-ENTRY MFD-INIT1 1>
	<SUBM	M* (P)>
	<MOVE	E* (TP)>		; "THE ASYLUM"
	<MOVE	C* <NOFFSET MFDPAGE> (E)>
	<LSH	C* 10>			; "LOCATION OF START OF PAGE"
	<PUSHJ	P* GETDAT>		; "SYSTEM DEPENDENT"
INIT01	<MOVE	D* A>
	<EXCH	A* DINITRQ (C)>

<IFOPSYS
((10X 20X)
	CC4-IN	<SUB	A*	DINITRQ	(C)>
		<MOVMS	A>
		<CAIL	A*	60>
		<JRST	INITIF1>
		<CAMN	D*	DINITDN (C)>
		<JRST	INWIN>
		<MOVE	A*	D>
		<SUB	A*	DINITDN	(C)>
		<MOVMS	A>
		<CAIG	A*	60>
		<JRST	INWIN>
		<MOVEI	A*	1000>
		<DISMS>)
(ITS
	CC4-IN	<CAME	A* DINITRQ (C)>
		<JRST	INITIF1>
		<CAMN	D* DINITDN (C)>
		<JRST	INWIN>
		<MOVEI	B* 30>
		<SLFEEP	B*>)>

	<MOVE	A* D>
	<JRST	INIT01>
INITIF1	<SETOM	DPGLOCK (C)>
	<SETOM	ALLOCLOCK (C)>
	<SETOM	PGLOCKS (C)>		; "START OF PAGE LOCKS"
	<SKIPN	HIGHADR (C)>		; "0 IF NEVER FORMATTED"
	<JRST	FORMAT>
INITF1	<MOVEI	A* PGLOCKS (C)>
	<HRLS	A>
	<ADDI	A* 1>
	<BLT	A* *1777* (C)>		; "UNLOCK ALL PAGE LOCKS"
	<MOVEM	D* DINITDN (C)>		; "SAY INIT IS DONE"
CC4-OUT	<PUSH	TP* <TYPE-WORD ASYLUM>>
	<PUSH	TP* -1(TP)>
	<MCALL	1 DATA-CHAIN-SALVAGE>
INWIN	<MOVE	A* <TYPE-WORD ATOM>>
	<MOVE	B* <MQUOTE T>>
	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>

MFDLOS	<MOVE	A* <TYPE-WORD FALSE>>
	<SETZ	B*>
	<SUB	TP* [<2 (2)>]>
	<JRST	MPOPJ>

FORMAT	<PUSH	P* C>			; "SAVE IMPORTANT AC'S"
	<PUSH	P* D>
	<PUSH	P* E>
	<PUSH	TP* <TYPE-WORD CHANNEL>>
	<PUSH	TP* <NOFFSET DSKCHAN> (E)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [1]>		; "DSKALLOCPAGE"
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* <NOFFSET ALLOCPAGE> (E)>
	<MCALL	3 MAP-PAGE>		; "MAP THE ALLOCTION PAGE"
	<GETYP	B* A>
	<CAIN	B* <TYPE-CODE FALSE>>
	<JRST	MFDLOS>			; "HUH?"
	<MOVE	A* <NOFFSET ALLOCPAGE> (E)>
	<LSH	A* 10>
	<MOVE	B* [<(-2) FIRSTALLOC>]>
	<MOVEM	B* (A)>			; "SET ALLOCATION POINTER"
	<POP	P* E>
	<POP	P* D>
	<POP	P* C>
	<MOVE	A* <NOFFSET DSKCHAN> (E)>
	<MOVE	A* 1(A)>		; "CHANNEL NUMBER"

<IFOPSYS
((10X 20X)
	<MOVE	B*	[%<* *777777* 512>]>)
(ITS	<*CALL [<SETZ>			; "GET FILE LENGTH"
		<SIXBIT "FILLEN">
		<MOVE A>
		<SETZM B>]>
	<ERRUUO* <MQUOTE FILLEN-FAILED!-ERRORS>>)>

	<MOVEM	B* MAXADR (C)>		; "MAX THIS MAXADR"
	<MOVEM	B* HIGHADR (C)>
	<SUBI	B* *4000*>		; "SUBTRACT ALLOC PAGE + MFDPAGE"
	<MOVE	A* <NOFFSET ALLOCPAGE> (E)>
	<ASH	A* 10>			; "GET PTR TO ALLOC PAGE"
	<MOVEM	B* FIRSTALLOC (A)>	; "LENGTH OF FREE SPACE"
	<MOVEI	B* *4000*>		; "START OF FREE SPACE"
	<MOVEM	B* FIRSTALLOC 1(A)>	; "SAME HERE"
	<SETOM	ALLOCLOCK (C)>		; "UNLOCK THE ALLOCATOR"
	<SETZM 	HIGHID (C)>		; "SET HIGH ID TO 0 ==> FIRST = 1"
	<JRST INITF1>			; "REJOIN INIT'TER"

GETDAT	<SUBM	M* (P)>	

<IFOPSYS
((10X 20X)
GETDAT1	<PUSH	P*	B>
	<PUSH	P*	C>
	<GTAD>
	<SKIPG	A>
	<JRST	GETDAT2>)>

<IFOPSYS
(20X	<MOVEI	B*	(A)>	;"B/ fraction of day"
	<IMULI	B*	%<* 24 60 60>> ;"* by # of seconds in a day"
	<IDIVI	B*	*777777*>	;"/ by 1 day"
	<HRR	A*	B>)>

<IFOPSYS
((10X 20X)
	<HLRZ	C*	A>
	<IMULI	C*	%<* 24 60 60>>
	<ADDI	C*	(A)>
	<TIME-JSYS>
	<IDIV	A*	B>
	<SUB	A*	C>
GETDAT2	<POP	P*	C>
	<POP	P*	B>)
(ITS
GETDAT1	<*CALL	[<SETZ>
		 <SIXBIT "RQDATE">
		 <MOVEM A>
		 <SETZM A>]>
	<ERRUUO* <MQUOTE RQDATE-FAILED!-ERRORS>>
	<JUMPL	A* [<SOSLE <MQUOTE 4>>
		    <ERRUUO* <MQUOTE RQDATE-UNHAPPY!-ERRORS>>
		    <MOVEI A* 100>
		    <SLFEEP A*>
		    <JRST GETDAT1>]>)>

	<JRST	MPOPJ>

<SUB-ENTRY DIR-INIT ("VALUE" 'T FIX)>
	<DPUSH	TP* (AB)>
	<PUSHJ	P* DIRINIT1>
	<JRST	FINIS>

<INTERNAL-ENTRY DIRINIT1 1>
	<SUBM	M* (P)>
	<PUSHJ	P* GETDAT>		; "SYSTEM DEPENDENT"
	<MOVE	C* (TP)>
	<IMULI	C* *2000*>		; "LOCATION OF START OF PAGE"
INIT03	<MOVE	D* A>
	<EXCH	A* DINITRQ (C)>

<IFOPSYS
((10X 20X)
CC6-IN	<SUB	A*	DINITRQ	(C)>
	<MOVMS	A>
	<CAIL	A*	60>
	<JRST	INITIF3>
	<CAMN	D*	DINITDN (C)>
	<JRST	INWIN>
	<MOVE	A*	D>
	<SUB	A*	DINITDN	(C)>
	<MOVMS	A>
	<CAIG	A*	60>
	<JRST	INWIN>
	<MOVEI	A*	1000>
	<DISMS>)
(ITS
CC6-IN	<CAME	A* DINITRQ (C)>
	<JRST	INITIF3>
	<CAMN	D* DINITDN (C)>
	<JRST	INWIN>
	<MOVEI	B* 30>
	<SLFEEP	B*>)>

	<MOVE	A* D>
	<JRST	INIT03>
INITIF3	<SETOM	DPGLOCK (C)>
	<MOVEI	A* OBJSTART (C)>
INITLP	<CAIL	A* *1777* (C)>
	<JRST	CC6-OUT>
	<SETOM	(A)>
	<ADDI	A* OBJLENGTH>
	<JRST	INITLP>
CC6-OUT	<MOVEM	D* DINITDN (C)>
	<JRST	INWIN>

	<END>

<AND <L? ,MUDDLE 100> 
     <NOT <GASSIGNED? SUBRFY>>
     <APPLICABLE? ,DHLOCK>
     <FREEZE ,DHLOCK>>

<TITLE GET-LOC>
	<DECLARE ("VALUE" UVECTOR <PRIMTYPE WORD> UVECTOR)>
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* GETLOC1>
	<JRST	FINIS>

<INTERNAL-ENTRY GETLOC1 2>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<HLRE	B* A>
	<SUBM	A* B>
	<HRL	A* -2(TP)>
	<BLT	A*  -1(B)>
	<MOVE	A* -1(TP)>
	<MOVE	B* (TP)>
	<SUB	TP* [<4 (4)>]>
	<JRST	MPOPJ>	

<TITLE PUT-LOC>
	<DECLARE ("VALUE" <PRIMTYPE WORD> <PRIMTYPE WORD> UVECTOR)>
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* PUTLOC1>
	<JRST	FINIS>

<INTERNAL-ENTRY PUTLOC1 2>
	<SUBM	M* (P)>
	<MOVE	A* (TP)>
	<HLRE	B* A>
	<SUBM	A* B>
	<HLRZ	B* 1(B)>	; "LENGTH OF UVECTOR + DW"
	<HRLS	A>
	<HRR	A* -2(TP)>
	<ADDI	B* (A)>
	<BLT	A* -3(B)>
	<MOVE	A* -3(TP)>
	<MOVE	B* -2(TP)>
	<SUB	TP* [<4 (4)>]>
	<JRST	MPOPJ>

<TITLE GET-LOC-X>
	<DECLARE ("VALUE" UVECTOR <PRIMTYPE WORD> UVECTOR FIX)>
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* GETLOC1>
	<JRST	FINIS>

<INTERNAL-ENTRY GETLOC1 2>
	<SUBM	M* (P)>
	<MOVE	A* -2(TP)>
	<HRL	A* -4(TP)>
	<MOVE	B* -2(TP)>
	<ADD	B* (TP)>
	<BLT	A*  -1(B)>
	<MOVE	A* -3(TP)>
	<MOVE	B* -2(TP)>
	<SUB	TP* [<6 (6)>]>
	<JRST	MPOPJ>	

