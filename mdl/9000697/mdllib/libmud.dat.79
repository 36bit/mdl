<PACKAGE "PP"><RENTRY LEFT-MARGIN DENSE VERTICAL LOOKAHEAD QUICKPRINT PAGLNT PAGPOS LINLNT LINPOS NULL FORMS INDENT-TO PPRINF FRM FRLVAL FRATM FRAMES COLPP EPRIN1 EPRINT PPRINT><SETG PAGLNT 15><SETG PAGPOS 16><SETG LINLNT 13><SETG LINPOS 14><SETG FORMS %<RSUBR-ENTRY '[\ \ F!- FORMS #DECL ("VALUE" ANY ANY "OPTIONAL" <CHANNEL [12 ANY] [4 FIX]> FIX ANY)] 0>><SETG INDENT-TO %<RSUBR-ENTRY '[\ \ F!- INDENT-TO #DECL ("VALUE" <OR FALSE STRING> FIX "OPTIONAL" <CHANNEL [12 ANY] [4 FIX]>)] 0>><SETG PPRINF %<RSUBR-ENTRY '[\ \ F!- PPRINF #DECL ("VALUE" <OR FALSE STRING> <OR ATOM LIST STRING> "OPTIONAL" STRING FIX <OR FALSE ATOM> FIX)] 0>><SETG FRM %<RSUBR-ENTRY '[\ \ F!- FRM #DECL ("VALUE" FRAME FIX)] 0>><SETG FRLVAL %<RSUBR-ENTRY '[\ \ F!- FRLVAL #DECL ("VALUE" STRING ATOM "OPTIONAL" FIX FIX)] 0>><SETG FRATM %<RSUBR-ENTRY '[\ \ F!- FRATM #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" FIX FIX)] 0>><SETG FRAMES %<RSUBR-ENTRY '[\ \ F!- FRAMES #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" FIX FIX)] 0>><SETG COLPP %<RSUBR-ENTRY '[\ \ F!- COLPP #DECL ("VALUE" ANY ANY "OPTIONAL" CHANNEL FIX FIX)] 0>><SETG EPRIN1 %<RSUBR-ENTRY '[\ \ F!- EPRIN1 #DECL ("VALUE" ANY ANY "OPTIONAL" FIX)] 0>><SETG EPRINT %<RSUBR-ENTRY '[\ \ F!- EPRINT #DECL ("VALUE" ANY ANY "OPTIONAL" FIX)] 0>><SETG PPRINT %<RSUBR-ENTRY '[\ \ F!- PPRINT #DECL ("VALUE" ANY ANY "OPTIONAL" CHANNEL)] 0>><MANIFEST LINPOS LINLNT PAGPOS PAGLNT><ENDPACKAGE>    <PACKAGE "FRMSP"><ENTRY FRTYPEP FRTYPE FRLVALP FRMP FRATMP FR&P FRAMESP><SETG FRTYPEP %<RSUBR-ENTRY '[\ \ F!- FRTYPEP #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" <OR FRAME PROCESS> FIX FIX)] 0>><SETG FRTYPE %<RSUBR-ENTRY '[\ \ F!- FRTYPE #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" FIX FIX)] 0>><SETG FRLVALP %<RSUBR-ENTRY '[\ \ F!- FRLVALP #DECL ("VALUE" STRING "OPTIONAL" <OR FRAME PROCESS> ATOM FIX FIX)] 0>><SETG FRMP %<RSUBR-ENTRY '[\ \ F!- FRMP #DECL ("VALUE" FRAME "OPTIONAL" <OR FRAME PROCESS> FIX)] 0>><SETG FRATMP %<RSUBR-ENTRY '[\ \ F!- FRATMP #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" <OR FRAME PROCESS> FIX FIX)] 0>><SETG FR&P %<RSUBR-ENTRY '[\ \ F!- FR&P #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" <OR FRAME PROCESS> FIX FIX)] 0>><SETG FRAMESP %<RSUBR-ENTRY '[\ \ F!- FRAMESP #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" <OR FRAME PROCESS> FIX FIX)] 0>><ENDPACKAGE>    <PACKAGE "SCR"><ENTRY TSCRIPT TCCID TCLID DO-RTCHR DO-GTTYP TCURSY TCURSX THEIGHT TWIDTH TICHAN TCHAN DO-BIN DO-INPUT DO-OUTPUT NORMAL-OUT IMAGE-OUT INSERT-CHAR INSERT-LINE RESTORE-CURSOR SAVE-CURSOR FORWARD-CURSOR UP-CURSOR DOWN-CURSOR BACK-CURSOR MOVE-CURSOR VER-POS-CURSOR HOR-POS-CURSOR BOTTOM-CURSOR HOME-CURSOR ERASE-CHAR KILL-CHAR FRESH-LINE CLEAR-EOS CLEAR-EOL CLEAR-SCREEN TTY-RESET SET-IMAGE-MODE SET-ECHO-MODE TTY-SCR TTY-SETUP GET-TTY SCR-INIT TERM-MOVE? STREAM TTY><SETG TSCRIPT %<OFFSET 5 TTY>><SETG TCCID 2048><SETG TCLID 4096><SETG DO-RTCHR %<RSUBR-ENTRY '[\ \ F!- DO-RTCHR #DECL ("VALUE" FIX CHANNEL)] 0>><SETG DO-GTTYP %<RSUBR-ENTRY '[\ \ F!- DO-GTTYP #DECL ("VALUE" FIX CHANNEL)] 0>><SETG TCURSY %<RSUBR-ENTRY '[\ \ F!- TCURSY #DECL ("VALUE" FIX TTY)] 0>><SETG TCURSX %<RSUBR-ENTRY '[\ \ F!- TCURSX #DECL ("VALUE" FIX TTY)] 0>><SETG THEIGHT %<RSUBR-ENTRY '[\ \ F!- THEIGHT #DECL ("VALUE" FIX TTY)] 0>><SETG TWIDTH %<RSUBR-ENTRY '[\ \ F!- TWIDTH #DECL ("VALUE" FIX TTY)] 0>><SETG TICHAN %<OFFSET 2 TTY>><SETG TCHAN %<OFFSET 1 TTY>><SETG DO-BIN %<RSUBR-ENTRY '[\ \ F!- DO-BIN #DECL ("VALUE" CHARACTER CHANNEL)] 0>><SETG DO-INPUT %<RSUBR-ENTRY '[\ \ F!- DO-INPUT #DECL ("VALUE" CHARACTER TTY "OPTIONAL" <OR ATOM FALSE STRING>)] 0>><SETG DO-OUTPUT %<RSUBR-ENTRY '[\ \ F!- DO-OUTPUT #DECL ("VALUE" <OR CHARACTER STRING> TTY <OR CHARACTER STRING> "OPTIONAL" <OR ATOM FALSE> FIX)] 0>><SETG NORMAL-OUT %<RSUBR-ENTRY '[\ \ F!- NORMAL-OUT #DECL ("VALUE" <OR CHARACTER STRING> TTY <OR STRING CHARACTER> "OPTIONAL" FIX CHARACTER)] 0>><SETG IMAGE-OUT %<RSUBR-ENTRY '[\ \ F!- IMAGE-OUT #DECL ("VALUE" <OR CHARACTER STRING> TTY <OR FIX CHARACTER STRING> "OPTIONAL" FIX CHARACTER)] 0>><SETG INSERT-CHAR #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1) ('LEFT <>) ('RIGHT <>)) <FORM DO-INSERT-CHAR .TTY .N .LEFT .RIGHT>))><SETG INSERT-LINE #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1) ('TOP <>) ('BOT <>)) <FORM DO-INSERT-LINE .TTY .N .TOP .BOT>))><SETG RESTORE-CURSOR #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTRES>))><SETG SAVE-CURSOR #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTSAV>))><SETG FORWARD-CURSOR #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1)) <FORM DPYOP .TTY ,VTFWD .N>))><SETG UP-CURSOR #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1)) <FORM DPYOP .TTY ,VTUP .N>))><SETG DOWN-CURSOR #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1)) <FORM DPYOP .TTY ,VTDWN .N>))><SETG BACK-CURSOR #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1)) <FORM DPYOP .TTY ,VTBCK .N>))><SETG MOVE-CURSOR #MACRO (#FUNCTION (('TTY 'X 'Y) <FORM DPYOP .TTY ,VTMOV <FORM CHTYPE <FORM PUTBITS .X <BITS 18 18> .Y> FIX>>))><SETG VER-POS-CURSOR #MACRO (#FUNCTION (('TTY 'Y) <FORM DPYOP .TTY ,VTVRT .Y>))><SETG HOR-POS-CURSOR #MACRO (#FUNCTION (('TTY 'X) <FORM DPYOP .TTY ,VTHRZ .X>))><SETG BOTTOM-CURSOR #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTHMD>))><SETG HOME-CURSOR #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTHOM>))><SETG ERASE-CHAR #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1)) <FORM DPYOP .TTY ,VTBEC .N>))><SETG KILL-CHAR #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTERA>))><SETG FRESH-LINE #MACRO (#FUNCTION (('TTY "OPTIONAL" ('N 1)) <FORM DPYOP .TTY ,VTADV .N>))><SETG CLEAR-EOS #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTCEW>))><SETG CLEAR-EOL #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTCEL>))><SETG CLEAR-SCREEN #MACRO (#FUNCTION (('TTY) <FORM DPYOP .TTY ,VTCLR>))><SETG TTY-RESET %<RSUBR-ENTRY '[\ \ F!- TTY-RESET #DECL ("VALUE" TTY TTY)] 0>><SETG SET-IMAGE-MODE %<RSUBR-ENTRY '[\ \ F!- SET-IMAGE-MODE #DECL ("VALUE" TTY TTY <OR ATOM FALSE>)] 0>><SETG SET-ECHO-MODE %<RSUBR-ENTRY '[\ \ F!- SET-ECHO-MODE #DECL ("VALUE" TTY TTY <OR ATOM FALSE>)] 0>><SETG TTY-SCR %<RSUBR-ENTRY '[\ \ F!- TTY-SCR #DECL ("VALUE" TTY TTY)] 0>><SETG TTY-SETUP %<RSUBR-ENTRY '[\ \ F!- TTY-SETUP #DECL ("VALUE" WORD TTY)] 0>><SETG GET-TTY %<RSUBR-ENTRY '[\ \ F!- GET-TTY #DECL ("VALUE" TTY CHANNEL CHANNEL "OPTIONAL" <PRIMTYPE WORD>)] 0>><SETG SCR-INIT %<RSUBR-ENTRY '[\ \ F!- SCR-INIT #DECL ("VALUE" STRING "OPTIONAL" <OR ATOM FALSE>)] 0>><SETG TERM-MOVE? %<RSUBR-ENTRY '[\ \ F!- TERM-MOVE? #DECL ("VALUE" <OR ATOM FALSE> TTY)] 0>><NEWTYPE TTY VECTOR'<<PRIMTYPE VECTOR> CHANNEL CHANNEL WORD WORD <OR FALSE <LIST [REST <OR UVECTOR STRING>]>>>><SETG VTCLR 13><SETG VTCEL 15><SETG VTCEW 14><SETG VTADV 10><SETG VTERA 16><SETG VTBEC 17><SETG VTHOM 8><SETG VTHMD 9><SETG VTHRZ 5><SETG VTVRT 6><SETG VTMOV 7><SETG VTBCK 2><SETG VTDWN 4><SETG VTUP 3><SETG VTFWD 1><SETG VTSAV 11><SETG VTRES 12><MANIFEST VTRES VTSAV VTFWD VTUP VTDWN VTBCK VTMOV VTVRT VTHRZ VTHMD VTHOM VTBEC VTERA VTADV VTCEW VTCEL VTCLR TCHAN TICHAN TCLID TCCID TSCRIPT><ENDPACKAGE><PACKAGE "NSTR"><ENTRY STRTOX SIXTOS UPPERCASE SUBSNC SUBSTR><SETG STRTOX %<RSUBR-ENTRY '[\ \ F!- STRTOX #DECL ("VALUE" WORD STRING)] 0>><SETG SIXTOS %<RSUBR-ENTRY '[\ \ F!- SIXTOS #DECL ("VALUE" STRING <PRIMTYPE WORD> "OPTIONAL" <OR CHARACTER FALSE>)] 0>><SETG UPPERCASE %<RSUBR-ENTRY '[\ \ F!- UPPERCASE #DECL ("VALUE" STRING STRING "OPTIONAL" FIX)] 0>><SETG SUBSNC %<RSUBR-ENTRY '[\ \ F!- SUBSNC #DECL ("VALUE" <OR FALSE STRING> STRING STRING "OPTIONAL" FIX)] 0>><SETG SUBSTR %<RSUBR-ENTRY '[\ \ F!- SUBSTR #DECL ("VALUE" <OR FALSE STRING> STRING STRING "OPTIONAL" FIX ANY)] 0>><ENDPACKAGE>  <PACKAGE "TRACE"><ENTRY TRACE-VAL TRACE-ARGS TSTRUC VERBOSE OUT-PRINT OUT-BREAK IN-PRINT IN-BREAK INDENT-MOD INDENT TRACELIST TSUBR TRSUBR-ENTRY TRSUBR TFUNCTION UNTRACE TRACE><NEWTYPE TSTRUC VECTOR'<<PRIMTYPE VECTOR> [7 ANY]>><SETG VERBOSE 5><SETG OUT-PRINT 3><SETG OUT-BREAK 4><SETG IN-PRINT 2><SETG IN-BREAK 1><NEWTYPE TSUBR WORD><NEWTYPE TRSUBR-ENTRY VECTOR><NEWTYPE TRSUBR VECTOR><NEWTYPE TFUNCTION LIST><SETG UNTRACE %<RSUBR-ENTRY '[\ \ F!- UNTRACE #DECL ("VALUE" <OR ATOM <LIST [REST ATOM]>> "OPTIONAL" <OR ATOM <LIST [REST ATOM]>>)] 0>><SETG TRACE %<RSUBR-ENTRY '[\ \ F!- TRACE #DECL ("VALUE" <OR ATOM FALSE <LIST [REST ATOM]>> "OPTIONAL" <OR FALSE ATOM <LIST [REST ATOM]>> "TUPLE" <TUPLE [REST <OR ATOM LIST>]>)] 0>><MANIFEST IN-BREAK IN-PRINT OUT-BREAK OUT-PRINT VERBOSE><GDECL (TRACELIST) <LIST [REST ATOM]> (INDENT) FIX (INDENT-MOD) FIX><ENDPACKAGE>    <PACKAGE "LIST-HACKS"><ENTRY LREVERSE LSORT LSHUFFLE><SETG LREVERSE %<RSUBR-ENTRY '[\ \ F!- LREVERSE #DECL ("VALUE" LIST LIST)] 0>><SETG LSORT %<RSUBR-ENTRY '[\ \ F!- LSORT #DECL ("VALUE" LIST LIST "OPTIONAL" <OR FALSE APPLICABLE> ANY)] 0>><SETG LSHUFFLE %<RSUBR-ENTRY '[\ \ F!- LSHUFFLE #DECL ("VALUE" LIST LIST "OPTIONAL" FIX)] 0>><ENDPACKAGE><PACKAGE "UNLINK"><ENTRY UNPURIFY PURE? UNLINK><SETG UNPURIFY %<RSUBR-ENTRY '[\ \ F!- UNPURIFY #DECL ("VALUE" ATOM <OR <PRIMTYPE VECTOR> <PRIMTYPE UVECTOR>>)] 0>><SETG PURE? %<RSUBR-ENTRY '[\ \ F!- PURE? #DECL ("VALUE" <OR ATOM FALSE> ANY)] 0>><SETG UNLINK %<RSUBR-ENTRY '[\ \ F!- UNLINK #DECL ("VALUE" <OR ATOM !<FALSE STRING!>> <OR FALSE ATOM <LIST [REST ATOM]>> "OPTIONAL" <OR ATOM FALSE>)] 0>><ENDPACKAGE> <RPACKAGE "DOW"><ENTRY DOW><SETG DOW %<RSUBR-ENTRY '[\ \ F!- DOW #DECL ("VALUE" FIX)] 0>><ENDPACKAGE>    <PACKAGE "BUF"><ENTRY WORDBRKS UNKILL TECO-PROGRAM REENTER-TECO-CHAR QUOTECHR LINEBRKS ISDISPLAY? INIT IDELCHR IBUFPRINT IBUFCLEAR HPOS-BUF GETSTRACT GETSTR GET-CPOS FORMATEFFS FILEINP DWORD DLINE DISPLAY? DELTOCH DELPRINT DELCHR CHRTABLE BUFTOS BUFTECO BUFSPRINT BUFSIZE BUFPRINT BUFMAKE BUFLENGTH BUFGROW BUFFER BUFCLEAR BUF-ECHO-FLAG BUF-BIT-PROMPT BUF-BITS BPRMPT2 BPRMPT1 BCUR BSTR ADD-OFFSET-STRING ADDSTRING ADDFILE ADDCRLF ADDCHR><USE "SCR" "GET-FILE"><SETG UNKILL %<RSUBR-ENTRY '[\ \ F!- UNKILL #DECL ("VALUE" BUFFER BUFFER CHARACTER)] 0>><SETG QUOTECHR %<RSUBR-ENTRY '[\ \ F!- QUOTECHR #DECL ("VALUE" BUFFER BUFFER CHARACTER)] 0>><SETG ISDISPLAY? %<RSUBR-ENTRY '[\ \ F!- ISDISPLAY? #DECL ("VALUE" <OR ATOM FALSE>)] 0>><SETG INIT %<RSUBR-ENTRY '[\ \ F!- INIT #DECL ("VALUE" ATOM)] 0>><SETG IDELCHR %<RSUBR-ENTRY '[\ \ F!- IDELCHR #DECL ("VALUE" <OR CHARACTER FALSE> BUFFER CHARACTER)] 0>><SETG IBUFPRINT %<RSUBR-ENTRY '[\ \ F!- IBUFPRINT #DECL ("VALUE" FIX BUFFER CHARACTER)] 0>><SETG IBUFCLEAR %<RSUBR-ENTRY '[\ \ F!- IBUFCLEAR #DECL ("VALUE" BUFFER BUFFER CHARACTER)] 0>><SETG HPOS-BUF %<RSUBR-ENTRY '[\ \ F!- HPOS-BUF #DECL ("VALUE" FIX ANY BUFFER "OPTIONAL" <OR ATOM FALSE>)] 0>><SETG GETSTR %<RSUBR-ENTRY '[\ \ F!- GETSTR #DECL ("VALUE" BUFFER BUFFER "OPTIONAL" <OR <LIST [REST VECTOR]> VECTOR> <OR STRING FALSE> STRING)] 0>><SETG GET-CPOS %<RSUBR-ENTRY '[\ \ F!- GET-CPOS #DECL ("VALUE" CHANNEL "OPTIONAL" CHANNEL)] 0>><SETG FILEINP %<RSUBR-ENTRY '[\ \ F!- FILEINP #DECL ("VALUE" BUFFER BUFFER "OPTIONAL" CHARACTER)] 0>><SETG DWORD %<RSUBR-ENTRY '[\ \ F!- DWORD #DECL ("VALUE" FIX BUFFER CHARACTER)] 0>><SETG DLINE %<RSUBR-ENTRY '[\ \ F!- DLINE #DECL ("VALUE" FIX BUFFER CHARACTER)] 0>><SETG DELTOCH %<RSUBR-ENTRY '[\ \ F!- DELTOCH #DECL ("VALUE" FIX BUFFER ANY "OPTIONAL" <OR STRING FALSE>)] 0>><SETG DELCHR %<RSUBR-ENTRY '[\ \ F!- DELCHR #DECL ("VALUE" <OR CHARACTER FALSE> BUFFER)] 0>><SETG BUFTOS %<RSUBR-ENTRY '[\ \ F!- BUFTOS #DECL ("VALUE" STRING BUFFER)] 0>><SETG BUFSPRINT %<RSUBR-ENTRY '[\ \ F!- BUFSPRINT #DECL ("VALUE" BUFFER BUFFER "OPTIONAL" CHANNEL)] 0>><SETG BUFPRINT %<RSUBR-ENTRY '[\ \ F!- BUFPRINT #DECL ("VALUE" FIX BUFFER "OPTIONAL" CHANNEL <OR ATOM FALSE> <OR ATOM FALSE>)] 0>><SETG BUFMAKE %<RSUBR-ENTRY '[\ \ F!- BUFMAKE #DECL ("VALUE" BUFFER FIX "OPTIONAL" STRING STRING)] 0>><SETG BUFLENGTH %<RSUBR-ENTRY '[\ \ F!- BUFLENGTH #DECL ("VALUE" FIX BUFFER)] 0>><SETG BUFGROW %<RSUBR-ENTRY '[\ \ F!- BUFGROW #DECL ("VALUE" BUFFER BUFFER "OPTIONAL" FIX)] 0>><NEWTYPE BUFFER VECTOR'<<PRIMTYPE VECTOR> [4 STRING] FIX <PRIMTYPE WORD> STRING FIX <OR ATOM FALSE>>><SETG BUFCLEAR %<RSUBR-ENTRY '[\ \ F!- BUFCLEAR #DECL ("VALUE" BUFFER BUFFER)] 0>><SETG BUF-BIT-PROMPT 0><SETG BUF-BITS #MACRO (#FUNCTION (('BUF 'BIT "OPTIONAL" 'NEW) <FORM BIND ((B .BUF) (BIT .BIT)) #DECL ((B) BUFFER (BIT) <PRIMTYPE WORD>) <COND (<ASSIGNED? NEW> <FORM PUT <FORM LVAL B> ,BBITS <FORM PUTBITS <FORM BBITS <FORM LVAL B>> <FORM BITS 1 <FORM LVAL BIT>> <FORM COND (.NEW 1) (0)>>>) (T <FORM 1? <FORM CHTYPE <FORM GETBITS <FORM BBITS <FORM LVAL B>> <FORM BITS 1 <FORM LVAL BIT>>> FIX>>)>>))><SETG BPRMPT2 4><SETG BPRMPT1 3><SETG BCUR 2><SETG BSTR 1><SETG ADD-OFFSET-STRING %<RSUBR-ENTRY '[\ \ F!- ADD-OFFSET-STRING #DECL ("VALUE" BUFFER BUFFER STRING STRING)] 0>><SETG ADDSTRING %<RSUBR-ENTRY '[\ \ F!- ADDSTRING #DECL ("VALUE" BUFFER BUFFER "TUPLE" <TUPLE [REST <OR STRING CHARACTER FIX>]>)] 0>><SETG ADDFILE %<RSUBR-ENTRY '[\ \ F!- ADDFILE #DECL ("VALUE" BUFFER BUFFER CHANNEL "OPTIONAL" FIX)] 0>><SETG ADDCRLF %<RSUBR-ENTRY '[\ \ F!- ADDCRLF #DECL ("VALUE" BUFFER BUFFER CHARACTER)] 0>><SETG ADDCHR %<RSUBR-ENTRY '[\ \ F!- ADDCHR #DECL ("VALUE" BUFFER BUFFER CHARACTER)] 0>><SETG BBITS 6><MANIFEST BBITS BSTR BCUR BPRMPT1 BPRMPT2 BUF-BIT-PROMPT><GDECL (BUFSIZE) FIX (DISPLAY?) <OR ATOM FALSE> (FORMATEFFS) STRING><ENDPACKAGE>   <RPACKAGE "FR&"><ENTRY & &LIS &1 FR& FR&VAL><USE "PP"><SETG & %<RSUBR-ENTRY '[\ \ F!- & #DECL ("VALUE" ANY ANY)] 0>><SETG &LIS %<RSUBR-ENTRY '[\ \ F!- &LIS #DECL ("VALUE" ANY)] 0>><SETG &1 %<RSUBR-ENTRY '[\ \ F!- &1 #DECL ("VALUE" ANY ANY "OPTIONAL" FIX)] 0>><SETG FR& %<RSUBR-ENTRY '[\ \ F!- FR& #DECL ("VALUE" <OR ATOM STRING> "OPTIONAL" FIX FIX <CHANNEL [12 ANY] [4 FIX]>)] 0>><SETG FR&VAL %<RSUBR-ENTRY '[\ \ F!- FR&VAL #DECL ("VALUE" STRING ATOM "OPTIONAL" FIX FIX)] 0>><ENDPACKAGE>   <PACKAGE "JCL"><ENTRY WRITEJCL IREADJCL READJCL JCL?><SETG WRITEJCL %<RSUBR-ENTRY '[\ \ F!- WRITEJCL #DECL ("VALUE" <OR STRING FALSE> STRING)] 0>><SETG IREADJCL %<RSUBR-ENTRY '[\ \ F!- IREADJCL #DECL ("VALUE" <OR STRING FALSE>)] 0>><SETG READJCL %<RSUBR-ENTRY '[\ \ F!- READJCL #DECL ("VALUE" <OR FALSE STRING> "OPTIONAL" <OR FIX FALSE>)] 0>><SETG JCL? %<RSUBR-ENTRY '[\ \ F!- JCL? #DECL ("VALUE" <OR FALSE FIX>)] 0>><ENDPACKAGE> <PACKAGE "MEND"><ENTRY MINIT MEND><USE "EDIT" "FR&"><SETG MINIT %<RSUBR-ENTRY '[\ \ F!- MINIT #DECL ("VALUE" <OR ATOM !<FALSE STRING!>> "OPTIONAL" <OR FIX FLOAT FALSE> <OR FIX FALSE> <OR FIX FALSE>)] 0>><SETG MEND %<RSUBR-ENTRY '[\ \ F!- MEND #DECL ("VALUE" ANY)] 0>><ENDPACKAGE> <PACKAGE "TENXIO"><ENTRY LOAD-AVG JOB-TIME DTDTG DTGDT GET-WRITE-DATE GET-DATE DATE-STRING PARSE-DATE GET-FRESH-PAGE RESUME-INFERIOR CREATE-INFERIOR RELOAD-FILE EXPUNGE-CON-DIR EXPUNGE-DIR CON-TO-DIR DIRNUM-TO-STR STR-TO-DIRNUM GET-DIR-ALLOC GET-JOB-INFO FIND-FIRST-USED-FILE-PAGE FIND-FIRST-FREE-FILE-PAGE GET-PRIMARY-JFNS WRITE-PAGE PMAP-FILE PRINTP-FILE READP-FILE PRINTS-FILE READS-FILE PRINTB-FILE READB-FILE PRINTW-FILE READW-FILE NAME-OF-FILE SIZE-OF-FILE LENGTH-OF-FILE ACCESS-OF-FILE ACCESS-FILE RELEASE-FILE CLOSE-FILE OPEN-FILE GET-FILE JFN><SETG LOAD-AVG %<RSUBR-ENTRY '[\ \ F!- LOAD-AVG #DECL ("VALUE" <OR FLOAT FALSE>)] 0>><SETG JOB-TIME %<RSUBR-ENTRY '[\ \ F!- JOB-TIME #DECL ("VALUE" FIX)] 0>><SETG DTDTG %<RSUBR-ENTRY '[\ \ F!- DTDTG #DECL ("VALUE" <OR FIX FALSE> FIX FIX FIX FIX FIX FIX)] 0>><SETG DTGDT %<RSUBR-ENTRY '[\ \ F!- DTGDT #DECL ("VALUE" <UVECTOR [6 FIX]> FIX <UVECTOR [6 FIX]>)] 0>><SETG GET-WRITE-DATE %<RSUBR-ENTRY '[\ \ F!- GET-WRITE-DATE #DECL ("VALUE" FIX CHANNEL)] 0>><SETG GET-DATE %<RSUBR-ENTRY '[\ \ F!- GET-DATE #DECL ("VALUE" FIX)] 0>><SETG DATE-STRING %<RSUBR-ENTRY '[\ \ F!- DATE-STRING #DECL ("VALUE" <OR STRING FALSE> STRING FIX FIX)] 0>><SETG PARSE-DATE %<RSUBR-ENTRY '[\ \ F!- PARSE-DATE #DECL ("VALUE" <OR FIX FALSE> STRING)] 0>><SETG GET-FRESH-PAGE %<RSUBR-ENTRY '[\ \ F!- GET-FRESH-PAGE #DECL ("VALUE" <OR FIX FALSE> FIX)] 0>><SETG RESUME-INFERIOR %<RSUBR-ENTRY '[\ \ F!- RESUME-INFERIOR #DECL ("VALUE" FIX FIX)] 0>><SETG CREATE-INFERIOR %<RSUBR-ENTRY '[\ \ F!- CREATE-INFERIOR #DECL ("VALUE" FIX FIX "OPTIONAL" FIX)] 0>><SETG RELOAD-FILE %<RSUBR-ENTRY '[\ \ F!- RELOAD-FILE #DECL ("VALUE" ANY STRING)] 0>><SETG EXPUNGE-CON-DIR %<RSUBR-ENTRY '[\ \ F!- EXPUNGE-CON-DIR #DECL ("VALUE" 'T)] 0>><SETG EXPUNGE-DIR %<RSUBR-ENTRY '[\ \ F!- EXPUNGE-DIR #DECL ("VALUE" 'T)] 0>><SETG CON-TO-DIR %<RSUBR-ENTRY '[\ \ F!- CON-TO-DIR #DECL ("VALUE" <OR 'T FALSE> FIX)] 0>><SETG DIRNUM-TO-STR %<RSUBR-ENTRY '[\ \ F!- DIRNUM-TO-STR #DECL ("VALUE" <OR STRING FALSE> FIX)] 0>><SETG STR-TO-DIRNUM %<RSUBR-ENTRY '[\ \ F!- STR-TO-DIRNUM #DECL ("VALUE" <OR FIX FALSE> STRING)] 0>><SETG GET-DIR-ALLOC %<RSUBR-ENTRY '[\ \ F!- GET-DIR-ALLOC #DECL ("VALUE" <OR <UVECTOR FIX FIX> FALSE> FIX)] 0>><SETG GET-JOB-INFO %<RSUBR-ENTRY '[\ \ F!- GET-JOB-INFO #DECL ("VALUE" <UVECTOR FIX FIX FIX FIX>)] 0>><SETG FIND-FIRST-USED-FILE-PAGE %<RSUBR-ENTRY '[\ \ F!- FIND-FIRST-USED-FILE-PAGE #DECL ("VALUE" <OR FIX FALSE> JFN FIX)] 0>><SETG FIND-FIRST-FREE-FILE-PAGE %<RSUBR-ENTRY '[\ \ F!- FIND-FIRST-FREE-FILE-PAGE #DECL ("VALUE" <OR FIX FALSE> JFN)] 0>><SETG GET-PRIMARY-JFNS %<RSUBR-ENTRY '[\ \ F!- GET-PRIMARY-JFNS #DECL ("VALUE" <VECTOR [2 JFN]> "OPTIONAL" <PRIMTYPE WORD>)] 0>><SETG WRITE-PAGE %<RSUBR-ENTRY '[\ \ F!- WRITE-PAGE #DECL ("VALUE" <OR JFN FALSE> JFN FIX FIX)] 0>><SETG PMAP-FILE %<RSUBR-ENTRY '[\ \ F!- PMAP-FILE #DECL ("VALUE" <OR 'T FALSE> <PRIMTYPE WORD> <PRIMTYPE WORD> <PRIMTYPE WORD> <PRIMTYPE WORD> <PRIMTYPE WORD>)] 0>><SETG PRINTP-FILE %<RSUBR-ENTRY '[\ \ F!- PRINTP-FILE #DECL ("VALUE" <OR FIX UVECTOR FALSE> JFN <OR FIX UVECTOR> FIX)] 0>><SETG READP-FILE %<RSUBR-ENTRY '[\ \ F!- READP-FILE #DECL ("VALUE" <OR UVECTOR FIX FALSE> JFN <OR UVECTOR FIX> FIX)] 0>><SETG PRINTS-FILE %<RSUBR-ENTRY '[\ \ F!- PRINTS-FILE #DECL ("VALUE" <OR STRING FALSE> JFN STRING)] 0>><SETG READS-FILE %<RSUBR-ENTRY '[\ \ F!- READS-FILE #DECL ("VALUE" <OR STRING FALSE> JFN STRING)] 0>><SETG PRINTB-FILE %<RSUBR-ENTRY '[\ \ F!- PRINTB-FILE #DECL ("VALUE" <OR UVECTOR FALSE> JFN UVECTOR)] 0>><SETG READB-FILE %<RSUBR-ENTRY '[\ \ F!- READB-FILE #DECL ("VALUE" <OR UVECTOR FALSE> JFN UVECTOR)] 0>><SETG PRINTW-FILE %<RSUBR-ENTRY '[\ \ F!- PRINTW-FILE #DECL ("VALUE" <OR <PRIMTYPE WORD> FALSE> JFN FIX <PRIMTYPE WORD>)] 0>><SETG READW-FILE %<RSUBR-ENTRY '[\ \ F!- READW-FILE #DECL ("VALUE" <OR WORD FALSE> JFN FIX)] 0>><SETG NAME-OF-FILE %<RSUBR-ENTRY '[\ \ F!- NAME-OF-FILE #DECL ("VALUE" <OR STRING FALSE> JFN)] 0>><SETG SIZE-OF-FILE %<RSUBR-ENTRY '[\ \ F!- SIZE-OF-FILE #DECL ("VALUE" <OR FIX FALSE> JFN)] 0>><SETG LENGTH-OF-FILE %<RSUBR-ENTRY '[\ \ F!- LENGTH-OF-FILE #DECL ("VALUE" <OR FIX FALSE> JFN)] 0>><SETG ACCESS-OF-FILE %<RSUBR-ENTRY '[\ \ F!- ACCESS-OF-FILE #DECL ("VALUE" <OR FIX FALSE> JFN)] 0>><SETG ACCESS-FILE %<RSUBR-ENTRY '[\ \ F!- ACCESS-FILE #DECL ("VALUE" <OR JFN FALSE> JFN <PRIMTYPE WORD>)] 0>><SETG RELEASE-FILE %<RSUBR-ENTRY '[\ \ F!- RELEASE-FILE #DECL ("VALUE" <OR JFN FALSE> JFN)] 0>><SETG CLOSE-FILE %<RSUBR-ENTRY '[\ \ F!- CLOSE-FILE #DECL ("VALUE" <OR JFN FALSE> JFN <PRIMTYPE WORD>)] 0>><SETG OPEN-FILE %<RSUBR-ENTRY '[\ \ F!- OPEN-FILE #DECL ("VALUE" <OR JFN FALSE> JFN <PRIMTYPE WORD>)] 0>><SETG GET-FILE %<RSUBR-ENTRY '[\ \ F!- GET-FILE #DECL ("VALUE" <OR JFN FALSE> STRING <PRIMTYPE WORD>)] 0>><NEWTYPE JFN WORD><ENDPACKAGE>    <RPACKAGE "GRLOAD"><ENTRY TENEX? EXPSPLICE EXPFLOAD GROUP-DUMP GROUP-LOAD><USE "EDIT"><SETG GROUP-DUMP %<RSUBR-ENTRY '[\ \ F!- GROUP-DUMP #DECL ("VALUE" <OR ATOM FALSE> STRING "OPTIONAL" ATOM ANY ANY)] 0>><SETG GROUP-LOAD %<RSUBR-ENTRY '[\ \ F!- GROUP-LOAD #DECL ("VALUE" <OR ATOM FALSE> STRING "OPTIONAL" ATOM)] 0>><ENDPACKAGE>  <PACKAGE "STR"><ENTRY STRTOX SIXTOS RSHIFT UPPERCASE SUBSNC SUBSTR EXTRACT LEX FIRST-OF BACKS><SETG STRTOX %<RSUBR-ENTRY '[\ \ F!- STRTOX #DECL ("VALUE" FIX STRING)] 0>><SETG SIXTOS %<RSUBR-ENTRY '[\ \ F!- SIXTOS #DECL ("VALUE" STRING <PRIMTYPE WORD>)] 0>><SETG RSHIFT %<RSUBR-ENTRY '[\ \ F!- RSHIFT #DECL ("VALUE" STRING STRING FIX)] 0>><SETG UPPERCASE %<RSUBR-ENTRY '[\ \ F!- UPPERCASE #DECL ("VALUE" STRING STRING "OPTIONAL" FIX)] 0>><SETG SUBSNC %<RSUBR-ENTRY '[\ \ F!- SUBSNC #DECL ("VALUE" <OR STRING FALSE> STRING STRING "OPTIONAL" FIX)] 0>><SETG SUBSTR %<RSUBR-ENTRY '[\ \ F!- SUBSTR #DECL ("VALUE" <OR STRING FALSE> STRING STRING "OPTIONAL" FIX)] 0>><SETG EXTRACT %<RSUBR-ENTRY '[\ \ F!- EXTRACT #DECL ("VALUE" <OR STRING FALSE> STRING "OPTIONAL" <OR FIX STRING FALSE> FIX)] 0>><SETG LEX %<RSUBR-ENTRY '[\ \ F!- LEX #DECL ("VALUE" <LIST [REST STRING]> STRING FIX STRING)] 0>><SETG FIRST-OF %<RSUBR-ENTRY '[\ \ F!- FIRST-OF #DECL ("VALUE" <OR STRING FALSE> STRING STRING "OPTIONAL" FIX)] 0>><SETG BACKS %<RSUBR-ENTRY '[\ \ F!- BACKS #DECL ("VALUE" <OR STRING FALSE> STRING STRING "OPTIONAL" FIX)] 0>><ENDPACKAGE><PACKAGE "ASYLUM"><ENTRY READNRMODE READMODE PRINTWMODE PRINTMODE NAME-FIND-ADD NAME-FIND-DELETE NAME-FIND UNMAP-PAGE MAP-PAGE DIRMAP DATWRITE DATREAD GET-LOC-X PUT-LOC GET-LOC ALLOC-INIT MFD-INIT DIR-INIT DATA-LOCK-SLEEP DATA-LOCK-TRIES ITSUNLOCK DUNLOCK DSLOCK DHLOCK DATA-EXTEND-PAGES NAME-BLOCK-FREE NAMDATA DATA-BLOCK-FREE DATA-RENAME DATA-DELETE DATA-CLOSE DATA-CHAIN-SALVAGE DATA-BLOCK DATA-PRINTB DATA-READB DATA-RESET DATA-ACCESS DATA-IPRINT DATA-APRINT DATA-IREAD DATA-AREAD DATA-RESERVE DATA-READW DATA-PRINTW DATA-OPEN DATA-FIND DATA-PUT DATA-USE DATA-AUTHOR DATA-RDATE DATA-CDATE DATA-AUTHOR-WORD DATA-WRITE-WORD DATA-READ-WORD ALLOC-MAP ALLOC-UNLOCK DATA-UNLOCK RESET-DATA-FILE CLOSE-DATA-FILE FLUSH-DATA-FILE OPEN-DATA-FILE DATA-NON-FATAL-ERRORS DATA-ERRORS EXTEND-FILE MANIAC ASYLUM><USE "MADMAN"><USE "MADMAN" "TENXIO"><SETG READNRMODE 4><SETG READMODE 3><SETG PRINTWMODE 2><SETG PRINTMODE 1><SETG NAME-FIND-ADD %<RSUBR-ENTRY '[\ \ F!- NAME-FIND-ADD #DECL ("VALUE" <OR FIX FALSE> ASYLUM STRING)] 0>><SETG NAME-FIND-DELETE %<RSUBR-ENTRY '[\ \ F!- NAME-FIND-DELETE #DECL ("VALUE" <OR FALSE FIX> ASYLUM STRING)] 0>><SETG NAME-FIND %<RSUBR-ENTRY '[\ \ F!- NAME-FIND #DECL ("VALUE" <OR FALSE FIX> ASYLUM STRING)] 0>><SETG UNMAP-PAGE %<RSUBR-ENTRY '[\ \ F!- UNMAP-PAGE #DECL ("VALUE" <OR FALSE 'T> FIX)] 0>><SETG MAP-PAGE %<RSUBR-ENTRY '[\ \ F!- MAP-PAGE #DECL ("VALUE" <OR FALSE 'T> CHANNEL FIX FIX)] 0>><SETG DIRMAP %<RSUBR-ENTRY '[\ \ F!- DIRMAP #DECL ("VALUE" <OR FALSE FIX> ASYLUM FIX)] 0>><SETG DATWRITE %<RSUBR-ENTRY '[\ \ F!- DATWRITE #DECL ("VALUE" ANY ASYLUM FIX <PRIMTYPE WORD> <OR UVECTOR <PRIMTYPE WORD>>)] 0>><SETG DATREAD %<RSUBR-ENTRY '[\ \ F!- DATREAD #DECL ("VALUE" ANY ASYLUM FIX <PRIMTYPE WORD> <OR UVECTOR <PRIMTYPE WORD>>)] 0>><SETG GET-LOC-X %<RSUBR-ENTRY '[\ \ F!- GET-LOC-X #DECL ("VALUE" UVECTOR <PRIMTYPE WORD> UVECTOR FIX)] 0>><SETG PUT-LOC %<RSUBR-ENTRY '[\ \ F!- PUT-LOC #DECL ("VALUE" <PRIMTYPE WORD> <PRIMTYPE WORD> UVECTOR)] 0>><SETG GET-LOC %<RSUBR-ENTRY '[\ \ F!- GET-LOC #DECL ("VALUE" UVECTOR <PRIMTYPE WORD> UVECTOR)] 0>><SETG MFD-INIT %<RSUBR-ENTRY '[\ \ F!- MFD-INIT #DECL ("VALUE" <OR FALSE 'T> <PRIMTYPE VECTOR>)] 0>><SETG DIR-INIT %<RSUBR-ENTRY '[\ \ F!- DIR-INIT #DECL ("VALUE" 'T FIX)] 0>><SETG ITSUNLOCK %<RSUBR-ENTRY '[\ \ F!- ITSUNLOCK #DECL ("VALUE" 'T)] 0>><SETG DUNLOCK %<RSUBR-ENTRY '[\ \ F!- DUNLOCK #DECL ("VALUE" <OR FALSE <PRIMTYPE WORD>> <PRIMTYPE WORD>)] 0>><SETG DSLOCK %<RSUBR-ENTRY '[\ \ F!- DSLOCK #DECL ("VALUE" <OR <PRIMTYPE WORD> FALSE> <PRIMTYPE WORD>)] 0>><SETG DHLOCK %<RSUBR-ENTRY '[\ \ F!- DHLOCK #DECL ("VALUE" <OR <PRIMTYPE WORD> FALSE> <PRIMTYPE WORD>)] 0>><SETG NAME-BLOCK-FREE %<RSUBR-ENTRY '[\ \ F!- NAME-BLOCK-FREE #DECL ("VALUE" <OR FALSE FIX> ASYLUM <OR FALSE STRING FIX>)] 0>><SETG NAMDATA 1><SETG DATA-BLOCK-FREE %<RSUBR-ENTRY '[\ \ F!- DATA-BLOCK-FREE #DECL ("VALUE" ANY ASYLUM FIX "OPTIONAL" <OR 'T FALSE>)] 0>><SETG DATA-RENAME %<RSUBR-ENTRY '[\ \ F!- DATA-RENAME #DECL ("VALUE" <OR FALSE MANIAC> ASYLUM <OR FIX FALSE STRING> <OR FIX FALSE STRING>)] 0>><SETG DATA-DELETE %<RSUBR-ENTRY '[\ \ F!- DATA-DELETE #DECL ("VALUE" ANY ASYLUM <OR STRING FIX>)] 0>><SETG DATA-CLOSE %<RSUBR-ENTRY '[\ \ F!- DATA-CLOSE #DECL ("VALUE" <OR MANIAC !<FALSE FIX!>> ASYLUM MANIAC)] 0>><SETG DATA-CHAIN-SALVAGE %<RSUBR-ENTRY '[\ \ F!- DATA-CHAIN-SALVAGE #DECL ("VALUE" ATOM ASYLUM)] 0>><SETG DATA-BLOCK %<RSUBR-ENTRY '[\ \ F!- DATA-BLOCK #DECL ("VALUE" <OR FALSE FIX> ASYLUM MANIAC FIX)] 0>><SETG DATA-PRINTB %<RSUBR-ENTRY '[\ \ F!- DATA-PRINTB #DECL ("VALUE" <OR FIX !<FALSE FIX!>> ASYLUM MANIAC <OR UVECTOR <PRIMTYPE WORD>> "OPTIONAL" FIX)] 0>><SETG DATA-READB %<RSUBR-ENTRY '[\ \ F!- DATA-READB #DECL ("VALUE" <OR FIX !<FALSE FIX!>> ASYLUM MANIAC <OR UVECTOR <PRIMTYPE WORD>> "OPTIONAL" FIX <OR 'T FALSE> <OR 'T FALSE>)] 0>><SETG DATA-RESET %<RSUBR-ENTRY '[\ \ F!- DATA-RESET #DECL ("VALUE" <OR MANIAC !<FALSE FIX!>> ASYLUM MANIAC)] 0>><SETG DATA-ACCESS %<RSUBR-ENTRY '[\ \ F!- DATA-ACCESS #DECL ("VALUE" <OR !<FALSE FIX!> MANIAC> ASYLUM MANIAC FIX)] 0>><SETG DATA-IPRINT %<RSUBR-ENTRY '[\ \ F!- DATA-IPRINT #DECL ("VALUE" <OR FALSE MANIAC> ASYLUM MANIAC SPACE ANY "OPTIONAL" <OR FALSE 'T>)] 0>><SETG DATA-APRINT %<RSUBR-ENTRY '[\ \ F!- DATA-APRINT #DECL ("VALUE" <OR FALSE MANIAC> ASYLUM <OR STRING FIX> SPACE ANY "OPTIONAL" <OR 'T FALSE>)] 0>><SETG DATA-IREAD %<RSUBR-ENTRY '[\ \ F!- DATA-IREAD #DECL ("VALUE" ANY ASYLUM MANIAC SPACE "OPTIONAL" FIX <OR FALSE 'T>)] 0>><SETG DATA-AREAD %<RSUBR-ENTRY '[\ \ F!- DATA-AREAD #DECL ("VALUE" ANY ASYLUM <OR STRING FIX> SPACE "OPTIONAL" FIX <OR 'T FALSE>)] 0>><SETG DATA-RESERVE %<RSUBR-ENTRY '[\ \ F!- DATA-RESERVE #DECL ("VALUE" <OR FALSE FIX> ASYLUM FIX)] 0>><SETG DATA-READW %<RSUBR-ENTRY '[\ \ F!- DATA-READW #DECL ("VALUE" ANY ASYLUM <OR FALSE STRING FIX>)] 0>><SETG DATA-PRINTW %<RSUBR-ENTRY '[\ \ F!- DATA-PRINTW #DECL ("VALUE" <OR FALSE MANIAC> ASYLUM <OR STRING MANIAC FALSE FIX> <PRIMTYPE WORD>)] 0>><SETG DATA-OPEN %<RSUBR-ENTRY '[\ \ F!- DATA-OPEN #DECL ("VALUE" <OR FALSE MANIAC> <OR STRING FIX> ASYLUM <OR FIX STRING>)] 0>><SETG DATA-FIND %<RSUBR-ENTRY '[\ \ F!- DATA-FIND #DECL ("VALUE" ANY ASYLUM FIX "OPTIONAL" <OR 'T FALSE>)] 0>><SETG DATA-PUT %<RSUBR-ENTRY '[\ \ F!- DATA-PUT #DECL ("VALUE" ANY ASYLUM FIX <UVECTOR [4 WORD]>)] 0>><SETG DATA-USE %<RSUBR-ENTRY '[\ \ F!- DATA-USE #DECL ("VALUE" ANY ASYLUM MANIAC)] 0>><SETG DATA-AUTHOR %<RSUBR-ENTRY '[\ \ F!- DATA-AUTHOR #DECL ("VALUE" ANY ASYLUM MANIAC)] 0>><SETG DATA-RDATE %<RSUBR-ENTRY '[\ \ F!- DATA-RDATE #DECL ("VALUE" ANY ASYLUM MANIAC)] 0>><SETG DATA-CDATE %<RSUBR-ENTRY '[\ \ F!- DATA-CDATE #DECL ("VALUE" ANY ASYLUM MANIAC "OPTIONAL" FIX)] 0>><SETG ALLOC-MAP %<RSUBR-ENTRY '[\ \ F!- ALLOC-MAP #DECL ("VALUE" <OR ATOM FALSE ASYLUM> ASYLUM)] 0>><SETG ALLOC-UNLOCK %<RSUBR-ENTRY '[\ \ F!- ALLOC-UNLOCK #DECL ("VALUE" ANY ASYLUM)] 0>><SETG DATA-UNLOCK %<RSUBR-ENTRY '[\ \ F!- DATA-UNLOCK #DECL ("VALUE" ANY ASYLUM <OR FALSE STRING FIX>)] 0>><SETG RESET-DATA-FILE %<RSUBR-ENTRY '[\ \ F!- RESET-DATA-FILE #DECL ("VALUE" <OR ASYLUM FALSE> ASYLUM)] 0>><SETG CLOSE-DATA-FILE %<RSUBR-ENTRY '[\ \ F!- CLOSE-DATA-FILE #DECL ("VALUE" <OR ATOM CHANNEL> ASYLUM)] 0>><SETG FLUSH-DATA-FILE %<RSUBR-ENTRY '[\ \ F!- FLUSH-DATA-FILE #DECL ("VALUE" ASYLUM ASYLUM "OPTIONAL" <OR FALSE 'T>)] 0>><SETG OPEN-DATA-FILE %<RSUBR-ENTRY '[\ \ F!- OPEN-DATA-FILE #DECL ("VALUE" <OR ASYLUM FALSE> STRING "OPTIONAL" <OR ASYLUM FALSE> FIX FIX)] 0>><SETG EXTEND-FILE %<RSUBR-ENTRY '[\ \ F!- EXTEND-FILE #DECL ("VALUE" <OR ASYLUM FALSE> ASYLUM FIX "OPTIONAL" <UVECTOR [REST FIX]>)] 0>><NEWTYPE MANIAC VECTOR'<<PRIMTYPE VECTOR> FIX FIX FIX FIX FIX FIX <OR FIX STRING> FIX>><NEWTYPE ASYLUM VECTOR'<<PRIMTYPE VECTOR> CHANNEL FIX FIX <OR UVECTOR FIX> UVECTOR FIX UVECTOR VECTOR>><MANIFEST NAMDATA PRINTMODE PRINTWMODE READMODE READNRMODE><GDECL (DATA-ERRORS) <VECTOR [REST STRING]> (DATA-NON-FATAL-ERRORS) <UVECTOR [REST FIX]> (DATA-READ-WORD) WORD (DATA-WRITE-WORD) WORD (DATA-AUTHOR-WORD) WORD><ENDPACKAGE><PACKAGE "PAGES"><RENTRY PAGE-GIVE PAGE-FIND CORE-BLOCK><SETG PAGE-GIVE %<RSUBR-ENTRY '[\ \ F!- PAGE-GIVE #DECL ("VALUE" FIX FIX "OPTIONAL" FIX)] 0>><SETG PAGE-FIND %<RSUBR-ENTRY '[\ \ F!- PAGE-FIND #DECL ("VALUE" <OR FIX FALSE> "OPTIONAL" FIX)] 0>><SETG CORE-BLOCK %<RSUBR-ENTRY '[\ \ F!- CORE-BLOCK #DECL ("VALUE" <OR FIX FALSE> <PRIMTYPE WORD> FIX FIX FIX FIX)] 0>><ENDPACKAGE><PACKAGE "SUBSYS"><ENTRY KILLFORK CONTINUE SUBSYS><USE "JSYS"><SETG KILLFORK %<RSUBR-ENTRY '[\ \ F!- KILLFORK #DECL ("VALUE" <OR FALSE <PRIMTYPE WORD>> <PRIMTYPE WORD>)] 0>><SETG CONTINUE %<RSUBR-ENTRY '[\ \ F!- CONTINUE #DECL ("VALUE" <OR FALSE <PRIMTYPE WORD>> <PRIMTYPE WORD>)] 0>><SETG SUBSYS %<RSUBR-ENTRY '[\ \ F!- SUBSYS #DECL ("VALUE" <PRIMTYPE WORD> "OPTIONAL" STRING)] 0>><ENDPACKAGE> <PACKAGE "LSRTNS"><ENTRY $ALTBY $REMRK $RELAT $ACCNT $PROJN $SUPER $BRDAY $NADDR $HPHON $HADDR $WPHON $WADDR $NNAME $HNAME $DNAME LSR-ENTRY LSR-EXTRACT><SETG $ALTBY 14><SETG $REMRK 13><SETG $RELAT 12><SETG $ACCNT 11><SETG $PROJN 10><SETG $SUPER 9><SETG $BRDAY 8><SETG $NADDR 7><SETG $HPHON 6><SETG $HADDR 5><SETG $WPHON 4><SETG $WADDR 3><SETG $NNAME 2><SETG $HNAME 1><SETG $DNAME 0><SETG LSR-ENTRY %<RSUBR-ENTRY '[\ \ F!- LSR-ENTRY #DECL ("VALUE" <OR FALSE WORD> STRING)] 0>><SETG LSR-EXTRACT %<RSUBR-ENTRY '[\ \ F!- LSR-EXTRACT #DECL ("VALUE" <OR STRING FALSE> <PRIMTYPE WORD> FIX)] 0>><MANIFEST $DNAME $HNAME $NNAME $WADDR $WPHON $HADDR $HPHON $NADDR $BRDAY $SUPER $PROJN $ACCNT $RELAT $REMRK $ALTBY><ENDPACKAGE> <PACKAGE "LSTHLP"><ENTRY LADD DEL2 DELALL DELQ><SETG LADD %<RSUBR-ENTRY '[\ \ F!- LADD #DECL ("VALUE" LIST <PRIMTYPE LIST> ANY FIX)] 0>><SETG DEL2 %<RSUBR-ENTRY '[\ \ F!- DEL2 #DECL ("VALUE" LIST ANY LIST)] 0>><SETG DELALL %<RSUBR-ENTRY '[\ \ F!- DELALL #DECL ("VALUE" LIST ANY LIST)] 0>><SETG DELQ %<RSUBR-ENTRY '[\ \ F!- DELQ #DECL ("VALUE" LIST ANY LIST)] 0>><ENDPACKAGE> <RPACKAGE "NEWSTRUC"><ENTRY NEWSTRUC MSETG><SETG NEWSTRUC %<RSUBR-ENTRY '[\ \ F!- NEWSTRUC #DECL ("VALUE" <OR ATOM SPLICE> <OR ATOM <LIST [REST ATOM]>> ATOM "ARGS" LIST)] 0>><SETG MSETG %<RSUBR-ENTRY '[\ \ F!- MSETG #DECL ("VALUE" <OR ATOM SPLICE> "TUPLE" <TUPLE [REST ATOM ANY]>)] 0>><ENDPACKAGE>   <RPACKAGE "DATIME"><ENTRY FIX-DATE GETTIMEZONE RTIME:SEC RTIME DATE><SETG FIX-DATE %<RSUBR-ENTRY '[\ \ F!- FIX-DATE #DECL ("VALUE" FIX)] 0>><SETG GETTIMEZONE %<RSUBR-ENTRY '[\ \ F!- GETTIMEZONE #DECL ("VALUE" STRING)] 0>><SETG RTIME:SEC %<RSUBR-ENTRY '[\ \ F!- RTIME:SEC #DECL ("VALUE" FIX)] 0>><SETG RTIME %<RSUBR-ENTRY '[\ \ F!- RTIME #DECL ("VALUE" <LIST FIX FIX FIX>)] 0>><SETG DATE %<RSUBR-ENTRY '[\ \ F!- DATE #DECL ("VALUE" <LIST FIX FIX FIX>)] 0>><ENDPACKAGE>   <PACKAGE "SYM"><ENTRY SYMBOLS BUILD-SYMBOLS SYMREAD><USE "SORTX"><SETG BUILD-SYMBOLS %<RSUBR-ENTRY '[\ \ F!- BUILD-SYMBOLS #DECL ("VALUE" VECTOR <VECTOR [REST STRING]>)] 0>><SETG SYMREAD %<RSUBR-ENTRY '[\ \ F!- SYMREAD #DECL ("VALUE" <OR ATOM FALSE STRING>)] 0>><GDECL (SYMBOLS) <VECTOR STRING [REST <OR VECTOR STRING>]>><ENDPACKAGE>  <PACKAGE "GNJFN"><ENTRY DO-ODTIM DO-GFUST DO-RFTAD CUR-STATE DO-GETAB DO-SYSGT GET-TABLE GNJFN-RESET NEXT-FILE><USE "NSTR"><SETG DO-ODTIM %<RSUBR-ENTRY '[\ \ F!- DO-ODTIM #DECL ("VALUE" ANY <PRIMTYPE WORD> <OR CHANNEL STRING> "OPTIONAL" <PRIMTYPE WORD>)] 0>><SETG DO-GFUST %<RSUBR-ENTRY '[\ \ F!- DO-GFUST #DECL ("VALUE" STRING CHANNEL FIX "OPTIONAL" STRING)] 0>><SETG DO-RFTAD %<RSUBR-ENTRY '[\ \ F!- DO-RFTAD #DECL ("VALUE" <UVECTOR [REST WORD]> CHANNEL "OPTIONAL" <UVECTOR [REST WORD]>)] 0>><SETG DO-GETAB %<RSUBR-ENTRY '[\ \ F!- DO-GETAB #DECL ("VALUE" <OR FALSE WORD> <PRIMTYPE WORD> FIX)] 0>><SETG DO-SYSGT %<RSUBR-ENTRY '[\ \ F!- DO-SYSGT #DECL ("VALUE" WORD <OR STRING <PRIMTYPE WORD>> "OPTIONAL" <OR ATOM FALSE>)] 0>><SETG GET-TABLE %<RSUBR-ENTRY '[\ \ F!- GET-TABLE #DECL ("VALUE" <OR FALSE <UVECTOR [REST WORD]>> <OR STRING <PRIMTYPE WORD>>)] 0>><SETG GNJFN-RESET %<RSUBR-ENTRY '[\ \ F!- GNJFN-RESET #DECL ("VALUE" FALSE "OPTIONAL" <OR ATOM FALSE>)] 0>><SETG NEXT-FILE %<RSUBR-ENTRY '[\ \ F!- NEXT-FILE #DECL ("VALUE" <OR FALSE <VECTOR STRING>> "OPTIONAL" STRING <OR FALSE <VECTOR ANY>>)] 0>><ENDPACKAGE><PACKAGE "MDTYPE"><ENTRY MRKPOS MRKCOR MKCHNG MRKERR SPCERR WTOE ETOW LTOE WTOL LTOW ETOL NMELTS FRDSUM CNFSUM DOF SDUR MDUR SCNF STYP MCNF MTYP WDS FDF BST TLS AUT LSP SFL SPAN VNT PFX STK MSD FWD BCK MS EVTYP EVNT MCOD SPCHNG ILLSPC RND SRC MTOP? MBACK MREST WRD LTR ELT DASH DOT><USE "TEMHLP"><SETG MRKPOS 14><SETG MRKCOR 13><SETG MKCHNG 12><SETG MRKERR 11><SETG SPCERR 10><SETG WTOE 9><SETG ETOW 8><SETG LTOE 6><SETG WTOL 7><SETG LTOW 5><SETG ETOL 4><SETG NMELTS 3><SETG FRDSUM 2><SETG CNFSUM 1><NEWTYPE DOF TEMPLATE'<DOF FLOAT FLOAT FIX FIX FIX FIX FIX FIX FIX ANY ANY FIX FIX FIX [REST <NOT ANY>]>><SETG DOF %<RSUBR-ENTRY '[\ \ F!- DOF #DECL (FLOAT FLOAT FIX FIX FIX FIX FIX FIX FIX ANY ANY FIX FIX FIX)] 0>><SETG SDUR 6><SETG MDUR 5><SETG SCNF 4><SETG STYP 3><SETG MCNF 2><SETG MTYP 1><SETG WDS 7><SETG FDF 6><SETG BST 5><SETG TLS 4><SETG AUT 3><SETG LSP 2><SETG SFL 1><NEWTYPE SPAN TEMPLATE'<OR <SPAN ANY FIX ATOM LIST FIX [REST <NOT ANY>]> <SPAN ANY FIX ATOM LIST FIX DOF [REST <NOT ANY>]> <SPAN ANY FIX ATOM LIST FIX DOF STRING [REST <NOT ANY>]>>><SETG SPAN %<RSUBR-ENTRY '[\ \ F!- SPAN #DECL (ANY FIX ATOM LIST FIX "OPTIONAL" DOF STRING)] 0>><SETG VNT 6><SETG PFX 5><SETG STK 4><SETG MSD 3><SETG FWD 2><SETG BCK 1><NEWTYPE MS TEMPLATE'<MS <LIST [REST SPAN]> <LIST [REST SPAN]> ELT <OR ATOM FALSE> FIX <LIST [REST EVNT]>>><SETG MS %<RSUBR-ENTRY '[\ \ F!- MS #DECL (LIST LIST ELT ANY FIX LIST)] 0>><SETG EVTYP 1><NEWTYPE EVNT VECTOR'<VECTOR ATOM>><NEWTYPE MCOD UVECTOR'<<PRIMTYPE UVECTOR> [REST MS]>><SETG SPCHNG #MACRO (#FUNCTION (('X) <FORM PROG ((X .X)) #DECL ((X) DOF (VALUE) FIX) '<+ <ETOL .X> <LTOW .X> <LTOE .X> <WTOL .X>>>))><SETG ILLSPC #MACRO (#FUNCTION (('X) <FORM PROG ((X .X)) #DECL ((X) DOF (VALUE) FIX) '<+ <WTOE .X> <ETOW .X>>>))><SETG RND #MACRO (#FUNCTION (('X) <FORM PROG ((XX .X)) #DECL ((XX) MS) '<COND (<STK .XX> <PFX .XX>)>>))><SETG SRC #MACRO (#FUNCTION (('X) <FORM PROG ((XX .X)) #DECL ((XX) SPAN) '<COND (<SFL .XX> <AUT .XX>) (ELSE <CHTYPE <TLS .XX> FALSE>)>>))><SETG MTOP? #MACRO (#FUNCTION (('C) <FORM PROG ((C .C)) #DECL ((C) MCOD) '<==? <LENGTH .C> <LENGTH <TOP .C>>>>))><SETG MBACK #MACRO (#FUNCTION (('X "OPTIONAL" ('N 1)) <FORM CHTYPE <FORM BACK .X .N> MCOD>))><SETG MREST #MACRO (#FUNCTION (('X "OPTIONAL" ('N 1)) <FORM CHTYPE <FORM REST .X .N> MCOD>))><NEWTYPE ELT TEMPLATE'<ELT ATOM FLOAT ATOM FLOAT FLOAT FLOAT [REST <NOT ANY>]>><SETG ELT %<RSUBR-ENTRY '[\ \ F!- ELT #DECL (ATOM FLOAT ATOM FLOAT FLOAT FLOAT)] 0>><MANIFEST EVTYP BCK FWD MSD STK PFX VNT SFL LSP AUT TLS BST FDF WDS MTYP MCNF STYP SCNF MDUR SDUR CNFSUM FRDSUM NMELTS ETOL LTOW WTOL LTOE ETOW WTOE SPCERR MRKERR MKCHNG MRKCOR MRKPOS><ENDPACKAGE><PACKAGE "SVTA"><ENTRY TTYSIOT TTYSOUT TTYSETUP TTYSET TTYGET TTYBIN SET-TTY-MODE READ-TTY-MODE RELEASE? RELEASE FAT ASSIGN-TTY><SETG TTYSIOT %<RSUBR-ENTRY '[\ \ F!- TTYSIOT #DECL ("VALUE" CHANNEL CHANNEL STRING FIX <PRIMTYPE WORD>)] 0>><SETG TTYSOUT %<RSUBR-ENTRY '[\ \ F!- TTYSOUT #DECL ("VALUE" FIX FIX STRING FIX)] 0>><SETG TTYSET %<RSUBR-ENTRY '[\ \ F!- TTYSET #DECL ("VALUE" CHANNEL CHANNEL <UVECTOR [3 <PRIMTYPE WORD>]>)] 0>><SETG TTYGET %<RSUBR-ENTRY '[\ \ F!- TTYGET #DECL ("VALUE" <UVECTOR [3 <PRIMTYPE WORD>]> CHANNEL <UVECTOR [3 <PRIMTYPE WORD>]>)] 0>><SETG TTYBIN %<RSUBR-ENTRY '[\ \ F!- TTYBIN #DECL ("VALUE" CHARACTER FIX)] 0>><SETG SET-TTY-MODE %<RSUBR-ENTRY '[\ \ F!- SET-TTY-MODE #DECL ("VALUE" <PRIMTYPE WORD> <PRIMTYPE WORD> <PRIMTYPE WORD>)] 0>><SETG READ-TTY-MODE %<RSUBR-ENTRY '[\ \ F!- READ-TTY-MODE #DECL ("VALUE" FIX <PRIMTYPE WORD>)] 0>><SETG RELEASE %<RSUBR-ENTRY '[\ \ F!- RELEASE #DECL ("VALUE" ATOM <OR <PRIMTYPE LIST> <PRIMTYPE VECTOR> <PRIMTYPE UVECTOR> <PRIMTYPE STRING> <PRIMTYPE BYTES>>)] 0>><SETG FAT %<RSUBR-ENTRY '[\ \ F!- FAT #DECL ("VALUE" <OR FIX FALSE>)] 0>><SETG ASSIGN-TTY %<RSUBR-ENTRY '[\ \ F!- ASSIGN-TTY #DECL ("VALUE" <OR FIX FALSE> FIX)] 0>><ENDPACKAGE> <PACKAGE "ESYASS"><ENTRY EASY-ASSEMBLE MAKE-ESYASS :SL><USE "JCL" "CODING"><SETG EASY-ASSEMBLE %<RSUBR-ENTRY '[\ \ F!- EASY-ASSEMBLE #DECL ("VALUE" ANY)] 0>><SETG MAKE-ESYASS %<RSUBR-ENTRY '[\ \ F!- MAKE-ESYASS #DECL ("VALUE" ANY)] 0>><SETG :SL %<RSUBR-ENTRY '[\ \ F!- :SL #DECL ("VALUE" ATOM)] 0>><ENDPACKAGE><PACKAGE "MADMAN"><ENTRY ASHARE-VECTOR ABIT-VCHAIN ABIT-NOFIXUP ABIT-NOGROW ASPEC-BITS ABITS MADMAN-PAGE-GIVE MADMAN-PAGE-FIND PAGE-GIVE-TABLE APUTC APUT AIUVECTOR ALIUVECTOR AUVECTOR ALUVECTOR AIVECTOR ALIVECTOR AVECTOR ALVECTOR AILIST ALILIST ALIST ALLIST AIBYTES ALIBYTES ABYTES ALBYTES AISTRING ALISTRING ASTRING ALSTRING ARELEASE ACONS AREAD APRINT ACOPY AGC ALEGAL? BOUNDS-CHECK APLENGTH ALENGTH AGIVE ARESET AFIND APGGIVE APGFIND ADD-ALLOC ARESTORE ARESERVE AERRFIX AERRFALSE ALLOC-TABLE CURSPACE PBLOCK SPACE><USE "ASYLUM"><SETG ASHARE-VECTOR 6><SETG ABIT-VCHAIN 4294967296><SETG ABIT-NOFIXUP 8589934592><SETG ABIT-NOGROW *400000000000*><SETG ASPEC-BITS 8><SETG ABITS %<RSUBR-ENTRY '[\ \ F!- ABITS #DECL ("VALUE" <OR FIX SPACE> SPACE "OPTIONAL" <OR FIX FALSE>)] 0>><SETG MADMAN-PAGE-GIVE %<RSUBR-ENTRY '[\ \ F!- MADMAN-PAGE-GIVE #DECL ("VALUE" FIX FIX "OPTIONAL" FIX)] 0>><SETG MADMAN-PAGE-FIND %<RSUBR-ENTRY '[\ \ F!- MADMAN-PAGE-FIND #DECL ("VALUE" <OR FIX FALSE> "OPTIONAL" FIX)] 0>><SETG PAGE-GIVE-TABLE %<RSUBR-ENTRY '[\ \ F!- PAGE-GIVE-TABLE #DECL ("VALUE" <OR ATOM FALSE> <UVECTOR [8 WORD]>)] 0>><SETG APUTC %<RSUBR-ENTRY '[\ \ F!- APUTC #DECL ("VALUE" ANY SPACE STRUCTURED FIX ANY)] 0>><SETG APUT %<RSUBR-ENTRY '[\ \ F!- APUT #DECL ("VALUE" ANY SPACE STRUCTURED FIX ANY)] 0>><SETG AIUVECTOR %<RSUBR-ENTRY '[\ \ F!- AIUVECTOR #DECL ("VALUE" <OR UVECTOR FALSE> SPACE FIX "OPTIONAL" ANY)] 0>><SETG ALIUVECTOR %<RSUBR-ENTRY '[\ \ F!- ALIUVECTOR #DECL ("VALUE" <OR UVECTOR FALSE> FIX "OPTIONAL" ANY)] 0>><SETG AUVECTOR %<RSUBR-ENTRY '[\ \ F!- AUVECTOR #DECL ("VALUE" <OR UVECTOR FALSE> SPACE "TUPLE" TUPLE)] 0>><SETG ALUVECTOR %<RSUBR-ENTRY '[\ \ F!- ALUVECTOR #DECL ("VALUE" <OR UVECTOR FALSE> "TUPLE" TUPLE)] 0>><SETG AIVECTOR %<RSUBR-ENTRY '[\ \ F!- AIVECTOR #DECL ("VALUE" <OR VECTOR FALSE> SPACE FIX "OPTIONAL" ANY)] 0>><SETG ALIVECTOR %<RSUBR-ENTRY '[\ \ F!- ALIVECTOR #DECL ("VALUE" <OR VECTOR FALSE> FIX "OPTIONAL" ANY)] 0>><SETG AVECTOR %<RSUBR-ENTRY '[\ \ F!- AVECTOR #DECL ("VALUE" <OR VECTOR FALSE> SPACE "TUPLE" TUPLE)] 0>><SETG ALVECTOR %<RSUBR-ENTRY '[\ \ F!- ALVECTOR #DECL ("VALUE" <OR VECTOR FALSE> "TUPLE" TUPLE)] 0>><SETG AILIST %<RSUBR-ENTRY '[\ \ F!- AILIST #DECL ("VALUE" <OR LIST FALSE> SPACE FIX "OPTIONAL" ANY)] 0>><SETG ALILIST %<RSUBR-ENTRY '[\ \ F!- ALILIST #DECL ("VALUE" <OR LIST FALSE> FIX "OPTIONAL" ANY)] 0>><SETG ALIST %<RSUBR-ENTRY '[\ \ F!- ALIST #DECL ("VALUE" <OR LIST FALSE> SPACE "TUPLE" TUPLE)] 0>><SETG ALLIST %<RSUBR-ENTRY '[\ \ F!- ALLIST #DECL ("VALUE" <OR LIST FALSE> "TUPLE" TUPLE)] 0>><SETG AIBYTES %<RSUBR-ENTRY '[\ \ F!- AIBYTES #DECL ("VALUE" <OR BYTES FALSE> SPACE FIX FIX "OPTIONAL" <PRIMTYPE WORD>)] 0>><SETG ALIBYTES %<RSUBR-ENTRY '[\ \ F!- ALIBYTES #DECL ("VALUE" <OR BYTES FALSE> FIX FIX "OPTIONAL" <PRIMTYPE WORD>)] 0>><SETG ABYTES %<RSUBR-ENTRY '[\ \ F!- ABYTES #DECL ("VALUE" <OR BYTES FALSE> SPACE FIX "TUPLE" TUPLE)] 0>><SETG ALBYTES %<RSUBR-ENTRY '[\ \ F!- ALBYTES #DECL ("VALUE" <OR BYTES FALSE> FIX "TUPLE" TUPLE)] 0>><SETG AISTRING %<RSUBR-ENTRY '[\ \ F!- AISTRING #DECL ("VALUE" <OR STRING FALSE> SPACE FIX "OPTIONAL" CHARACTER)] 0>><SETG ALISTRING %<RSUBR-ENTRY '[\ \ F!- ALISTRING #DECL ("VALUE" <OR STRING FALSE> FIX "OPTIONAL" CHARACTER)] 0>><SETG ASTRING %<RSUBR-ENTRY '[\ \ F!- ASTRING #DECL ("VALUE" <OR STRING FALSE> SPACE "TUPLE" TUPLE)] 0>><SETG ALSTRING %<RSUBR-ENTRY '[\ \ F!- ALSTRING #DECL ("VALUE" <OR STRING FALSE> "TUPLE" TUPLE)] 0>><SETG ARELEASE %<RSUBR-ENTRY '[\ \ F!- ARELEASE #DECL ("VALUE" ANY SPACE ANY "OPTIONAL" FIX)] 0>><SETG ACONS %<RSUBR-ENTRY '[\ \ F!- ACONS #DECL ("VALUE" <OR LIST FALSE> SPACE ANY LIST)] 0>><SETG AREAD %<RSUBR-ENTRY '[\ \ F!- AREAD #DECL ("VALUE" ANY SPACE <OR CHANNEL CHANP ASYLUM> "OPTIONAL" FIX FIX <OR 'T FALSE>)] 0>><SETG APRINT %<RSUBR-ENTRY '[\ \ F!- APRINT #DECL ("VALUE" <OR ASYLUM CHANNEL CHANP> SPACE ANY <OR CHANNEL CHANP ASYLUM> "OPTIONAL" FIX <OR 'T FALSE>)] 0>><SETG ACOPY %<RSUBR-ENTRY '[\ \ F!- ACOPY #DECL ("VALUE" ANY SPACE ANY)] 0>><SETG AGC %<RSUBR-ENTRY '[\ \ F!- AGC #DECL ("VALUE" ANY SPACE ANY)] 0>><SETG ALEGAL? %<RSUBR-ENTRY '[\ \ F!- ALEGAL? #DECL ("VALUE" <OR ATOM FALSE> SPACE ANY)] 0>><SETG BOUNDS-CHECK %<RSUBR-ENTRY '[\ \ F!- BOUNDS-CHECK #DECL ("VALUE" ANY SPACE)] 0>><SETG APLENGTH %<RSUBR-ENTRY '[\ \ F!- APLENGTH #DECL ("VALUE" WORD SPACE)] 0>><SETG ALENGTH %<RSUBR-ENTRY '[\ \ F!- ALENGTH #DECL ("VALUE" WORD SPACE "OPTIONAL" FIX FIX)] 0>><SETG AGIVE %<RSUBR-ENTRY '[\ \ F!- AGIVE #DECL ("VALUE" SPACE SPACE)] 0>><SETG ARESET %<RSUBR-ENTRY '[\ \ F!- ARESET #DECL ("VALUE" SPACE SPACE "OPTIONAL" <OR FALSE 'T> <OR FALSE 'T>)] 0>><SETG AFIND %<RSUBR-ENTRY '[\ \ F!- AFIND #DECL ("VALUE" <OR FALSE SPACE> FIX "OPTIONAL" <OR FALSE SPACE> FIX)] 0>><SETG APGGIVE %<RSUBR-ENTRY '[\ \ F!- APGGIVE #DECL ("VALUE" FIX FIX FIX <UVECTOR [REST WORD]>)] 0>><SETG APGFIND %<RSUBR-ENTRY '[\ \ F!- APGFIND #DECL ("VALUE" <OR FALSE FIX> FIX FIX <UVECTOR [REST WORD]>)] 0>><SETG ADD-ALLOC %<RSUBR-ENTRY '[\ \ F!- ADD-ALLOC #DECL ("VALUE" <OR ATOM FALSE SPACE> SPACE FIX "OPTIONAL" <OR FIX FALSE>)] 0>><SETG ARESTORE %<RSUBR-ENTRY '[\ \ F!- ARESTORE #DECL ("VALUE" <OR FALSE FIX> SPACE "OPTIONAL" <OR ATOM FALSE>)] 0>><SETG ARESERVE %<RSUBR-ENTRY '[\ \ F!- ARESERVE #DECL ("VALUE" <OR FALSE FIX> FIX "OPTIONAL" <UVECTOR [REST WORD]> <OR 'T FALSE>)] 0>><NEWTYPE PBLOCK VECTOR'<VECTOR FIX WORD>><NEWTYPE SPACE VECTOR'<VECTOR <LIST [REST PBLOCK]> WORD WORD WORD LIST VECTOR FIX FIX>><MANIFEST ASPEC-BITS ABIT-NOGROW ABIT-NOFIXUP ABIT-VCHAIN ASHARE-VECTOR><ENDPACKAGE>    <PACKAGE "NOW"><ENTRY NOW><USE "DATIME" "DOW" "TIMFCN"><SETG NOW %<RSUBR-ENTRY '[\ \ F!- NOW #DECL ("VALUE" STRING)] 0>><ENDPACKAGE>   <PACKAGE "BIGPRINT"><ENTRY 5X7-MASK BIGPRINT><SETG 5X7-MASK %<RSUBR-ENTRY '[\ \ F!- 5X7-MASK #DECL ("VALUE" FIX FIX)] 0>><SETG BIGPRINT %<RSUBR-ENTRY '[\ \ F!- BIGPRINT #DECL ("VALUE" ANY STRING "OPTIONAL" FIX FIX)] 0>><ENDPACKAGE>    <PACKAGE "ATNTYP"><ENTRY PIF PRINCTHEM TRECURSED RECURSED SPACE Q-MRK ST SQUIGGLY2 SQUIGGLY1 DIAGRAM SACT TERM? CIRCLE NSTAT ACTIN ATEST IWORD ARC EMPTY-ARC EMPTY-CIRCLE EMPTY-UVECTOR><SETG PIF #MACRO (#FUNCTION (('F CR? "ARGS" O) <FORM COND (<COND (<TYPE? .F ATOM> <FORM GVAL .F>) (<TYPE? .F FORM> .F) (ELSE <FORM OR !<MAPF ,LIST <FUNCTION (F) <COND (<TYPE? .F ATOM> <MAPRET <FORM GVAL .F>>) (<TYPE? .F FORM> .F) (ELSE <ERROR PIF .F>)>> .F!>>)> <FORM PRINCTHEM !.O> <COND (.CR? <FORM CRLF>)>)>))><SETG PRINCTHEM %<RSUBR-ENTRY '[\ \ F!- PRINCTHEM #DECL ("VALUE" ANY "TUPLE" TUPLE)] 0>><NEWTYPE DIAGRAM UVECTOR'!<<PRIMTYPE UVECTOR> [REST CIRCLE]!>><SETG SACT 2><SETG TERM? 1><NEWTYPE CIRCLE VECTOR'!<<PRIMTYPE VECTOR> <OR ATOM FALSE> <UVECTOR [REST ARC]>!>><SETG NSTAT 4><SETG ACTIN 3><SETG ATEST 2><SETG IWORD 1><NEWTYPE ARC VECTOR'!<<PRIMTYPE VECTOR> <OR ATOM STRING <LIST [REST <OR ATOM STRING>]>> <UVECTOR [REST !<VECTOR ATOM ANY!>]> <UVECTOR [REST !<VECTOR ATOM ANY!>]> CIRCLE!>><MANIFEST IWORD ATEST ACTIN NSTAT TERM? SACT><GDECL (EMPTY-UVECTOR) <UVECTOR [REST <NOT ANY>]> (EMPTY-CIRCLE) CIRCLE (EMPTY-ARC) ARC (SQUIGGLY1) STRING (SQUIGGLY2) STRING (ST) STRING (Q-MRK) STRING (SPACE) STRING (RECURSED) STRING (TRECURSED) STRING><ENDPACKAGE><PACKAGE "INVERT"><ENTRY INV-SRC-COUNT INV-SRC-MAPF INV-SRC INV-RELDATA INV-IUVECTOR INV-VECTOR INV INV-LENGTH INV-TEST INV-DELETE INV-INSERT><USE "MADMAN"><SETG INV-SRC-COUNT %<RSUBR-ENTRY '[\ \ F!- INV-SRC-COUNT #DECL ("VALUE" <OR FIX FALSE> VECTOR <OR INV FALSE>)] 0>><SETG INV-SRC-MAPF %<RSUBR-ENTRY '[\ \ F!- INV-SRC-MAPF #DECL ("VALUE" ANY VECTOR <OR INV FALSE> <OR APPLICABLE FALSE> <OR APPLICABLE FALSE> <OR VECTOR FALSE>)] 0>><SETG INV-SRC %<RSUBR-ENTRY '[\ \ F!- INV-SRC #DECL ("VALUE" <OR INV FIX FALSE> VECTOR <OR INV FALSE> FIX <OR INV FALSE>)] 0>><SETG INV-RELDATA %<RSUBR-ENTRY '[\ \ F!- INV-RELDATA #DECL ("VALUE" ANY ANY)] 0>><SETG INV-IUVECTOR %<RSUBR-ENTRY '[\ \ F!- INV-IUVECTOR #DECL ("VALUE" UVECTOR FIX)] 0>><SETG INV-VECTOR %<RSUBR-ENTRY '[\ \ F!- INV-VECTOR #DECL ("VALUE" VECTOR "TUPLE" ANY)] 0>><NEWTYPE INV VECTOR'<VECTOR FIX FIX <OR FIX <VECTOR [REST FIX UVECTOR]>>>><SETG INV-LENGTH %<RSUBR-ENTRY '[\ \ F!- INV-LENGTH #DECL ("VALUE" FIX INV)] 0>><SETG INV-TEST %<RSUBR-ENTRY '[\ \ F!- INV-TEST #DECL ("VALUE" <OR FIX FALSE> INV FIX)] 0>><SETG INV-DELETE %<RSUBR-ENTRY '[\ \ F!- INV-DELETE #DECL ("VALUE" <OR INV FALSE> INV FIX)] 0>><SETG INV-INSERT %<RSUBR-ENTRY '[\ \ F!- INV-INSERT #DECL ("VALUE" <OR INV FALSE> <OR INV FALSE> FIX)] 0>><ENDPACKAGE><PACKAGE "GC"><ENTRY HAIRY-GC BLOAT? DIVERT-INC DIVERT-LMT DIVERT-MAX PREVENT-GC DIVERT><SETG BLOAT? %<RSUBR-ENTRY '[\ \ F!- BLOAT? #DECL ("VALUE" FORM <UVECTOR [27 FIX]> "OPTIONAL" ANY)] 0>><SETG PREVENT-GC %<RSUBR-ENTRY '[\ \ F!- PREVENT-GC #DECL ("VALUE" <OR ATOM FALSE HANDLER IHEADER>)] 0>><SETG DIVERT %<RSUBR-ENTRY '[\ \ F!- DIVERT #DECL ("VALUE" STRING "OPTIONAL" ANY)] 0>><GDECL (DIVERT-MAX) FIX (DIVERT-LMT) FIX (DIVERT-INC) FIX (HAIRY-GC) <OR ATOM FALSE FIX>><ENDPACKAGE>   <PACKAGE "DFL"><ENTRY UN-DFL DFL-RETRY FLO RDFL DFL><USE "UNLINK"><SETG UN-DFL %<RSUBR-ENTRY '[\ \ F!- UN-DFL #DECL ("VALUE" <OR ATOM FALSE <LIST [REST ATOM]>> <OR ATOM <LIST [REST ATOM]>> "OPTIONAL" <OR FALSE STRING <VECTOR [REST STRING]>> <OR ATOM FALSE>)] 0>><SETG RDFL %<RSUBR-ENTRY '[\ \ F!- RDFL #DECL ("VALUE" <OR FALSE <LIST [REST ATOM]>> "OPTIONAL" <OR STRUCTURED ATOM> <OR ATOM STRING> ANY <OR ATOM FALSE>)] 0>><SETG DFL %<RSUBR-ENTRY '[\ \ F!- DFL #DECL ("VALUE" <OR FALSE <LIST [REST ATOM]>> "OPTIONAL" <OR STRUCTURED ATOM> <OR ATOM STRING> ANY)] 0>><ENDPACKAGE> <PACKAGE "PIO"><ENTRY PIO-ERROR-VECTOR PIO-CLEAR-PAGE PIO-HANG-ON-UNMAP? PIO-EXTEND-BY-PAGES? PIO-MIN-EXTRA-ALLOCATION PIO-MAX-EXTRA-ALLOCATION PIO-DEFAULT-IO-MODE PIO-DEFAULT-PAGE-LIMIT PIO-PAGE-COUNT PIO-PAGE-LIMIT PIO-REF-COUNT PIOPAGEVCT PIOCHANVCT PIO-PRINT-ACTION DALLOCP ALLOCP NAMEP LENGTHP PRINTP READP UPDATEP RESETP FLUSHP CLOSEP OPENP CHANP><USE "PIOSUB" "TENXIO"><SETG DALLOCP %<RSUBR-ENTRY '[\ \ F!- DALLOCP #DECL ("VALUE" <OR ATOM FALSE> CHANP FIX)] 0>><SETG ALLOCP %<RSUBR-ENTRY '[\ \ F!- ALLOCP #DECL ("VALUE" <OR FALSE FIX> CHANP FIX "OPTIONAL" FIX ANY)] 0>><SETG NAMEP %<RSUBR-ENTRY '[\ \ F!- NAMEP #DECL ("VALUE" <OR FALSE STRING> CHANP)] 0>><SETG LENGTHP %<RSUBR-ENTRY '[\ \ F!- LENGTHP #DECL ("VALUE" FIX CHANP)] 0>><SETG PRINTP %<RSUBR-ENTRY '[\ \ F!- PRINTP #DECL ("VALUE" <OR FALSE FIX> CHANP FIX <OR UVECTOR <PRIMTYPE WORD>> "OPTIONAL" <OR FIX FALSE> ANY FIX)] 0>><SETG READP %<RSUBR-ENTRY '[\ \ F!- READP #DECL ("VALUE" <OR FALSE UVECTOR WORD> CHANP FIX "OPTIONAL" <OR UVECTOR <PRIMTYPE WORD> FALSE> <OR FIX FALSE> ANY)] 0>><SETG UPDATEP %<RSUBR-ENTRY '[\ \ F!- UPDATEP #DECL ("VALUE" <OR ATOM FALSE> <OR CHANP STRING> "OPTIONAL" STRING)] 0>><SETG RESETP %<RSUBR-ENTRY '[\ \ F!- RESETP #DECL ("VALUE" ANY CHANP)] 0>><SETG FLUSHP %<RSUBR-ENTRY '[\ \ F!- FLUSHP #DECL ("VALUE" <CHANP ANY ANY ANY ANY ANY ANY ANY FIX [4 ANY] FALSE> CHANP)] 0>><SETG CLOSEP %<RSUBR-ENTRY '[\ \ F!- CLOSEP #DECL ("VALUE" ATOM CHANP)] 0>><SETG OPENP %<RSUBR-ENTRY '[\ \ F!- OPENP #DECL ("VALUE" <OR CHANP FALSE JFN> STRING STRING "OPTIONAL" FIX ANY <OR FALSE STRING>)] 0>><NEWTYPE CHANP VECTOR><SETG CHANP %<RSUBR-ENTRY '[\ \ F!- CHANP #DECL ("VALUE" CHANP <OR JFN CHANNEL> STRING FIX FIX ANY <OR JFN CHANNEL FALSE> FIX <OR FIX FALSE>)] 0>><GDECL (PIOCHANVCT) <VECTOR [REST <OR CHANP FALSE>]> (PIOPAGEVCT) <VECTOR [REST <OR UVECTOR FALSE> <OR CHANP FALSE>]> (PIO-REF-COUNT) FIX (PIO-PAGE-LIMIT) FIX (PIO-PAGE-COUNT) FIX (PIO-DEFAULT-PAGE-LIMIT) FIX (PIO-DEFAULT-IO-MODE) ANY (PIO-MAX-EXTRA-ALLOCATION) FIX (PIO-MIN-EXTRA-ALLOCATION) FIX (PIO-EXTEND-BY-PAGES?) ANY (PIO-HANG-ON-UNMAP?) ANY (PIO-ERROR-VECTOR) <VECTOR [REST STRING]>><ENDPACKAGE>   <PACKAGE "CHARAC"><ENTRY ANY-LOWER-CASE? LOWER-CASE UPPER-CASE DIGITP LETTERP><SETG ANY-LOWER-CASE? %<RSUBR-ENTRY '[\ \ F!- ANY-LOWER-CASE? #DECL ("VALUE" <OR FALSE FIX> STRING)] 0>><SETG LOWER-CASE %<RSUBR-ENTRY '[\ \ F!- LOWER-CASE #DECL ("VALUE" <PRIMTYPE STRING> <PRIMTYPE STRING>)] 0>><SETG UPPER-CASE %<RSUBR-ENTRY '[\ \ F!- UPPER-CASE #DECL ("VALUE" <PRIMTYPE STRING> <PRIMTYPE STRING>)] 0>><SETG DIGITP %<RSUBR-ENTRY '[\ \ F!- DIGITP #DECL ("VALUE" <OR FALSE CHARACTER> CHARACTER)] 0>><SETG LETTERP %<RSUBR-ENTRY '[\ \ F!- LETTERP #DECL ("VALUE" <OR FALSE CHARACTER> CHARACTER)] 0>><ENDPACKAGE>   <RPACKAGE "SORTX"><ENTRY SORTX><SETG SORTX %<RSUBR-ENTRY '[\ \ F!- SORTX OUT-OF-BOUNDS!-ERRORS] 0>><ENDPACKAGE>    <PACKAGE "UNDECL"><ENTRY FLUSH-PKG-OBLS GENLST VECTLST STRLST FORMLST DECLST PRINT-DECLS CLEAR-DECL-LISTS UNIQUE-DECLS><SETG FLUSH-PKG-OBLS %<RSUBR-ENTRY '[\ \ F!- FLUSH-PKG-OBLS #DECL ("VALUE" FIX "OPTIONAL" <LIST [REST STRING]>)] 0>><SETG PRINT-DECLS %<RSUBR-ENTRY '[\ \ F!- PRINT-DECLS #DECL ("VALUE" <OR FALSE ATOM> "OPTIONAL" <OR <LIST [REST ATOM]> ATOM FALSE>)] 0>><SETG CLEAR-DECL-LISTS %<RSUBR-ENTRY '[\ \ F!- CLEAR-DECL-LISTS #DECL ("VALUE" LIST)] 0>><SETG UNIQUE-DECLS %<RSUBR-ENTRY '[\ \ F!- UNIQUE-DECLS #DECL ("VALUE" <VECTOR FIX FIX [REST FIX]> "OPTIONAL" ANY ANY ANY)] 0>><ENDPACKAGE> <PACKAGE "TIMFCN"><ENTRY ZONSTR DST? HOLIDAY? DATE-DOW DAYS-BETWEEN INMONTH DTNOW PAST? BEFORE? TIMEZONE TZDIFF SINCE60 DTPRINT DTDIFF DTADD-2NORM DTADD DTNORM GOOD-DTNORM PDATE PTIME SPDATE TIME-DIF TIME-STR REL-TIMEST TIMEST TIME-STRING GOOD-DTSECS DTSECS SECS-DTNORM SECONDS DAYS><USE "DATIME"><SETG DST? %<RSUBR-ENTRY '[\ \ F!- DST? #DECL ("VALUE" <OR ATOM FALSE> "OPTIONAL" LIST)] 0>><SETG HOLIDAY? %<RSUBR-ENTRY '[\ \ F!- HOLIDAY? #DECL ("VALUE" <OR FALSE STRING> "OPTIONAL" <LIST [3 FIX]>)] 0>><SETG DATE-DOW %<RSUBR-ENTRY '[\ \ F!- DATE-DOW #DECL ("VALUE" FIX "OPTIONAL" <LIST [3 FIX]>)] 0>><SETG DAYS-BETWEEN %<RSUBR-ENTRY '[\ \ F!- DAYS-BETWEEN #DECL ("VALUE" FIX <LIST <LIST FIX FIX FIX>> <LIST <LIST FIX FIX FIX>>)] 0>><SETG INMONTH %<RSUBR-ENTRY '[\ \ F!- INMONTH #DECL ("VALUE" FIX FIX FIX)] 0>><SETG DTNOW %<RSUBR-ENTRY '[\ \ F!- DTNOW #DECL ("VALUE" <LIST [2 <LIST FIX FIX FIX>] STRING> "OPTIONAL" <LIST LIST LIST STRING>)] 0>><SETG PAST? %<RSUBR-ENTRY '[\ \ F!- PAST? #DECL ("VALUE" <OR ATOM FALSE> ANY)] 0>><SETG BEFORE? %<RSUBR-ENTRY '[\ \ F!- BEFORE? #DECL ("VALUE" <OR ATOM FALSE> ANY ANY)] 0>><SETG TIMEZONE %<RSUBR-ENTRY '[\ \ F!- TIMEZONE #DECL ("VALUE" STRING)] 0>><SETG TZDIFF %<RSUBR-ENTRY '[\ \ F!- TZDIFF #DECL ("VALUE" <OR FIX FLOAT> ANY "OPTIONAL" ANY)] 0>><SETG SINCE60 %<RSUBR-ENTRY '[\ \ F!- SINCE60 #DECL ("VALUE" FLOAT <LIST <LIST FIX FIX FIX> <LIST FIX FIX FIX> STRING>)] 0>><SETG DTPRINT %<RSUBR-ENTRY '[\ \ F!- DTPRINT #DECL ("VALUE" ATOM LIST "OPTIONAL" CHANNEL)] 0>><SETG DTDIFF %<RSUBR-ENTRY '[\ \ F!- DTDIFF #DECL ("VALUE" FLOAT LIST "OPTIONAL" LIST)] 0>><SETG DTADD-2NORM %<RSUBR-ENTRY '[\ \ F!- DTADD-2NORM #DECL ("VALUE" <LIST [2 <LIST [3 FIX]>]> <LIST [REST LIST]> "OPTIONAL" <LIST [2 <LIST [3 FIX]>]>)] 0>><SETG DTADD %<RSUBR-ENTRY '[\ \ F!- DTADD #DECL ("VALUE" <LIST [2 <LIST FIX FIX FIX>] STRING> LIST LIST "OPTIONAL" <LIST [2 <LIST [3 FIX]>]>)] 0>><SETG DTNORM %<RSUBR-ENTRY '[\ \ F!- DTNORM #DECL ("VALUE" <LIST [2 <LIST FIX FIX FIX>] STRING> <LIST <LIST [REST FIX]> <LIST [REST FIX]>> "OPTIONAL" ANY)] 0>><SETG GOOD-DTNORM %<RSUBR-ENTRY '[\ \ F!- GOOD-DTNORM #DECL ("VALUE" <LIST [2 <LIST FIX FIX FIX>] STRING> ANY "OPTIONAL" ANY)] 0>><SETG PDATE %<RSUBR-ENTRY '[\ \ F!- PDATE #DECL ("VALUE" FIX <LIST FIX FIX FIX> "OPTIONAL" CHANNEL)] 0>><SETG PTIME %<RSUBR-ENTRY '[\ \ F!- PTIME #DECL ("VALUE" ANY <LIST FIX FIX FIX> "OPTIONAL" CHANNEL)] 0>><SETG SPDATE %<RSUBR-ENTRY '[\ \ F!- SPDATE #DECL ("VALUE" FIX <LIST FIX FIX FIX> "OPTIONAL" CHANNEL)] 0>><SETG TIME-DIF %<RSUBR-ENTRY '[\ \ F!- TIME-DIF #DECL ("VALUE" STRING <LIST FIX FIX FIX> <LIST FIX FIX FIX> <LIST FIX FIX FIX> <LIST FIX FIX FIX>)] 0>><SETG TIME-STR %<RSUBR-ENTRY '[\ \ F!- TIME-STR #DECL ("VALUE" STRING <OR FIX FLOAT>)] 0>><SETG REL-TIMEST %<RSUBR-ENTRY '[\ \ F!- REL-TIMEST #DECL ("VALUE" STRING <LIST LIST LIST>)] 0>><SETG TIMEST %<RSUBR-ENTRY '[\ \ F!- TIMEST #DECL ("VALUE" STRING FIX FIX ANY)] 0>><SETG TIME-STRING %<RSUBR-ENTRY '[\ \ F!- TIME-STRING #DECL ("VALUE" STRING ANY)] 0>><SETG GOOD-DTSECS %<RSUBR-ENTRY '[\ \ F!- GOOD-DTSECS #DECL ("VALUE" FIX <LIST [2 <LIST FIX FIX FIX>] STRING>)] 0>><SETG DTSECS %<RSUBR-ENTRY '[\ \ F!- DTSECS #DECL ("VALUE" FIX <LIST LIST LIST>)] 0>><SETG SECS-DTNORM %<RSUBR-ENTRY '[\ \ F!- SECS-DTNORM #DECL ("VALUE" <LIST [2 <LIST FIX FIX FIX>] STRING> FIX "OPTIONAL" <LIST [2 <LIST FIX FIX FIX>] STRING>)] 0>><SETG SECONDS %<RSUBR-ENTRY '[\ \ F!- SECONDS #DECL ("VALUE" FIX FIX FIX FIX "OPTIONAL" FIX FIX FIX)] 0>><SETG DAYS %<RSUBR-ENTRY '[\ \ F!- DAYS #DECL ("VALUE" FIX FIX FIX FIX "OPTIONAL" FIX ANY)] 0>><GDECL (ZONSTR) <OR STRING FALSE>><ENDPACKAGE>   <RPACKAGE "TEMHLP"><ENTRY TEMPLATE-PUT TEMPLATE-GET TEMPLATE-LENGTH TEMPLATE? PUTTER-DATA GETTER-DATA TEMPLATE-DATA DUMP-TEMPLATE PRIMTYPE-C BUILD-TEMPLATE DUMP-RSUBRS DUMP-TEMPLATES><SETG TEMPLATE-PUT %<RSUBR-ENTRY '[\ \ F!- TEMPLATE-PUT #DECL ("VALUE" UVECTOR FIX)] 0>><SETG TEMPLATE-GET %<RSUBR-ENTRY '[\ \ F!- TEMPLATE-GET #DECL ("VALUE" UVECTOR FIX)] 0>><SETG TEMPLATE-LENGTH %<RSUBR-ENTRY '[\ \ F!- TEMPLATE-LENGTH #DECL ("VALUE" WORD FIX)] 0>><SETG TEMPLATE? %<RSUBR-ENTRY '[\ \ F!- TEMPLATE? #DECL ("VALUE" <OR FALSE FIX> VECTOR)] 0>><NEWTYPE PRIMTYPE-C WORD><SETG BUILD-TEMPLATE %<RSUBR-ENTRY '[\ \ F!- BUILD-TEMPLATE #DECL ("VALUE" ATOM ATOM ANY FIX UVECTOR UVECTOR LIST LIST VECTOR ANY)] 0>><SETG DUMP-RSUBRS %<RSUBR-ENTRY '[\ \ F!- DUMP-RSUBRS #DECL ("VALUE" <OR FALSE STRING> ANY "TUPLE" ANY)] 0>><SETG DUMP-TEMPLATES %<RSUBR-ENTRY '[\ \ F!- DUMP-TEMPLATES #DECL ("VALUE" <OR FALSE STRING> ANY)] 0>><ENDPACKAGE> <PACKAGE "OPEN-APPEND"><ENTRY OPEN-APPEND><SETG OPEN-APPEND %<RSUBR-ENTRY '[\ \ F!- OPEN-APPEND #DECL ("VALUE" <OR CHANNEL FALSE> STRING)] 0>><ENDPACKAGE> 