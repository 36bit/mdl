
<PACKAGE "ASYLUM">

<ENTRY SFIND FINDIT LISTF LISTM LISTB LISTA>

<SETG UVEC <IUVECTOR 5 #WORD *000000000000*>>

<SETG AUV2 <IUVECTOR 2 #WORD *000000000000*>>

<DEFINE SFIND (GZORK D) 
	#DECL ((GZORK) FIX (D) ASYLUM)
	<PRINC "
Id     Address	   Length    Data">
	<REPEAT ((CT 0)
		 (UV1 ,DUV1)
		 (FROB <+ <* <MFDPAGE .D> 1024> ,DIRPTRS>))
		#DECL ((CT FROB) FIX (UV1) <UVECTOR <PRIMTYPE WORD>>)
		<COND (<NOT <DIR-FIND .D <* ,DIRSIZE .CT>>> <RETURN>)
		      (T
		       <FINDIT .CT .D .GZORK>
		       <SET CT <+ .CT 1>>
		       <SET FROB <+ .FROB 1>>)>>>

<DEFINE FINDIT (DIRNUM D
		"OPTIONAL" (TARGET 0)
		"AUX" LOC HI (DUV ,DATUV) (UV1 ,DUV1) DPAGE TEMP)
   #DECL ((DIRNUM TARGET TEMP) FIX (D) ASYLUM (LOC HI) FIX
	  (DPAGE) <OR FALSE FIX> (UV1) <UVECTOR [1 WORD]>
	  (DUV) <UVECTOR [4 WORD]>)
   <COND
    (<SET DPAGE <DIR-FIND .D <* .DIRNUM ,DIRSIZE>>>
     <SET HI
	  <CHTYPE <1 <GET-LOC <+ ,HIGHID <* <MFDPAGE .D> 1024>> .UV1>>
		  FIX>>
     <SET LOC <+ <* .DPAGE 1024> ,OBJSTART>>
     <REPEAT ((NAME <* .DIRNUM ,DIRSIZE>) (FOO ,DIRSIZE) BAR)
       #DECL ((NAME FOO BAR) FIX)
       <COND
	(<OR <0? .FOO> <G? .NAME .HI>> <PRINC .DIRNUM> <RETURN>)
	(T
	 <SET BAR
	      <CHTYPE <NTH <GET-LOC .LOC ,NAMUV> <+ ,NAMDATA 1>> FIX>>
	 <COND
	  (<==? .TARGET <CHTYPE <NTH ,NAMUV <+ ,NAMMISC 1>> FIX>>
	   <CRLF>
	   <PRIN1 .NAME>
	   <INDENT-TO 7>
	   <AND <==? <NTH ,NAMUV 1> #WORD *000000000000*> <PRINC "*">>
	   <PRIN1 .BAR>
	   <INDENT-TO 19>
	   <PRIN1 <CHTYPE <NTH ,NAMUV <+ ,NAMCHNCDR 1>> FIX>>
	   <INDENT-TO 29>
	   <PRIN1 <COND (<OR <0? .TARGET>
			     <N==? <SET TEMP
					<CHTYPE <NTH ,NAMUV <+ ,NAMMISC 1>>
						FIX>>
				   .TARGET>>
			 .TEMP)
			("**WINNER**")>>)>
	 <SET NAME <+ .NAME 1>>
	 <SET FOO <- .FOO 1>>
	 <SET LOC <+ .LOC ,NAMBLKLEN>>)>>)>>

<DEFINE LISTF (DIRNUM D "AUX" LOC HI (DUV ,DATUV) (UV1 ,DUV1) DPAGE) 
   #DECL ((DIRNUM) FIX (D) ASYLUM (LOC HI) FIX (DPAGE) <OR FALSE FIX>
	  (UV1) <UVECTOR [1 WORD]> (DUV) <UVECTOR [4 WORD]>)
   <COND
    (<SET DPAGE <DIR-FIND .D <* .DIRNUM ,DIRSIZE>>>
     <SET HI
	  <CHTYPE <1 <GET-LOC <+ ,HIGHID <* <MFDPAGE .D> 1024>> .UV1>>
		  FIX>>
     <SET LOC <+ <* .DPAGE 1024> ,OBJSTART>>
     <PRINC "
Id     Address     Length    Data">
     <REPEAT ((NAME <* .DIRNUM ,DIRSIZE>) (FOO ,DIRSIZE) BAR)
       #DECL ((NAME FOO BAR) FIX)
       <COND
	(<OR <0? .FOO> <G? .NAME .HI>> <RETURN <CRLF>>)
	(T
	 <COND (<AND <0? <SET BAR
			      <CHTYPE <NTH <GET-LOC .LOC ,NAMUV> <+ ,NAMDATA 1>>
				      FIX>>>
		     <==? <NTH ,NAMUV <+ ,NAMMISC 1>> #WORD *000000000000*>>
		<COND (<0? <SET BAR
				<CHTYPE <NTH ,NAMUV <+ ,NAMCHNCDR 1>> FIX>>>)
		      (<CRLF> <PRINC !"[> <PRIN1 .NAME> <PRINC !"]>)>)
	       (<CRLF>
		<PRIN1 .NAME>
		<INDENT-TO 7>
		<AND <==? <NTH ,NAMUV 1> #WORD *000000000000*> <PRINC "*">>
		<PRIN1 .BAR>
		<INDENT-TO 19>
		<PRIN1 <CHTYPE <NTH ,NAMUV <+ ,NAMCHNCDR 1>> FIX>>
		<INDENT-TO 29>
		<PRIN1 <CHTYPE <NTH ,NAMUV <+ ,NAMMISC 1>> FIX>>)>
	 <SET NAME <+ .NAME 1>>
	 <SET FOO <- .FOO 1>>
	 <SET LOC <+ .LOC ,NAMBLKLEN>>)>>)>>

<DEFINE LISTA (D
	       "AUX" (MFD <* <MFDPAGE .D> 1024>) (ALLOC <* <ALLOCPAGE .D> 1024>)
		     HIGH LO CNT ALOC)
	#DECL ((D) ASYLUM (MFD ALLOC CNT ALOC) FIX)
	<ALLOC-MAP .D>
	<PRINC "
Database Allocator Statistics">
	<SET ALPTR <1 <GET-LOC .ALLOC ,DUV1>>>
	<SET CNT
	     <CHTYPE <ORB <GETBITS .ALPTR <BITS 18 18>> #WORD *777777000000*>
		     FIX>>
	<CRLF>
	<SET ALOC
	     <+ <CHTYPE <ANDB <GETBITS .ALPTR <BITS 18 0>> #WORD *000000001777*>
			FIX>
		.ALLOC>>
	<CRLF>
	<PRINC "From     To     Length">
	<REPEAT ((UV ,AUV2))
		<GET-LOC .ALOC .UV>
		<CRLF>
		<PRIN1 <SET LO <CHTYPE <2 .UV> FIX>>>
		<PRINC "	 ">
		<PRIN1 <SET HIGH <+ .LO <CHTYPE <1 .UV> FIX>>>>
		<PRINC "	">
		<PRIN1 <- .HIGH .LO>>
		<SET ALOC <+ .ALOC 2>>
		<SET CNT <+ .CNT 2>>
		<AND <0? .CNT> <RETURN <CRLF>>>>>

<DEFINE LISTM (D
	       "AUX" (MFD <* <MFDPAGE .D> 1024>) (ALLOC <* <ALLOCPAGE .D> 1024>)
		     HIGH LO CNT ALOC (DUV ,DUV1) A DATE)
	#DECL ((D) ASYLUM (MFD ALLOC CNT ALOC) FIX (DUV) <UVECTOR [1 WORD]>
	       (DATE A) <PRIMTYPE WORD>)
	<ALLOC-MAP .D>
	<PRINC "
INIT Time -- ">
	<COND (<0? <SET DATE <CHTYPE <1 <GET-LOC <+ .MFD ,DINITRQ> .DUV>> FIX>>>
	       <PRINC "Not available">)
	      (<PDSKDATE .DATE>)>
	<PRINC "
ALLOCATOR Lock -- ">
	<COND (<==? <1 <GET-LOC <+ .MFD ,ALLOCLOCK> .DUV>>
		    #WORD *000000000000*>
	       <PRINC "**  LOCKED **">)
	      (<PRINC "Unlocked">)>
	<SET CNT
	     <CHTYPE <ORB <GETBITS <1 <GET-LOC .ALLOC .DUV>> <BITS 18 18>>
			  #WORD *777777000000*>
		     FIX>>
	<PRINC "
ALLOCATOR Use -- ">
	<PRIN1 <SET ALOC </ <- .CNT> 2>>>
	<PRINC <COND (<1? .ALOC> " entry [") (" entries [")>>
	<PRIN1 </ <* .ALOC 100> 511>>
	<PRINC "% Full]">
	<PRINC "
End of Data Area -- ">
	<PRIN1 <SET A <CHTYPE <1 <GET-LOC <+ .MFD ,MAXADR> .DUV>> FIX>>>
	<PRINC " [Page ">
	<PRIN1 </ .A 1024>>
	<PRINC "]">
	<PRINC "
Highest Data Address -- ">
	<PRIN1 <SET ALOC <CHTYPE <1 <GET-LOC <+ .ALLOC 1022> .DUV>> FIX>>>
	<PRINC " [">
	<PRIN1 </ <* .ALOC 100> .A>>
	<PRINC "% Full]">
	<PRINC "
High ID -- ">
	<PRIN1 <CHTYPE <1 <GET-LOC <+ .ALLOC ,HIGHID> .DUV>> FIX>>
	<REPEAT ((N ,DIRPTRS) (DIR 0) (MFDLOC 0))
		#DECL ((N DIR MFDLOC) FIX)
		<COND (<G=? .MFDLOC <- ,PGLOCKS ,DIRPTRS>> <RETURN>)
		      (<0? <SET A <CHTYPE <1 <GET-LOC <+ .MFD .N> .DUV>> FIX>>>)
		      (<CRLF>
		       <PRINC "MFD ">
		       <PRIN1 .MFDLOC>
		       <PRINC " at ">
		       <PRIN1 .A>
		       <PRINC " [Page ">
		       <PRIN1 </ .A 1024>>
		       <PRINC "]">
		       <COND (<==? .MFDLOC <2 <DIRPAGE .D>>>)
			     (<MAP-PAGE <1 .D> </ .A 1024> <1 <DIRPAGE .D>>>
			      <PUT <DIRPAGE .D> 2 .MFDLOC>)>
		       <MFD-SCAN <1 <DIRPAGE .D>> .DIR>)>
		<SET N <+ .N 1>>
		<SET DIR <+ .DIR 1024>>
		<SET MFDLOC <+ .MFDLOC 1>>>
	<LOCKED-PAGES <+ ,PGLOCKS .MFD>>
	,NULL>

<SETG MINSALV 75>

<DEFINE LISTB (DC
	       "OPTIONAL" (VERB <>) (SALV <>) (SALVERB <>)
	       "AUX" (MFD <* <MFDPAGE .DC> 1024>) (UV1 ,DUV1) (DUV ,NAMUV)
		     (ALLOCK <+ .MFD ,ALLOCLOCK>) DF HI FROB (TOTFREE 0)
		     (LOST 0) MOBY)
   #DECL ((DC) ASYLUM (TOTFREE) <SPECIAL FIX> (MFD ALLOCK) FIX
	  (UV1) <UVECTOR [1 WORD]> (LOST) FIX (DUV) <UVECTOR [4 WORD]>
	  (DF) <OR FALSE FIX> (MOBY) <UVECTOR [REST WORD]>
	  (VERB SALV SALVERB) <OR 'T FALSE>)
   <ALLOC-MAP .DC>
   <SET HI
	<1 <GET-LOC <+ ,HIGHID <* <ALLOCPAGE .DC> 1024>> .UV1>>>
   <SET ALPTR
	<+ <* 1024 <ALLOCPAGE .DC>>
	   <CHTYPE <ANDB <1 <GET-LOC <* <ALLOCPAGE .DC> 1024> .UV1>>
			 #WORD *000000001777*>
		   FIX>>>
   <SET MOBY
	<IUVECTOR <+ 4
		     <* <CHTYPE .HI FIX> 2>
		     <SET ALLEN <- <+ 1023 <* <ALLOCPAGE .DC> 1024>> .ALPTR>>>
		  #WORD *000000000000*>>
   <GET-LOC-X .ALPTR <REST .MOBY 2> .ALLEN>
   <PUT .MOBY 1 #WORD *777777003777*>
   <PUT .MOBY 2 #WORD *000000000001*>
   <SET MOBY <REST .MOBY <+ 2 .ALLEN>>>
   <REPEAT ((DIR <+ .MFD ,DIRPTRS>) (DIRNUM 0) (ID 0))
     #DECL ((DIR DIRNUM ID) FIX)
     <COND
      (<OR <0? <CHTYPE .DIR FIX>>
	   <NOT <SET DF <DIR-FIND .DC <* .DIRNUM ,DIRSIZE>>>>>
       <RETURN>)
      (<SET DPG <+ ,OBJSTART <* 1024 .DF>>>
       <REPEAT ((NUM ,DIRSIZE) (WHR 0) WD)
	       <COND (<OR <EMPTY? .MOBY> <0? .NUM>> <RETURN>)
		     (<GET-LOC .DPG .DUV>
		      <AND <==? <NTH .DUV <+ ,NAMDATA 1>> #WORD *000000000000*>
			   <SET DPG <+ .DPG ,NAMBLKLEN>>
			   <SET LOST <+ .LOST 2>>
			   <SET NUM <- .NUM 1>>
			   <SET WHR <+ .WHR 1>>
			   <AGAIN>>
		      <PUT .MOBY 2 <NTH .DUV <+ ,NAMDATA 1>>>
		      <SET WD <5 <DATREAD .DC 5 <2 .MOBY> ,UVEC>>>
		      <PUT .MOBY
			   1
			   <PUTBITS .WD
				    <BITS 18 18>
				    <CHTYPE <+ <* .DIRNUM ,DIRSIZE> .WHR>
					    WORD>>>
		      <SET MOBY <REST .MOBY 2>>
		      <SET DPG <+ .DPG ,NAMBLKLEN>>
		      <SET NUM <- .NUM 1>>
		      <SET WHR <+ .WHR 1>>)>>
       <SET DIRNUM <+ .DIRNUM 1>>)>>
   <SET MOBY <SORT <> <TOP .MOBY> 2 1>>
   <PRINT-LISTB .DC .MOBY .VERB .SALV .SALVERB>
   T>

<DEFINE PRINT-LISTB (DC MOBY "OPTIONAL" (VERB <>) (SALV <>) (SALVERB <>)) 
	#DECL ((MOBY) UVECTOR (VERB SALV SALVERB) <OR ATOM FALSE>)
	<AND .VERB <PRINC "
From     To     Length    Use">>
	<REPEAT ((M .MOBY) LO HI (LSTLO -1) (LSTHI -1) (LSTM -1) (WHR -1))
		#DECL ((WHR LO HI LSTLO LSTHI) FIX (M) UVECTOR)
		<AND <EMPTY? .M> <RETURN>>
		<AND <==? <1 .M> #WORD *000000000000*>
		     <SET M <REST .M 2>>
		     <AGAIN>>
		<SET LO <CHTYPE <2 .M> FIX>>
		<SET HI
		     <+ <CHTYPE <2 .M> FIX>
			<CHTYPE <GETBITS <1 .M> <BITS 18>> FIX>>>
		<COND (<==? .LO .LSTLO>
		       <SALVERR .DC
				"**SHARED BLOCK**"
				.LSTLO
				.LSTHI
				.LSTM
				.LO
				.HI
				<1 .M>>)
		      (<L? .LO .LSTHI>
		       <SALVERR .DC
				"**BLOCKS OVERLAP**"
				.LSTLO
				.LSTHI
				.LSTM
				.LO
				.HI
				<1 .M>>)
		      (<AND <G? .WHR 0> <L? .LO .WHR>>
		       <SALVERR .DC
				"**MUNGED LOSSAGE**"
				.LSTLO
				.LSTHI
				.LSTM
				.LO
				.HI
				<1 .M>>)
		      (<AND .SALV
			    <G? .LO .LSTHI>
			    <0? <CHTYPE <GETBITS <1 .M> <BITS 18 18>> FIX>>
			    <0? <CHTYPE <GETBITS .LSTM <BITS 18 18>> FIX>>>
		       <CRLF>
		       <PRINC "ADJACENT FREE BLOCK - Length = ">
		       <PRIN1 <- .LO .LSTHI>>
		       <PRINC "  Location = ">
		       <PRIN1 .LSTHI>
		       <SALVDEALLOC .DC <- .LO .LSTHI> .LSTHI>)
		      (<AND .SALVERB <G? .WHR 0> <G? .LO .WHR>>
		       <COND (<AND <G? <- .LO .LSTHI> ,MINSALV> .SALV>
			      <CRLF>
			      <PRINC "LARGE FREE BLOCK - Length = ">
			      <PRIN1 <- .LO .LSTHI>>
			      <PRINC "  Location = ">
			      <PRIN1 .LSTHI>
			      <SALVDEALLOC .DC <- .LO .LSTHI> .LSTHI>)
			     (<SET TOTFREE <+ .TOTFREE <- .LO .LSTHI>>>)>)>
		<SET WHR
		     <COND (.VERB <PBLOCK .DC .LO .HI <1 .M>>)
			   (<PMUNG? .DC .LO <1 .M>>)>>
		<SET LSTLO .LO>
		<SET LSTHI .HI>
		<SET LSTM <1 .M>>
		<SET M <REST .M 2>>>
	<AND .SALVERB
	     <CRLF>
	     <PRINC "TOTAL LOST WORDS = ">
	     <PRIN1 .TOTFREE>>
	<CRLF>>

<DEFINE PMUNG? (DC LO TYP "AUX" HOW) 
	#DECL ((DC) ASYLUM (LO) FIX (TYP) WORD (HOW) FIX)
	<COND (<OR <0? <SET HOW <CHTYPE <GETBITS .TYP <BITS 18 18>> FIX>>>
		   <==? <CHTYPE .HOW WORD> #WORD *000000777777*>>
	       -1)
	      (<+ .LO <CHTYPE <GETBITS .TYP <BITS 18>> FIX>>)>>

<DEFINE PRTYPE (DC WD LO "AUX" HOW) 
	#DECL ((DC) ASYLUM (WD) WORD (HOW LO) FIX)
	<COND (<0? <SET HOW <CHTYPE <GETBITS .WD <BITS 18 18>> FIX>>>
	       <PRINC "Unallocated">
	       <+ .LO <CHTYPE .WD FIX>>)
	      (<==? <CHTYPE .HOW WORD> #WORD *000000777777*>
	       <PRINC "Reserved">
	       -1)
	      (<PRINC "Object #">
	       <PRIN1 .HOW>
	       <SET LEN <CHTYPE <GETBITS .WD <BITS 18>> FIX>>
	       <INDENT-TO 45>
	       <PRINC "Top = ">
	       <PRIN1 <+ .LO .LEN>>)>>

<DEFINE SALVERR (DC ERR LLO LHI LM LO HI M) 
	#DECL ((DC) ASYLUM (ERR) STRING (LLO LHI LO HI) FIX
	       (LM M) <PRIMTYPE WORD>)
	<PRINC "
ERROR -- ">
	<PRINC .ERR>
	<PBLOCK .DC .LLO .LHI .LM>
	<PBLOCK .DC .LO .HI .M>
	<CRLF>>

<DEFINE PBLOCK (DC LO HI M) 
	#DECL ((DC) ASYLUM (LO HI) FIX (M) WORD)
	<CRLF>
	<PRIN1 .LO>
	<INDENT-TO 9>
	<PRIN1 .HI>
	<INDENT-TO 16>
	<PRIN1 <CHTYPE <GETBITS .M <BITS 18>> FIX>>
	<INDENT-TO 26>
	<PRTYPE .DC .M .LO>>

<DEFINE PDSKDATE (WD
		  "AUX" (TIM <CHTYPE <GETBITS .WD <BITS 18 0>> FIX>)
			(A/P " AM ") HR)
	#DECL ((WD) <PRIMTYPE WORD> (TIM HR) FIX (A/P) STRING)
	<PRINC " ">
	<PRINC <NTH '["January"
		      "February"
		      "March"
		      "April"
		      "May"
		      "June"
		      "July"
		      "August"
		      "September"
		      "October"
		      "November"
		      "December"]
		    <CHTYPE <GETBITS .WD <BITS 4 23>> FIX>>>
	<PRINC " ">
	<PRIN1 <CHTYPE <GETBITS .WD <BITS 5 18>> FIX>>
	<PRINC " at ">
	<SET HR </ .TIM 7200>>
	<COND (<G=? .HR 12> <SET HR <- .HR 12>> <SET A/P " PM ">)>
	<COND (<0? .HR> <SET HR 12>)>
	<PRIN1 .HR>
	<PRINC ":">
	<SET HR </ <MOD .TIM 7200> 120>>
	<COND (<L? .HR 10> <PRINC "0">)>
	<PRIN1 .HR>
	<PRINC .A/P>>

<SETG LOCKED-PAGES
      %<FIXUP!-RSUBRS '[
#CODE ![23851171840 23851171841 23751557124 23085678677 25614352384 17322475584 
-34342961152 17216307200 -25065017280 12524191748 28231073814 24847056902 
12213813252 -16743403520 23088857097 24838668289 26449282048 23088857097 
17188483111 17200316423 25328615469 23085698016 23882366977 23882366978 
23882366980 23882366981 23852482568 23852482569 277070801 23849037825 
23853006846 277070805 23852482570 23852482571 277070801 23849037825 17192452094 
24838668293 23848812545 277070805 24016584709 24016584708 24016584706 
24016584705 23088857099 524290 262148 6612633510 0 262146!]
			LOCKED-PAGES
			#DECL ("VALUE" ANY FIX)
			T
			"
Pages locked from "
			" to "]
		      '(53
			FINIS!-MUDDLE
			229461
			(4)
			$TLOSE!-MUDDLE
			225280
			(36 30 19)
			MPOPJ!-MUDDLE
			248800
			(22)
			PRINC
			246737
			(35 29)
			PRIN1
			246741
			(40 32))>>

<AND <ASSIGNED? GLUE>
     .GLUE
     <PUT ,LOCKED-PAGES
	  GLUE
	  '![1073758273 13959626992 262144 262148!]>>

<SETG MFD-SCAN
      %<FIXUP!-RSUBRS '[
#CODE ![23851171840 23851171841 23851171842 23851171843 23751557126 23085678677 
25614352384 17191141376 17199792126 17339253760 21760049162 29293543424 
23751557138 32509263888 24838668289 30621827083 25328615475 23085698016 
25614352384 23882366977 23882366978 23882366979 23882366980 23852482566 
23852482567 277070801 23849037825 23853006845 277070805 23852482568 23852482569 
277070801 23849037825 23852744704 277070805 23852482570 23852482571 277070801 
17192189952 21751922678 23849037825 23848812545 277070805 23852482572 
23852482573 277070801 24016584708 24016584707 24016584706 24016584705 
23085698016 1048580 524294 6692070227 0 262146!]
			MFD-SCAN
			#DECL ("VALUE" ANY FIX FIX)
			"
 Directory "
			" at "
			" [Page "
			"]"]
		      '(53
			FINIS!-MUDDLE
			229461
			(6)
			MPOPJ!-MUDDLE
			248800
			(51 18)
			PRINC
			246737
			(46 38 32 26)
			$TLOSE!-MUDDLE
			225280
			(41 33 27)
			PRIN1
			246741
			(43 35 29))>>

<AND <ASSIGNED? GLUE>
     .GLUE
     <PUT ,MFD-SCAN
	  GLUE
	  '![67110164 62929923 -17175937024 524294!]>>

<ENDPACKAGE>
