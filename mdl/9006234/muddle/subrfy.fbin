'<PCODE "2SUBRFY">

<PACKAGE "SUBRFY"> 

<ENTRY SUBRIFY KILL-SUBRFY> 

<USE "SORTX"> 

<BLOCK (<ROOT>)> 

<SETG SUBRFY-CURR-ITEM <FREEZE <IVECTOR 64 0>>> 

<SETG SUBRFY-ITEM-LIST (,SUBRFY-CURR-ITEM)> 

<NEWTYPE INTERNAL-RSUBR-TABLE UVECTOR> 

<SET GLUE T> 

<ENDBLOCK> 

<SETG INSTRUCTION-FIELD <BITS 9 27>> 

<SETG AC-FIELD <BITS 4 23>> 

<SETG @-BIT <BITS 1 22>> 

<SETG INDEX-AC-FIELD <BITS 4 18>> 

<SETG RHW <BITS 18>> 

<SETG LHW <BITS 18 18>> 

<SETG R 14> 

<SETG M 13> 

<SETG LOC  %<RSUBR!- '[ %<PCODE!- "2SUBRFY" 0> LOC #DECL ("VALUE" FIX ANY) SMASH
 SET-PUR REPURE WARNING OUT-INFO ERRMSG NOPURE CORBLK-FAILED!-ERRORS WARNINGS (
LIST) BAD-EXIT (ACTIVATION) T "not a group." "PRINT" 
"Beginning SUBRification of" GLUE "lacks glue bits." "is not an NBIN." 
"is RSUBR-ENTRY of RSUBR not in GROUP." "RSUBR-ENTRY named:" FIX 
"SUBRifying RSUBR:" "UNASSIGNED RSUBR or FUNCTION" "Contains impure slot" %<
RGLOC SUBM-M-P T> "RSUBR in bad format" %<RGLOC JRST-MPOPJ T> %<RGLOC POPJ-P T> 
%<RGLOC JFCL T> %<TYPE-W INTERNAL-RSUBR-TABLE UVECTOR> "Beginning PURIFICATION" 
"Beginning Pass-2" %<RGLOC MOVEI T> %<RGLOC JRST-RMCALL T> "DONE" %<RGLOC 
OUTCHAN T> "You really didn't want to do that" SETG "<SETG " " #IRSUBR (" " (" 
"))>" "WARNING: " " " %<RGLOC SUBRFY-CURR-ITEM T> %<RGLOC SUBRFY-ITEM-LIST T> 
ITLOC ISUBRFY SUBRFY!-PACKAGE OP!-PACKAGE KILL-OBLIST OBLIST INCHAN %<RGLOC OPT 
T> %<TYPE-C OPCODE!-OP!-PACKAGE WORD> "OPCODE NON-EXISTANT" %<RGLOC OOPT T> 
OUTCHAN OPCODE!-OP!-PACKAGE SNM (STRING) "READB" "OPS VEC" "OPS OVEC" %<RGLOC 
OPLEN T> %<RGLOC READ-TABLE T> READ-TABLE %<RGLOC OPCS T> %<RGLOC OUTPUT-OPCODE 
T> OPT OOPT %<RGLOC PRINT T> %<TYPE-C MUDREF!-OP WORD>]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,LOC PGLUE ![715849727 -1 -1 -1 -67108864!]>> 

<AND <ASSIGNED? GLUE> .GLUE <PUT ,LOC GLUE ![1074790464 67174416 1090535424 
17179885632 17180918801 4567663936 1048576 17179938820 1140850688 16778496 
17179869185 -17179803312 18325193796 18320736260 18325176775 -16881827324 
4816046080 -4293918464 4035186688 17179873284 4638642672 15991071 1015808 
1090850820 4366602325 17247043648 1073742081 5443960847 134217728 18253611008 
65536 16385 1090519056 1048641 268436418 18593419280 4198673 4581228556 
4035166209 0 16 0 1089 1114112 4210688 17179890688 335609856 17179934720 
17180217348 0 4294968388 4299161936 5243904 268436480 272629760 349504 
1145061460 15728896 17196662785 1091568656 18270716028 8661499988 1078198272 
4362080336 25517129728 1052673 1342242880 1092356092 536870912 268435484 
1996603408 268697600 1074004992 65 4295033856 17196653568 1006633237 269811712 
17448304640 0 1 4096 4538372 18317053952 248 17449354308 65776 1077678096 278528
1077940228 344128 23353884932 3288596481 4194560 17196662788 17180131345 
21613314304 536903682 9523460 1074790400 67174416 -33285925630 -4294700608 
-3489659904 0 262161 1073807360 285216768 286523392 268452112 17448371460 
17448632433 21479112704 21057540 20972805 17179869248 69648 4295230720 4112 
4315955200 4261185 17179869185 17891328 267264 33554513920 268501008 4196177 
17179869248 7667712 67129344 4312006673 4294967572 256 21474836496 272630720 
251658480 0 84869188 4194304 16793617 -3204444143 17825812 1048836 272630788 
335806788 272642048 24711803143 1090520064 4653063 12644625 30064771072 67125328
4379116800 16778524 4294987824 12935300867 3153089 3224436736 17187213328 
1073742096 22566425600 1048640 21474840592 335822865 36865 325599 17431527632 
67371968 1007616004 4295229440 272630016 115728 17413 1141194752 1095500800 
4564455428 17381577664 17826881 274007040 12973179152 4294967556 16797888 
201326608 67343 17113804803 201327360 -17179869183 30065606848 16911433936 
67358524 -3237953520 22281191696 17247244548 17246979904 17381474368 262400 
22548578304 4199428 340001808 67108868 17179964416 16781588 0 1048575 262148 
262160 262173 262184 524344 524369 1048693 786601 264111 264135 264281 1050773 
526590 264487 1050987 526780 264658 264677 526853 -259542 527012 264905 264990 
527195 527217 2971 265156 265362 265280 265449 3408 265638 265581 -258580!]>> 

<SETG SMASH %<RSUBR-ENTRY '[LOC SMASH #DECL ("VALUE" ANY ANY FIX)] 10>> 

<SETG MOVIT %<RSUBR-ENTRY '[LOC MOVIT #DECL ("VALUE" FIX FIX)] 25>> 

<SETG BYTER %<RSUBR-ENTRY '[LOC BYTER #DECL ("VALUE" STRING <UVECTOR [REST <
PRIMTYPE WORD>]>)] 36>> 

<SETG SUBUV %<RSUBR-ENTRY '[LOC SUBUV #DECL ("VALUE" UVECTOR UVECTOR FIX)] 50>> 

<SETG FIXMUNG %<RSUBR-ENTRY '[LOC FIXMUNG #DECL ("VALUE" ANY UVECTOR FIX)] 75>> 

<SETG MAKE-CODE %<RSUBR-ENTRY '[LOC MAKE-CODE #DECL ("VALUE" <UVECTOR [REST FIX]
> FIX <LIST [REST <LIST FIX <UVECTOR [REST FIX]>>]> <LIST [REST <PRIMTYPE WORD>]
> FIX)] 107>> 

<SETG NOPURE %<RSUBR-ENTRY '[LOC NOPURE #DECL ("VALUE" ANY)] 153>> 

<SETG SET-PUR %<RSUBR-ENTRY '[LOC SET-PUR #DECL ("VALUE" ANY)] 157>> 

<SETG R-E-PUT %<RSUBR-ENTRY '[LOC R-E-PUT #DECL ("VALUE" ANY ANY FIX ANY)] 161>> 

<SETG REPURE %<RSUBR-ENTRY '[LOC REPURE #DECL ("VALUE" ANY ANY)] 185>> 

<MANIFEST R M LHW RHW INSTRUCTION-FIELD AC-FIELD @-BIT INDEX-AC-FIELD> 

<GDECL (SUBRFY-CURR-ITEM) VECTOR> 

<GDECL (SUBRFY-ITEM-LIST) <LIST [REST VECTOR]>> 

"" 

<SETG SUBRIFY %<RSUBR-ENTRY '[LOC SUBRIFY #DECL ("VALUE" ANY ATOM STRING 
"OPTIONAL" <OR FALSE CHANNEL>)] 207>> 

"" 

"OUT-INFO IS USED TO SEND OUT INFORMATION TO THE USER." 

<SETG OUT-INFO %<RSUBR-ENTRY '[LOC OUT-INFO #DECL ("VALUE" <OR ATOM FALSE> <OR 
CHANNEL FALSE> "TUPLE" ANY)] 1897>> 

"ROUTINE TO SEE IF WE HAVE A VALID GROUP." 

<SETG GROUP? %<RSUBR-ENTRY '[LOC GROUP? #DECL ("VALUE" ANY ATOM)] 1963>> 

"ROUTINE TO SEE IF WE HAVE A SETG TO A RSUBR OR RSUBR-ENTRY." 

<SETG POSSIBLE-RSUBR? %<RSUBR-ENTRY '[LOC POSSIBLE-RSUBR? #DECL ("VALUE" ANY ANY
)] 1987>> 

"ROUTINE TO RETURN A #FALSE (ERRSTRING)." 

<SETG ERRMSG %<RSUBR-ENTRY '[LOC ERRMSG #DECL ("VALUE" FALSE "TUPLE" ANY)] 2057>
> 

"ROUTINE TO BUILD A WORKABLE INTERNAL ENTRIES LIST FROM THE GLUE-BITS FORMAT
 THE NEW FORMAT IS (# OF ARGS ADDRESS ...)." 

<SETG BUILD-IENTS %<RSUBR-ENTRY '[LOC BUILD-IENTS #DECL ("VALUE" LIST <PRIMTYPE 
UVECTOR>)] 2133>> 

"UNRELEATE UNRELATIVIZES A CODE UVECTOR." 

<SETG UNRELATE %<RSUBR-ENTRY '[LOC UNRELATE #DECL ("VALUE" ATOM <PRIMTYPE 
UVECTOR> FIX STRING <LIST [REST FIX]>)] 2187>> 

<SETG UPINT1 %<RSUBR-ENTRY '[LOC UPINT1 #DECL ("VALUE" ATOM <PRIMTYPE UVECTOR> 
FIX)] 2296>> 

<SETG BUILD-INTERNAL-ENTRY %<RSUBR-ENTRY '[LOC BUILD-INTERNAL-ENTRY #DECL (
"VALUE" <UVECTOR [REST FIX]> LIST)] 2339>> 

<SETG SEND-OUT-INFO %<RSUBR-ENTRY '[LOC SEND-OUT-INFO #DECL ("VALUE" <OR ATOM 
FALSE> CHANNEL ATOM DECL LIST)] 2401>> 

<SETG GET-RITEM %<RSUBR-ENTRY '[LOC GET-RITEM #DECL ("VALUE" ANY FIX <PRIMTYPE 
VECTOR>)] 2486>> 

<SETG R? %<RSUBR-ENTRY '[LOC R? #DECL ("VALUE" <OR ATOM FALSE> ANY)] 2510>> 

<SETG LREVERSE %<RSUBR-ENTRY '[LOC LREVERSE #DECL ("VALUE" LIST LIST)] 2529>> 

<SETG ADDON %<RSUBR-ENTRY '[LOC ADDON #DECL ("VALUE" <PRIMTYPE LIST> <PRIMTYPE 
LIST> <PRIMTYPE LIST>)] 2559>> 

<SETG WARNING %<RSUBR-ENTRY '[LOC WARNING #DECL ("VALUE" ANY "TUPLE" ANY)] 2589>
> 

<SETG UPDATE-M %<RSUBR-ENTRY '[LOC UPDATE-M #DECL ("VALUE" FIX FIX <UVECTOR [
REST FIX]>)] 2718>> 

"" 

<SETG ADD-ITEM %<RSUBR-ENTRY '[LOC ADD-ITEM #DECL ("VALUE" ANY ANY)] 2757>> 

<SETG ITEM-MEMQ %<RSUBR-ENTRY '[LOC ITEM-MEMQ #DECL ("VALUE" <OR FALSE FIX> ANY)
] 2842>> 

<SETG R-TO-ITEM %<RSUBR-ENTRY '[LOC R-TO-ITEM #DECL ("VALUE" FIX FIX FIX)] 2901>
> 

<SETG CHECK-OBJECT %<RSUBR-ENTRY '[LOC CHECK-OBJECT #DECL ("VALUE" ANY ATOM LIST
)] 2923>> 

<SETG KILL-SUBRFY %<RSUBR-ENTRY '[LOC KILL-SUBRFY #DECL ("VALUE" ATOM)] 2969>> 

<SETG KILL-OBLIST %<RSUBR-ENTRY '[LOC KILL-OBLIST #DECL ("VALUE" <OR ATOM FALSE>
ATOM)] 3008>> 

"" 

<NEWTYPE OPCODE!-OP!-PACKAGE WORD> 

<SETG OPCS %<RSUBR-ENTRY '[LOC OPCS #DECL ("VALUE" OPCODE!-OP!-PACKAGE CHARACTER
)] 3132>> 

<SETG OUTPUT-OPCODE %<RSUBR-ENTRY '[LOC OUTPUT-OPCODE #DECL ("VALUE" ANY 
OPCODE!-OP!-PACKAGE)] 3214>> 

<SETG OPLEN 818> 

<SETG BEGIN-HACK %<RSUBR-ENTRY '[LOC BEGIN-HACK #DECL ("VALUE" ATOM STRING)] 
3301>> 

<SETG END-HACK %<RSUBR-ENTRY '[LOC END-HACK #DECL ("VALUE" ATOM)] 3406>> 

<NEWTYPE MUDREF!-OP WORD> 

<SETG MUDREFIN %<RSUBR-ENTRY '[LOC MUDREFIN #DECL ("VALUE" MUDREF!-OP CHARACTER)
] 3433>> 

<SETG OUTPUT-MUDREF %<RSUBR-ENTRY '[LOC OUTPUT-MUDREF #DECL ("VALUE" ANY 
MUDREF!-OP)] 3490>> 

<DEFINE BEGIN-MHACK () <SET READ-TABLE <SETG READ-TABLE <COND (<GASSIGNED? 
READ-TABLE> ,READ-TABLE) (ELSE <IVECTOR 128 0>)>>> <PUT .READ-TABLE <+ <ASCII 
!"|> 1> ,MUDREFIN> <PRINTTYPE MUDREF!-OP ,OUTPUT-MUDREF> T> 

<DEFINE END-MHACK () <PUT ,READ-TABLE <+ <ASCII !"|> 1> 0> <PRINTTYPE MUDREF!-OP
,PRINT> T> 

<BEGIN-HACK "BTB"> 

<BEGIN-MHACK> 

<SETG IEMIT %<RSUBR-ENTRY '[LOC IEMIT #DECL ("VALUE" FIX "TUPLE" ANY)] 3551>> 

<SETG JFCL <IEMIT #OPCODE!-OP!-PACKAGE *255000000000*>> 

<SETG JRST-MPOPJ <IEMIT #OPCODE!-OP!-PACKAGE *254000000000* |MPOPJ >> 

<SETG JRST-RMCALL <IEMIT #OPCODE!-OP!-PACKAGE *254000000000* |RMCALL >> 

<SETG SUBM-M-P <IEMIT #OPCODE!-OP!-PACKAGE *276000000000* #OPCODE!-OP!-PACKAGE 
*000640000000* #OPCODE!-OP!-PACKAGE *000017000000*>> 

<SETG POPJ-P <IEMIT #OPCODE!-OP!-PACKAGE *263000000000* #OPCODE!-OP!-PACKAGE 
*000740000000*>> 

<SETG MOVEI <IEMIT #OPCODE!-OP!-PACKAGE *201000000000*>> 

<GDECL (JFCL JRST-MPOPJ JRST-RMCALL POPJ-P SUBM-M-P) FIX> 

<END-HACK> 

<ENDPACKAGE> 
