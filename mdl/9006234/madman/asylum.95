<AND <OR <G=? ,MUDDLE 100> <LOOKUP "COMPILE" <ROOT>>> <USE "TENXIO">>

<SETG DPGLOCK 0>

<SETG DINITRQ 1>

<SETG DINITDN 2>

<SETG ALLOCPTR 3>

<SETG ALLOCLOCK 4>

<SETG HIGHADR 5>

<SETG MAXADR 6>

<SETG IDCHAIN 2>

<SETG HIGHID 1>

<SETG FREEBLOCKS 9>

<SETG DIRPTRS 10>

<SETG PGLOCKS 64>

<SETG DIRMAX <- ,PGLOCKS ,DIRPTRS>>

<SETG P/L 3>

;"DIRECTORY DEFINITIONS"

<SETG OBJSTART 7>

<SETG OBJLENGTH 4>

<SETG DIRSIZE </ <- 1023 ,OBJSTART> ,OBJLENGTH>>

;"ALLOCATION TABLE DEFINITIONS"

<SETG MAXALLDIF 20>

<SETG FIRSTALLOC 1021>

;"NAME BLOCK DEFINITIONS"

<SETG NAMBLKLEN 4>

<SETG NAMHDR <IUVECTOR ,NAMBLKLEN #WORD *000000000000*>>

<PUT ,NAMHDR 1 #WORD *777777777777*>

<SETG NAMLOCK 0>

<SETG NAMDATA 1>

<SETG NAMCHNCDR 2>

<SETG NAMMISC 3>

;"DATA BLOCK DEFINITIONS"

<SETG DATHDRLEN 5>

<SETG DATHDR <IUVECTOR ,DATHDRLEN #WORD *000000000000*>>

<SETG DATUSE 0>

<SETG DATCHNBACK 1>

<SETG DATCHNCDR 2>

<SETG DATREF 3>

<SETG DATLEN 4>

;"ASYLUM DEFINITIONS"

<SETG DSKCHAN 1>

<SETG MFDPAGE 2>

<SETG ALLOCPAGE 3>

<SETG DIRPAGEMAP 5>

<SETG ALLOCFLG 6>

<SETG PAGEMAP 7>

;"DISK FILE PAGE CONVENTIONS"

<SETG DSKMFDPAGE 0>

<SETG DSKALLOCPAGE 1>

<SETG DATA-PAGE-TABLE <IUVECTOR 8 #WORD *000000000000*>>

<SETG LRUCOUNT 0>

<MANIFEST DATUSE
	  DATCHNBACK
	  DATCHNCDR
	  DATREF
	  DATLEN
	  NAMLOCK
	  NAMDATA
	  NAMCHNCDR
	  NAMUNUSED
	  MAXALLDIF
	  FIRSTALLOC
	  DSKCHAN
	  MFDPAGE
	  ALLOCPAGE
	  DIRPAGEMAP
	  DSKMFDPAGE
	  DSKALLOCPAGE
	  DIRSIZE
	  DIRMAX
	  OBJSTART
	  OBJLENGTH
	  PGLOCKS
	  LASTDIR
	  HIGHADR
	  MAXADR
	  IDCHAIN
	  HIGHID
	  ALLOCFLG
	  DIRPTRS
	  DINITRQ
	  DINITDN
	  DPGLOCK
	  ALLOCLOCK
	  ALLOCPTR>

<NEWTYPE ASYLUM VECTOR>

<NEWTYPE MANIAC UVECTOR '<UVECTOR [6 FIX]>>

<PRINTTYPE MANIAC
	   <FUNCTION (X) <PRINC "#MANIAC "> <PRIN1 <1 .X>> <PRINC " ">>>

<SETG SPARE-IDS ()>

<SETG DUV1 <IUVECTOR 1 #WORD *000000000000*>>

<SETG NAMUV <IUVECTOR ,NAMBLKLEN #WORD *000000000000*>>

<SETG NAMZUV <IUVECTOR ,NAMBLKLEN #WORD *000000000000*>>

<PUT ,NAMZUV 1 #WORD *777777777777*>

<SETG DATUV <IUVECTOR ,DATHDRLEN #WORD *000000000000*>>

<SETG ERRORS
      ("CANT OPEN DATA FILE"
       "ILLEGAL FILE NAME"
       "ILLEGAL ASYLUM"
       "MODE NOT AVAILABLE"
       "FILE LOCKED"
       "ALLOCATOR LOCKED"
       "CANT GET ALLOCATION PAGE"
       "FILE NOT FOUND"
       "DATA AREA FULL OR LOCKED"
       "ATTEMPT TO ACCESS PAST END OF FILE"
       "ATTEMPT TO READ PAST END OF FILE"
       "ATTEMPT TO FLUSH LOCKED DIRECTORY"
       "MEANINGLESS ARGS"
       "ATTEMPT TO ALLOCATE ON READ ONLY MANIAC")>

<DEFINE OPEN-DATA-FILE (FNAME
			"OPTIONAL" (NEW <>) (CACHE 4) (DIRCACHE 2)
			"AUX" (DCHAN <IVECTOR 7 0>) (DPT ,DATA-PAGE-TABLE) CH FJFN)
	#DECL ((FNAME) STRING (NEW) <OR 'T FALSE> (DIRCACHE CACHE) FIX
	       (CH) <OR FALSE CHANNEL> (FJFN) JFN (DCHAN) <VECTOR [7 ANY]>
	       (DPT) <UVECTOR [8 <PRIMTYPE WORD>]>)
	<COND (<COND (<G=? ,MUDDLE 100>
		      <AND <SET FJFN <GET-FILE .FNAME 0>>
			   <OPEN-FILE .FJFN #WORD *440000302000*>
			   <SET CH <CHANNEL "PRINTB" .FNAME>>
			   <PUT .CH 1 <CHTYPE .FJFN FIX>>>)
		     (<SET CH <OPEN "READ" .FNAME>>)>
	       <SET HIPAGE
		    <COND (<OR .NEW <NOT <GASSIGNED? DATASPACE>>>
			   <PUT .DCHAN 7 <PAGE-GRAB .CACHE .DPT>>
			   <PUT .DCHAN 5 <PAGE-GRAB .DIRCACHE .DPT>>
			   <ARESERVE 2 .DPT>)
			  (,DATASPACE)>>
	       <PUT .DCHAN ,MFDPAGE .HIPAGE>
	       <PUT .DCHAN ,ALLOCPAGE <- .HIPAGE 1>>
	       <PUT .DCHAN 1 .CH>
	       <COND (<AND <MAP-PAGE .CH ,DSKMFDPAGE .HIPAGE> <MFD-INIT .DCHAN>>
		      <CHTYPE .DCHAN ASYLUM>)>)
	      (T #FALSE (1))>>

<DEFINE PAGE-GRAB (CACHE DPT)
   #DECL ((CACHE) FIX (DPT) <UVECTOR [REST WORD]>)
   <ARESERVE .CACHE .DPT>
   <REPEAT ((UV <IUVECTOR <* .CACHE 4> 0>)
	    (CPG <APGFIND -1 .CACHE .DPT>))
	   <PUT .UV 2 .CPG>
	   <PUT .UV 1 -1>
	   <SET CPG <+ .CPG 1>>
	   <SET UV <REST .UV 4>>
	   <AND <EMPTY? .UV> <RETURN <TOP .UV>>>>>

<DEFINE CLOSE-DATA-FILE (DC) 
	#DECL ((DC) ASYLUM)
	<OR <G=? ,MUDDLE 100> <CLOSE <1 .DC>>>>

<DEFINE DIR-FIND (DC ID
		  "OPTIONAL" (NEWDIR <>)
		  "AUX" DIRNUM DIRLOC (UV1 ,DUV1) (MFD <MFDPAGE .DC>) M)
	#DECL ((DC) ASYLUM (MFD ID DIRNUM) FIX (NEWDIR) <OR FALSE 'T>
	       (UV1) <UVECTOR [1 WORD]> (M) <OR FALSE UVECTOR> (DIRLOC) <OR FIX FALSE>)
	<COND (<L=? <SET DIRNUM </ .ID ,DIRSIZE>> ,DIRMAX>
	       <SET DIRLOC
		    </ <CHTYPE <1 <GET-LOC <+ <* .MFD 1024> ,DIRPTRS .DIRNUM>
					   .UV1>>
			       FIX>
		       1024>>
	       <COND (<AND <0? .DIRLOC> <NOT .NEWDIR>> <>)
		     (<AND <0? .DIRLOC>
			   <SET DLOC <DATA-ALLOC .DC <- .DIRNUM>>>
			   <SET DIRLOC </ .DLOC 1024>>
			   <>>)
		     (<AND <SET DIRLOC <DIRMAP .DC .DIRLOC>>
			   <DIR-INIT .DIRLOC>
			   <SET M <MEMBER .DIRLOC <DIRPAGEMAP .DC>>>>
		      <AND .NEWDIR <PUT .M 3 <+ <3 .M> 1>>>
		      .DIRLOC)
		     (T #FALSE (12))>)>>

<DEFINE DATA-PUT (DC ID DUV "AUX" DIRLOC MFD) 
	#DECL ((DC) ASYLUM (ID DIRLOC MFD) FIX
	       (DUV) <UVECTOR [4 WORD]>)
	<COND (<NOT <0? <MFDPAGE .DC>>>
	       <COND (<DIR-FIND .DC .ID> <PUT-LOC <DATA-LOC .DC .ID> .DUV>)
		     (T #FALSE (2))>)
	      (T #FALSE (3))>>

<DEFINE DATA-FIND (DC ID "OPTIONAL" (PRT <>) "AUX" DIRLOC MFD (DUV ,NAMUV)) 
	#DECL ((DC) ASYLUM (ID DIRLOC MFD) FIX
	       (DUV) <UVECTOR [4 WORD]>)
	<COND (<NOT <0? <MFDPAGE .DC>>>
	       <COND (<DIR-FIND .DC .ID .PRT> <GET-LOC <DATA-LOC .DC .ID> .DUV>)>)
	      (T #FALSE (3))>>

<DEFMAC DATA-LOC ('DC 'ID) 
	<FORM +
	      ,OBJSTART
	      <FORM * <FORM DIR-FIND .DC .ID> 1024>
	      <FORM * <FORM MOD .ID ,DIRSIZE> ,OBJLENGTH>>>

<DEFINE DATA-OPEN (MODE DC IDX
		   "AUX" ID (NUV ,NAMUV) (DUV ,DATUV) (UV1 ,DUV1) LOC)
   #DECL ((ID) <OR MANIAC FALSE> (MODE) STRING (IDX) FIX (DC) ASYLUM (LOC) WORD
	  (NUV) <OR FALSE <UVECTOR [4 WORD]>> (UV1) <UVECTOR [1 WORD]>
	  (DUV) <UVECTOR [5 WORD]>)
   <COND
    (<AND <L? .IDX 0> <N=? .MODE "PRINT">> #FALSE (4))
    (<NOT <MEMBER .MODE ("PRINT" "READ" "PRINTW")>> #FALSE (4))
    (<SET ID <GEN-ID .DC .IDX>>
     <COND
      (<SET NUV
	    <DATA-FIND .DC
		       <1 .ID>
		       <AND <MEMBER .MODE '("PRINT" "PRINTW")> T>>>
       <COND
	(<AND <MEMBER .MODE ("PRINTW" "PRINT")>
	      <NOT <DHLOCK <DATA-LOC .DC <1 .ID>>>>>
	 #FALSE (5))
	(T
	 <PUT .ID 6 0>
	 <PUT .ID 4 0>
	 <PUT .ID
	      3
	      <COND (<0? <SET IDX <CHTYPE <NTH .NUV <+ 1 ,NAMDATA>> FIX>>> 0)
		    (<+ .IDX ,DATHDRLEN>)>>
	 <PUT .ID 5 <3 .ID>>
	 <PUT .ID
	      2
	      <CHTYPE <NTH <DATREAD .DC ,DATHDRLEN <- <3 .ID> ,DATHDRLEN> .DUV>
			   <+ 1 ,DATLEN>>
		      FIX>>
	 <COND (<=? .MODE "PRINT"> <PUT .ID 6 -1>)
	       (<=? .MODE "PRINTW"> <PUT .ID 4 1>)
	       (<=? .MODE "READ">
		<SET LOC <NTH .NUV <+ ,NAMDATA 1>>>
		<DATWRITE .DC
			  1
			  .LOC
			  <PUT <DATREAD .DC 1 .LOC .UV1>
			       1
			       <CHTYPE <+ 1 <CHTYPE <1 .UV1> FIX>> WORD>>>
		<AND <0? <3 .ID>> <PUT .ID 2 0>>
		.ID)>)>)>)>>

<DEFINE DATA-PRINTW (DC ID WD "AUX" NUV) 
	#DECL ((ID) <OR MANIAC FALSE FIX> (DC) ASYLUM (WD) <PRIMTYPE WORD>
	       (NUV) <UVECTOR [4 WORD]>)
	<COND (<OR <TYPE? .ID MANIAC>
		   <SET ID <DATA-OPEN "PRINTW" .DC .ID>>>
	       <SET NUV <DATA-FIND .DC <1 .ID>>>
	       <DATA-PUT .DC
			 <1 .ID>
			 <PUT .NUV <+ 1 ,NAMMISC> <CHTYPE .WD WORD>>>
	       <DATA-CLOSE .DC .ID>
	       .ID)>>

<DEFINE DATA-READW (DC IDX "AUX" NUV)
    #DECL ((IDX) FIX (DC) ASYLUM (NUV) <UVECTOR [4 WORD]>)
    <COND (<SET NUV <DATA-FIND .DC .IDX>>
	   <NTH .NUV <+ 1 ,NAMMISC>>)>>

<DEFINE DATA-RESERVE (DC NUM "AUX" (MFD <* <MFDPAGE .DC> 1024>) LO
				   (ALLOCK <+ ,ALLOCLOCK .MFD>) (UV1 ,DUV1)
				   (ALL <AND <ALLOC-MAP .DC> <* <ALLOCPAGE .DC> 1024>>)
				   TEMP)
    #DECL ((LO NUM ALLOCK MFD) FIX (DC) ASYLUM (UV1) <UVECTOR [1 WORD]> (ALL) FIX
	   (TEMP) <OR FALSE MANIAC>)
    <COND (<1? .NUM>
	   <AND <SET TEMP <GEN-ID .DC -1>> <1 .TEMP>>)
	  (<UNWIND
	    <COND (<DHLOCK .ALLOCK>
		   <SET LO <CHTYPE <1 <GET-LOC <+ ,HIGHID .ALL> .UV1>> FIX>>
		   <PUT-LOC <+ ,HIGHID .ALL> <PUT .UV1 1 <CHTYPE <+ .LO .NUM> WORD>>>
		   <DUNLOCK .ALLOCK>
		   <+ .LO 1>)>
	    <DUNLOCK .ALLOCK>>)>>

<DEFINE GEN-ID (DC IDX
		"AUX" (ALLOCK <+ <* 1024 <MFDPAGE .DC>> ,ALLOCLOCK>)
		      (ALL <AND <ALLOC-MAP .DC> <* <ALLOCPAGE .DC> 1024>>)
		      (UV1 ,DUV1) DUV ID IDT ID1 FU)
   #DECL ((DC) ASYLUM (ID ALLOCK MFD) FIX (UV1) <UVECTOR [1 WORD]>
	  (IDT) MANIAC (DUV) <UVECTOR [4 WORD]> (ID1) ANY (ALL) FIX
	  (FU) <OR <UVECTOR [4 WORD]> FALSE>)
   <SET IDT
	<COND (<EMPTY? ,SPARE-IDS> <CHTYPE <IUVECTOR 6 0> MANIAC>)
	      (<SET IDT <1 ,SPARE-IDS>>
	       <SETG SPARE-IDS <REST ,SPARE-IDS>>
	       .IDT)>>
   <PUT .IDT 1 .IDX>
   <COND
    (<G? .IDX 0> .IDT)
    (<UNWIND
      <COND (<DHLOCK .ALLOCK>
	     <COND (<G=? <SET ID
			     <CHTYPE <1 <GET-LOC <+ ,IDCHAIN .ALL> .UV1>> FIX>> 0>
		    <SET ID1 <GET-LOC <+ ,HIGHID .ALL> .UV1>>
		    <SET ID <+ <CHTYPE <1 .UV1> FIX> 1>>
		    <PUT-LOC <+ ,HIGHID .ALL> <PUT .UV1 1 <CHTYPE .ID WORD>>>)
		   (T
		    <SET FU 
			<DATA-FIND .DC 
				   <SET ID <CHTYPE <ANDB #WORD *777777* .ID> FIX>>>>
		    <SET ID1 <NTH .FU <+ 1 ,NAMCHNCDR>>>
		    <PUT-LOC <+ ,IDCHAIN .ALL> <PUT .UV1 1 .ID1>>)>
	     <DUNLOCK .ALLOCK>
	     <PUT .IDT 1 .ID>)
	    (T #FALSE (6))>
     <DUNLOCK .ALLOCK>>)>>

<DEFINE DATA-ALLOC (DC AMT) 
	#DECL ((DC) ASYLUM (AMT) FIX)
	<AND <ALLOC-MAP .DC> <DATALLOC .DC .AMT>>>

<DEFINE ALLOC-MAP (DC) 
	#DECL ((DC) ASYLUM)
	<COND (<NOT <0? <ALLOCFLG .DC>>>)
	      (<COND (<MAP-PAGE <DSKCHAN .DC> ,DSKALLOCPAGE <ALLOCPAGE .DC>>
		      <PUT .DC ,ALLOCFLG -1>)
		     (T #FALSE (7))>)>>

<DEFINE DATA-AREAD (DC IDX SPC "OPTIONAL" (SPD 3) (CHN T)) 
	#DECL ((DC) ASYLUM (ID) <OR FALSE MANIAC> (IDX SPD) FIX (SPC) SPACE
	       (CHN) <OR 'T FALSE>)
	<COND (<SET ID <DATA-OPEN "READ" .DC .IDX>>
	       <COND (<SET DAT <DATA-IREAD .DC .ID .SPC .SPD .CHN>>
		      <DATA-CLOSE .DC .ID>
		      .DAT)>)
	      (T #FALSE (8))>>

<DEFINE DATA-IREAD (DC ID SPC "OPTIONAL" (SPD 3) (CHN T)) 
	#DECL ((ID) MANIAC (DC) ASYLUM (SPC) SPACE)
	<COND (<0? <CHTYPE <3 .ID> FIX>> #FALSE (8))
	      (<AREAD .SPC .DC <CHTYPE <3 .ID> FIX> .SPD .CHN>)>>

<DEFINE DATA-APRINT (DC IDX SPC OBJ "OPTIONAL" (FIXUP <>) "AUX" DACC) 
	#DECL ((DC) ASYLUM (IDC) FIX (DACC) <OR FIX FALSE> (SPC) SPACE
	       (FIXUP) <OR 'T FALSE> (OBJ) ANY (ID) <OR FALSE MANIAC>)
	<COND (<SET ID <DATA-OPEN "PRINT" .DC .IDX>>
	       <COND (<DATA-IPRINT .DC .ID .SPC .OBJ .FIXUP>
		      <DATA-CLOSE .DC .ID>
		      .ID)
		     (T #FALSE (9))>)>>

<DEFINE DATA-IPRINT (DC ID SPC OBJ "OPTIONAL" (FIXUP <>) "AUX" SIZE) 
	#DECL ((ID) MANIAC (DC) ASYLUM (SPC) SPACE (OBJ) ANY (SIZE) FIX
	       (FIXUP) <OR FALSE 'T>)
	<SET SIZE
	     <CHTYPE <GETBITS <ALENGTH .SPC> <BITS 18 0>> FIX>>
	<COND (<SET DACC <DATA-BLOCK .DC .ID .SIZE>>
	       <UNWIND <APRINT .SPC .OBJ .DC .DACC .FIXUP>
		       <PUT .ID 4 0>>
	       .ID)>>

<DEFINE DATA-ACCESS (DC ID WHR)
    #DECL ((ID) MANIAC (DC) ASYLUM (WHR) FIX)
    <COND (<G? .WHR <2 .ID>>
	   #FALSE (10))
	  (<PUT .ID 5 <+ <3 .ID> .WHR>>)>>

<DEFINE DATA-RESET (DC ID)
    #DECL ((ID) MANIAC (DC) ASYLUM)
    <DATA-ACCESS .DC .ID 0>>

<DEFINE DATA-READB (DC ID UV "OPTIONAL" (HMNY 0) (PRT <>) (LOSS <>)) 
	#DECL ((UV) <OR UVECTOR <PRIMTYPE WORD>> (ID) MANIAC (DC) ASYLUM
	       (HMNY) FIX (PRT LOSS) <OR 'T FALSE>)
	<COND (<AND <==? <PRIMTYPE .UV> WORD> <0? .HMNY>> #FALSE (4))
	      (T
	       <AND <TYPE? .UV UVECTOR>
		    <0? .HMNY>
		    <SET HMNY <LENGTH .UV>>>
	       <COND (<AND <SET LOSS
				<G? <+ .HMNY <5 .ID>> <+ <3 .ID> <2 .ID>>>>
			   .PRT>
		      #FALSE (11))
		     (.PRT
		      <DATWRITE .DC .HMNY <5 .ID> .UV>
		      <PUT .ID 5 <+ .HMNY <5 .ID>>>
		      .HMNY)
		     (T
		      <AND .LOSS <SET HMNY <- <+ <3 .ID> <2 .ID>> <5 .ID>>>>
		      <DATREAD .DC .HMNY <5 .ID> .UV>
		      <PUT .ID 5 <+ .HMNY <5 .ID>>>
		      .HMNY)>)>>

<DEFINE DATA-PRINTB (DC ID UV "OPTIONAL" (HMNY 0))
    #DECL ((UV) <OR UVECTOR <PRIMTYPE WORD>> (ID) MANIAC (DC) ASYLUM (HMNY) FIX)
    <DATA-READB .DC .ID .UV .HMNY T>>

<DEFINE DATA-BLOCK (DC ID SIZE "AUX" DACC (HDR ,DATHDR)) 
	#DECL ((DC) ASYLUM (SIZE) FIX (HDR) <UVECTOR [5 WORD]>
	       (ID) MANIAC (DACC) <OR FALSE FIX>)
	<COND (<L=? .SIZE 0> #FALSE (13))
	      (<0? <6 .ID>> #FALSE (14))
	      (<SET DACC <DATA-ALLOC .DC .SIZE>>
	       <PUT .ID 2 .SIZE>
	       <PUT .ID 3 <+ .DACC ,DATHDRLEN>>
	       <PUT .ID 4 -1>
	       <PUT .ID 5 <+ .DACC ,DATHDRLEN>>
	       <PUT .HDR <+ ,DATLEN 1> <CHTYPE .SIZE WORD>>
	       <DATWRITE .DC
		         ,DATHDRLEN
		         .DACC
		         .HDR>
	       <+ .DACC ,DATHDRLEN>)>>

<DEFINE DATA-CHAIN-SALVAGE (DC "AUX" (MFD <* <MFDPAGE .DC> 1024>) (UV1 ,DUV1)
				     (DUV ,DATUV) (ALLOCK <+ .MFD ,ALLOCLOCK>))
    #DECL ((DC) ASYLUM (MFD ALLOCK) FIX (UV1) <UVECTOR [1 WORD]>
	   (DUV) <UVECTOR [5 WORD]>)
    T>
;    <SET CHAIN <1 <GET-LOC <+ ,FREEBLOCKS .MFD> .UV1>>>
;    <UNWIND
	<COND (<DHLOCK .ALLOCK>
	       <REPEAT ((CHN .CHAIN) CHN1)
	 	   <COND (<0? <CHTYPE .CHN FIX>> <RETURN>)
			 (<DATREAD .DC ,DATHDRLEN .CHN .DUV>
			  <SET CHN1 <NTH .DUV <+ ,DATCHNCDR 1>>>
			  <DATA-BLOCK-FREE .DC <CHTYPE .CHN FIX> T>
			  <PUT-LOC <+ ,FREEBLOCKS .MFD> <PUT .UV1 1 .CHN>>
			  <SET CHN .CHN1>)>>
	       <PGWRITE <MFDPAGE .DC>>
	       <DUNLOCK .ALLOCK>)>
	<PROG ()
	    <PGWRITE <MFDPAGE .DC>>
	    <DUNLOCK .ALLOCK>>>

<DEFINE DATA-BLOCK-FREE (DC LOC "OPTIONAL" (LOCKED <>)
			 "AUX" (MFD <* <MFDPAGE .DC> 1024>) (DUV ,DATUV) CHAIN
			       (ALLOCK <+ ,ALLOCLOCK .MFD>) (UV1 ,DUV1))
	#DECL ((DC) ASYLUM (LOC MFD ALLOCK) FIX (LOCKED) <OR 'T FALSE>
	       (UV1) <UVECTOR [1 WORD]> (CHAIN) <PRIMTYPE WORD>
	       (DUV) <UVECTOR [5 WORD]>)
	<DATREAD .DC ,DATHDRLEN .LOC .DUV>
	<COND (<AND <0? <CHTYPE <NTH .DUV <+ ,DATUSE 1>> FIX>>
		    <DATA-DEALLOC .DC
				 <+ <CHTYPE <NTH .DUV <+ ,DATLEN 1>> FIX> ,DATHDRLEN>
				 .LOC
				 .LOCKED>>)
	      (<SET CHAIN <1 <GET-LOC <+ ,FREEBLOCKS .MFD> .UV1>>>
	       <PUT .DUV <+ ,DATUSE 1> #WORD *000000000000*>
	       <DATWRITE .DC ,DATHDRLEN .LOC <PUT .DUV <+ ,DATCHNCDR 1> .CHAIN>>
	       <UNWIND <COND (<OR .LOCKED <DHLOCK .ALLOCK>>
			      <PUT-LOC <+ ,FREEBLOCKS .MFD> 
				       <PUT .UV1 1 <CHTYPE .LOC WORD>>>
			      <COND (<NOT .LOCKED>
				     <PGWRITE <MFDPAGE .DC>>
			      	     <DUNLOCK .ALLOCK>)>)>
		       <PROG ()
			     <COND (<NOT .LOCKED>
				    <PGWRITE <MFDPAGE .DC>>
			 	    <DUNLOCK .ALLOCK>)>>>)>>

<DEFINE DATA-DEALLOC (DC AMT LOC "OPTIONAL" (LOCK <>))
	#DECL ((DC) ASYLUM (AMT LOC) FIX (LOCK) <OR 'T FALSE>)
	<AND <ALLOC-MAP .DC>
	     <COND (.LOCK <SALVDEALLOC .DC .AMT .LOC>)
		   (<DATDEALLOC .DC .AMT .LOC>)>>>

<DEFINE DATA-CLOSE (DC ID "AUX" (HDR ,NAMHDR) DAT OLDLOC PG (UV1 ,DUV1) TEMP)
	#DECL ((ID) MANIAC (DC) ASYLUM (HDR) <UVECTOR [4 WORD]> (TEMP) UVECTOR
	       (OLDLOC) <PRIMTYPE WORD> (DAT) <OR FALSE UVECTOR> (PG) FIX
	       (UV1) <UVECTOR [1 WORD]>)
	<COND (<==? <3 .ID> -1> .ID)
	      (<SET DAT <DATA-FIND .DC <1 .ID>>>
	       <SET OLDLOC <NTH .DAT <+ ,NAMDATA 1>>>
	       <COND (<0? <4 .ID>> 
	    	      <DATWRITE .DC 
				1 
				.OLDLOC 
				<PUT <DATREAD .DC 1 .OLDLOC .UV1> 
				     1
				     <CHTYPE <- 1 <CHTYPE <1 .UV1> FIX>> WORD>>>
		      <AND <L? <6 .ID> 0>
			   <DUNLOCK <DATA-LOC .DC <1 .ID>>>>)
		     (<1? <4 .ID>>
		      <PGWRITE <SET PG <DIR-FIND .DC <1 .ID>>>>
		      <PUT <SET TEMP <MEMBER .PG <DIRPAGEMAP .DC>>> 3  <- <3 .TEMP> 1>>
		      <DUNLOCK <DATA-LOC .DC <1 .ID>>>)
		     (T
		      <PGUNLOCK <MFDPAGE .DC> <+ <2 .ID> ,DATHDRLEN> <3 .ID>>
		      <PGFLUSH .DC <+ <2 .ID> ,DATHDRLEN> <3 .ID>>
		      <DUNLOCK <DATA-LOC .DC <1 .ID>>>
		      <PUT .HDR
			   <+ 1 ,NAMDATA>
			   <CHTYPE <- <3 .ID> ,DATHDRLEN> WORD>>
		      <PUT .HDR
			   <+ 1 ,NAMCHNCDR>
			   <CHTYPE <+ <CHTYPE <2 .ID> FIX> ,DATHDRLEN> WORD>>
		      <PUT .HDR 1 <CHTYPE -1 WORD>>
		      <PUT .HDR 4 <4 .DAT>>
		      <DATA-PUT .DC <1 .ID> .HDR>
		      <PGWRITE <ALLOCPAGE .DC>>
		      <PGWRITE <SET PG <DIR-FIND .DC <1 .ID>>>>
		      <PUT <SET TEMP <MEMBER .PG <DIRPAGEMAP .DC>>> 3 <- <3 .TEMP> 1>>
		      <COND (<0? <CHTYPE .OLDLOC FIX>>)
			    (<DATA-BLOCK-FREE .DC <CHTYPE .OLDLOC FIX>>)>)>
	       <PUT .ID 3 -1>
	       <SETG SPARE-IDS (.ID !,SPARE-IDS)>
	       .ID)
	      (T #FALSE (8))>>

<DEFINE PGFLUSH (DC NUM WHR "AUX" LO HI) 
	#DECL ((NUM WHR LO HI) FIX (DC) ASYLUM)
	<SET LO </ .WHR 1024>>
	<SET HI </ <+ .WHR .NUM> 1024>>
	<REPEAT ((TBL <PAGEMAP .DC>))
		<COND (<EMPTY? .TBL> <RETURN>)
		      (T
		       <AND <G=? <1 .TBL> .LO>
			    <L=? <1 .TBL> .HI>
			    <PGWRITE <2 .TBL>>
			    <PUT .TBL 4 0>>
		       <SET TBL <REST .TBL 4>>)>>>

<DEFINE DATA-DELETE (DC IDX "AUX" DUV) 
	#DECL ((DC) ASYLUM (IDX) FIX (DUV) <OR FALSE <UVECTOR [4 WORD]>>)
	<COND (<AND <SET DUV <DATA-FIND .DC .IDX>>
		    <N==? <SET LOC <CHTYPE <NTH .DUV <+ ,NAMDATA 1>> FIX>> 0>>
	       <AND <DATA-BLOCK-FREE .DC .LOC> <NAME-BLOCK-FREE .DC .IDX>>)
	      (T #FALSE (8))>>

<DEFINE NAME-BLOCK-FREE (DC IDX
			 "AUX" (ZERO ,NAMZUV) (MFD <* <MFDPAGE .DC> 1024>)
			       (ALL <AND <ALLOC-MAP .DC> <* <ALLOCPAGE .DC> 1024>>)
			       (ALLOCK <+ .MFD ,ALLOCLOCK>) (UV1 ,DUV1) CHNCAR)
	#DECL ((DC) ASYLUM (IDX) FIX (NAMZUV) <UVECTOR [4 WORD]> (ALL) FIX
	       (ALLOCK MFD) FIX (UV1) <UVECTOR [1 WORD]>
	       (CHNCAR) <PRIMTYPE WORD>)
	<UNWIND <COND (<DHLOCK .ALLOCK>
		       <SET CHNCAR <1 <GET-LOC <+ .ALL ,IDCHAIN> .UV1>>>
		       <DATA-PUT .DC 
				 .IDX
				 <PUT .ZERO 
				      <+ 1 ,NAMCHNCDR>
				      .CHNCAR>>
		       <PUT-LOC <+ .ALL ,IDCHAIN>
				<PUT .UV1 
				     1 
				     <ORB #WORD *400000000000* .IDX>>>
		       <DUNLOCK .ALLOCK>)
		      (T #FALSE (6))>
		<DUNLOCK .ALLOCK>>>

<DEFINE DATA-RENAME (DC IDX1 IDX2 "AUX" ID NUV LEN LOC) 
	#DECL ((IDX1 IDX2 LEN LOC) FIX (DC) ASYLUM (ID) <OR FALSE MANIAC>
	       (NUV) <UVECTOR [4 WORD]>)
	<COND (<AND <SET NUV <DATA-FIND .DC .IDX1>>
		    <SET LEN <CHTYPE <NTH .NUV <+ 1 ,NAMCHNCDR>> FIX>>
		    <SET LOC <CHTYPE <NTH .NUV <+ 1 ,NAMDATA>> FIX>>
		    <SET ID <DATA-OPEN "PRINT" .DC .IDX2>>>
	       <PUT .ID 2 <- .LEN ,DATHDRLEN>>
	       <PUT .ID 3 <+ .LOC ,DATHDRLEN>>
	       <DATA-CLOSE .DC .ID>
	       <NAME-BLOCK-FREE .DC .IDX1>
	       .ID)>>
