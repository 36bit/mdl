'<PCODE "3COMSUB">

"ROUTINE TO ANALYZE SUBSTRUCS" 

<SETG SUBSTRUC-ANA  %<RSUBR!- '[ %<PCODE!- "3COMSUB" 0> SUBSTRUC-ANA #DECL (
"VALUE" ANY NODE ANY) RCHK DELAY-KILL COMMUTE-STRUC MOVE:ARG LABEL:TAG 
RET-TMP-AC TOACV GETREG DATUM REGSTO EMIT ADDR:VALUE SGETREG MUNG-AC GEN 
MAKE:TAG NODEFM ISTYPE? TYPE-OK? SUB-CASE-1 GET-ELE-TYPE STRUCTYP EANA MESSAGE 
SEGFLUSH %<TYPE-W NODE VECTOR> T ERROR "TOO FEW ARGS TO SUBSTRUC" STRUCTURED 
SUBSTRUC FIX VECTOR UVECTOR TUPLE "TOO MANY ARGS TO SUBSTRUC" ANY OR REST %<
RGLOC REST T> INCONSISTENCY "BAD NODE TO SUBSTRUC" %<TYPE-W DATUM LIST> %<TYPE-W
AC VECTOR> "SUB" DONT-CARE %<RGLOC AC-A T> %<TYPE-C AC VECTOR> %<TYPE-W 
OPCODE!-OP WORD> ANY-AC NO-KILL (LIST) "OUT OF BOUNDS SUBSTRUC" 
"BAD SUBSTRUC NODE" CAREFUL %<TYPE-W MUDREF!-OP WORD> "SUBSTR" <`JRST  |CERR2 > 
%<RGLOC AC-B T> %<TYPE-W SYMTAB VECTOR> GETYP!-OP PUTYP!-OP]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,SUBSTRUC-ANA PGLUE ![715827882 -22906470401 -1
-16384 0!]>> 


<PUT ,SUBSTRUC ANALYSIS ,SUBSTRUC-ANA> 

"BUILD A REST NODE" 

<SETG BUILD-REST-NODE %<RSUBR-ENTRY '[SUBSTRUC-ANA BUILD-REST-NODE #DECL (
"VALUE" ANY ANY ANY ANY)] 537>> 

"SPICE IN A REST NODE" 

<SETG SPLICE-IN-SUB %<RSUBR-ENTRY '[SUBSTRUC-ANA SPLICE-IN-SUB #DECL ("VALUE" <
LIST NODE [REST NODE]> <LIST [REST NODE]> NODE)] 575>> 

\ 

"ROUTINES TO GENERATE SUBSTRUCT FOR THE COMPILER. CURRENTLY ONLY
 HACKS UVECTOR AND VECTOR
 CASES 1) COPYING  (ALWAYS HACKED) (I.E 1 ARG)
       2) COPYING PORTIONS (2 OR 3 ARGS) (ALWAYS HACKED)
       3) COPYING INTO STRUCTURES HACKED IN 2 CASES
	  <SUBSTRUC .X .N1 .N2 <REST .X>>
	  <SUBSTRUC <REST .X> .N1 .N2 .X>" 

"NODE STRUCTURE IS FAIRLY MUNGED TO ALLOW FOR REASONABILITY.
 1==> STRUCTURE NODE
      THIS IS ACTUALLY RESTED
 2==> NUMBER NODE (IF IT EXISTS)
 3==> RESTED STRUCTURE NODE (IF IT EXISTS)
 DECISION AS TO FOURTH ARG WILL TRY TO BE MADE DURING PASS1 OR SYMANA" 

<SETG SUBSTRUC-GEN %<RSUBR-ENTRY '[SUBSTRUC-ANA SUBSTRUC-GEN #DECL ("VALUE" ANY 
NODE <OR ATOM DATUM>)] 597>> 

\ 

"ROUTINE TO COPY INTO A NEW STRUCTION (1 OR 2 ARGUMENT SUBSTRUCTS." 

<SETG COPY-SB-GEN %<RSUBR-ENTRY '[SUBSTRUC-ANA COPY-SB-GEN #DECL ("VALUE" ANY 
NODE ATOM <OR ATOM DATUM>)] 682>> 

\ 

"HERE FOR 3 ARGUMENT SUBSTRUCS" 

<SETG COPY-ELE-SB-GEN %<RSUBR-ENTRY '[SUBSTRUC-ANA COPY-ELE-SB-GEN #DECL (
"VALUE" ANY NODE ATOM NODE <OR ATOM DATUM>)] 921>> 

\ 

"ROUTINE TO COPY INTO A UVECTOR OR VECTOR
 <SUBSTRUC .X .N1 .N2 <REST .X>> or
 <SUBSTRUC <REST .X> .N1 .N2 .X>." 

<SETG COPY-INTO-SB-GEN %<RSUBR-ENTRY '[SUBSTRUC-ANA COPY-INTO-SB-GEN #DECL (
"VALUE" ANY NODE ANY NODE NODE <OR ATOM DATUM>)] 1428>> 

\ 

"ROUTINE TO GENERATE A CALL TO IBLOCK AND ALSO GENERATE THE APPROPRIATE DATUM" 

<SETG GEN-COPY %<RSUBR-ENTRY '[SUBSTRUC-ANA GEN-COPY #DECL ("VALUE" DATUM ATOM)]
2363>> 

"ROUTINES TO DETERMINE THE CASE OF THE SUBSTRUC WITH 4 ARGUMENTS" 

"SUB-CASE-1 LOOKS FOR <SUBSTRUC <REST .X> .N1 .N2 .X> AND SIMILAR CASES WHERE
 BLTS ARE ALWAYS POSSIBLE.
 STRNOD== NODE OF STRUCTURE
 CPYNOD== NODE OF STRUCTURE TO COPY INTO" 

<SETG SUB-CASE-1 %<RSUBR-ENTRY '[SUBSTRUC-ANA SUB-CASE-1 #DECL ("VALUE" <OR ATOM
FALSE> NODE NODE NODE)] 2436>> 

<SETG SUB-CASE-2 %<RSUBR-ENTRY '[SUBSTRUC-ANA SUB-CASE-2 #DECL ("VALUE" <OR ATOM
FALSE> NODE NODE NODE)] 2539>> 

<SETG GET-SUB-DATA %<RSUBR-ENTRY '[SUBSTRUC-ANA GET-SUB-DATA #DECL ("VALUE" <OR 
FALSE <LIST [2 ANY]>> NODE)] 2649>> 

"ROUTINE TO DO BLT: AC1==> SOURCE
		    AC2==> START OF DEST
		    AC3==> END OF DEST." 

<SETG BLTAC %<RSUBR-ENTRY '[SUBSTRUC-ANA BLTAC #DECL ("VALUE" ANY AC AC AC <OR 
FALSE ATOM> DATUM)] 2711>> 

"HERE TO BLT WITH SOME KNOWLEDGE
	AC1==> SOURCE
	AC2==> START OF DEST
	AC3==> NUMBER OF WORDS TO TRANSMIT" 

<SETG BLTAC+NUM %<RSUBR-ENTRY '[SUBSTRUC-ANA BLTAC+NUM #DECL ("VALUE" ANY AC AC 
FIX <OR FALSE ATOM> ANY ANY)] 2788>> 

"HERE TO BLT BUT WITH A DATUM AS DEST SLOT" 

<SETG BLTAC+DAT %<RSUBR-ENTRY '[SUBSTRUC-ANA BLTAC+DAT #DECL ("VALUE" ANY AC 
DATUM AC)] 2885>> 

"ROUTINE TO GENERATE CHECKS FOR THE CASE WHERE THE LENGTH IS KNOWN." 

<SETG KNOWN-CAREFUL-CHECK %<RSUBR-ENTRY '[SUBSTRUC-ANA KNOWN-CAREFUL-CHECK #DECL
("VALUE" ANY DATUM ATOM FIX)] 2965>> 

<SETG UNKNOWN-CAREFUL-CHECK %<RSUBR-ENTRY '[SUBSTRUC-ANA UNKNOWN-CAREFUL-CHECK #
DECL ("VALUE" ANY DATUM AC)] 3037>> 

"ROUTINE TO REST A VECTOR/UVECTOR AND CHECK FOR BOUNDS
 AC==> UV/V
 TPS== PRIMTYPE
 NUM== AMOUNT TO REST." 

<SETG REST-IT %<RSUBR-ENTRY '[SUBSTRUC-ANA REST-IT #DECL ("VALUE" ANY AC <OR FIX
AC> ATOM)] 3097>> 

<SETG BBLT %<RSUBR-ENTRY '[SUBSTRUC-ANA BBLT #DECL ("VALUE" ANY ANY ANY <OR FIX 
AC> <OR FALSE FIX> ANY)] 3173>> 

<SETG UVECTOR-MUNG-SB %<RSUBR-ENTRY '[SUBSTRUC-ANA UVECTOR-MUNG-SB #DECL (
"VALUE" AC DATUM AC)] 3377>> 
