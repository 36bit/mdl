<DEFINE COMPILE:BITS (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<LENGTH? .MOBJ 2>
	       <REPORT-ERROR TOO-FEW-ARGS-TO-BITS COMPILE:BITS>)
	      (<G? <LENGTH .MOBJ> 3>
	       <REPORT-ERROR TOO-MANY-ARGS-TO-BITS COMPILE:BITS>)
	      (ELSE
	       <MCODIFY
		<FORM MSET
		      .RETVAR
		      <FORM BITS !<SEQUENTIALIZE <REST .MOBJ>
						 <GENSYM>
						 .REF
						 <SET REF <GENREF>>
						 .ACT-LIST
						 .SYMBOLS>>>
		.REF .NXT>)>>

<DEFINE COMPILE:GETBITS (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<N==? <LENGTH .MOBJ> 3>
	       <REPORT-ERROR WRONG-NUMBER-OF-ARGS-TO-GETBITS COMPILE:GETBITS>)
	      (ELSE
	       <MCODIFY		
		<FORM MSET
		      .RETVAR
		      <FORM GETBITS !<SEQUENTIALIZE <REST .MOBJ>
						    <GENSYM>
						    .REF
						    <SET REF <GENREF>>
						    .ACT-LIST
						    .SYMBOLS>>>
		.REF .NXT>)>>

<DEFINE COMPILE:PUTBITS (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<LENGTH? .MOBJ 2>
	       <REPORT-ERROR TOO-FEW-ARGS-TO-PUTBITS COMPILE:PUTBITS>)
	      (<G? <LENGTH .MOBJ> 3>
	       <REPORT-ERROR TOO-MANY-ARGS-TO-PUTBITS COMPILE:PUTBITS>)
	      (ELSE
	       <MCODIFY
		<FORM MSET
		      .RETVAR
		      <FORM PUTBITS !<SEQUENTIALIZE <REST .MOBJ>
						    <GENSYM>
						    .REF
						    <SET REF <GENREF>>
						    .ACT-LIST
						    .SYMBOLS>>>>)>>

<DEFINE COMPILE:ORB (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<LENGTH? .MOBJ 1>
	       <WARNING ORB-WITH-NO-ARGS COMPILE:ORB>
	       #WORD 0)
	      (ELSE
	       <MCODIFY
		<FORM MSET
		      .RETVAR
		      <FORM ORB !<SEQUENTIALIZE <REST .MOBJ>
						<GENSYM>
						.REF
						<SET REF <GENREF>>
						.ACT-LIST
						.SYMBOLS>
			    .REF .NXT>>>)>>

<DEFINE COMPILE:ANDB (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<LENGTH? .MOBJ 1>
	       <WARNING ANDB-WITH-NO-ARGS COMPILE:ANDB>
	       #WORD 0)
	      (ELSE
	       <MCODIFY
		<FORM MSET
		      .RETVAR
		      <FORM ANDB !<SEQUENTIALIZE <REST .MOBJ>
						<GENSYM>
						.REF
						<SET REF <GENREF>>
						.ACT-LIST
						.SYMBOLS>
			    .REF .NXT>>>)>>

<DEFINE COMPILE:XORB (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<LENGTH? .MOBJ 1>
	       <WARNING XORB-WITH-NO-ARGS COMPILE:XORB>
	       #WORD 0)
	      (ELSE
	       <MCODIFY
		<FORM MSET
		      .RETVAR
		      <FORM XORB !<SEQUENTIALIZE <REST .MOBJ>
						<GENSYM>
						.REF
						<SET REF <GENREF>>
						.ACT-LIST
						.SYMBOLS>
			    .REF .NXT>>>)>>

<DEFINE COMPILE:EQVB (MOBJ RETVAR REF NXT ACT-LIST SYMBOLS)
	#DECL ((MOBJ) FORM (RETVAR) VARIABLE (REF NXT) FORWRD
	       (ACT-LIST) LIST (SYMBOLS) <LIST [REST SYMBOL-TABLE]>)
	<COND (<LENGTH? .MOBJ 1>
	       <WARNING EQVB-WITH-NO-ARGS COMPILE:EQVB>
	       #WORD 0)
	      (ELSE
	       <MCODIFY
		<FORM MSET
		      .RETVAR
		      <FORM EQVB !<SEQUENTIALIZE <REST .MOBJ>
						<GENSYM>
						.REF
						<SET REF <GENREF>>
						.ACT-LIST
						.SYMBOLS>
			    .REF .NXT>>>)>>

