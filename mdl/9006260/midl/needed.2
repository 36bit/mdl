IMPORTANT THINGS THAT WILL HAVE TO BE DONE BEFORE THE COMPILER
WILL BE USEABLE:

FOR SHLOMIT TO DO HER PROGRAMS, THESE WILL HAVE TO HAPPEN:

1. CLEANG MUST BE WRITTEN TO SIMPLIFY ACTIVATIONS.
	RIGHT NOW, THE COMPILER HAS TO ASSUME, WITH NAMED ACTIVATIONS,
THAT <RETURN .FOO> CAN GO TO A NUMBER OF DIFFERENT PLACES.
CASES:	1. ACTIVATION IS SPECIAL
		CLEANG SHOULD LEAVE EVERYTHING MUCH THE SAME, SINCE
		ALMOST ANYTHING CAN HAPPEN.
	2. ACTIVATION IS NOT SPECIAL, BUT IS REFERENCED BY AN OPERATION
	OTHER THAN RETURN, AGAIN OR SOMETHING USING IT AS AN
	ENVIRONMENT. IN THIS CASE, COMPILER MUST ASSUME THAT THE VALUE
	IS BEING SAVED FOR SOMEONE ELSE TO AGAIN OR RETURN TO, SO IT'S JUST LIKE
	SPECIAL.
	3. ACTIVATION IS SET
	SOMEONE SHOULD PROBABLY COMPLAIN TO THE PROGRAMMER, AND DELETE
	HIS OR HER DIRECTORY, UNLESS YOU CAN THINK OF A LEGITIMATE REASON FOR
	THIS.

2. A LIST OF SPECIALS SHOULD BE KEPT IN THE MFUNCTION SOMEWHERE,
CONTAINING THE ATOM, THE MCODE WITH THE BINDING, AND DECL (?).

3. PREDECESSOR LIST SHOULD BE CONSTRUCTED.

LATER:     
 
1. MCODE-DISPATCH HAS TO BE ABLE TO HANDLE MORE CASES:

	A. VARIOUS TYPES OF APPLICABLE TYPES (RIGHT NOW IT CAN'T COMPILE
	A CALL TO A NON-SUBR)
	B. CODE TO EVAL A STRUCTURE (EVAL ELEMENTS).
	C. EVALTYPES AND APPLYTYPES
	D. MACRO CALLS

2. SEGMENTS AREN'T COMPILED NOW.
	THIS IS COMPLICATED SOMEWHAT SINCE
	A. SEGMENTS ARE ONLY VALID IN RESTRICTED CONTEXTS
	B. ESPECIALLY EFFICIENT CODE CAN BE GENERATED FOR OPERATIONS
	   ON SEGMENTS (E.G. <+ !.FOO>), SO YOU DON'T WANT TO JUST
	   PUSH THE ELEMENTS AND MCALL THE SUBR.
	IT SEEMS THAT YOU WANT TO EITHER LEAVE THEM AS SEGMENTS AND
	LET THE CODE-GENERATOR WORRY ABOUT THEM (SOMETIMES), OR DO THEM
	DIFFERENT WAYS IN DIFFERENT CONTEXTS.

3. TUPLE AND ITUPLE AREN'T COMPILED NOW.
	PROBABLY SHOULD CHECK IN ALL "AUX" LISTS (PROG, FUNCTION)
	WHETHER THERE IS A FORM WITH 'TUPLE' OR 'ITUPLE' AS THE FIRST
	ELEMENT, AND DO THE RIGHT THING. COMPLICATIONS: ALL LOCALS (AND
	SPECIALS) WANT TO BE ALLOCATED ON THE STACK BEFORE THE TUPLES,
	TO MAKE IT POSSIBLE TO FIND THEM AGAIN. THIS IS ONLY A PROBLEM
	WITH SPECIALS, SINCE THIS IS WHAT HAPPENS AUTOMATICALLY WITH
	NON-SPECIALS.

4. COMPILING MORE THAN ONE FUNCTION
	THE COMPILER DOESN'T HAVE A VERSION OF 'GET-ORD' OR WHATEVER
	IT'S CALLED. THIS IS CONSISTENT WITH IT'S INABILITY TO COMPILE
	FUNCTION CALLS.

5. I THINK ENVIRONMENTS ARE NICE TO BE ABLE TO USE, BUT THE COMPILER
	CURRENTLY IGNORES THEM.

6. SPECIALS ARE NOT CURRENTLY UNBOUND, ALTHOUGH ALL THE INFORMATION IS
	KEPT AROUND.

7. THE MAPF STUFF IS PROBABLY WRONG IN ALL CASES, AND FAILS TO DO THE
RIGHT THING WITH SPECIALS.

8. UNWINDERS HAVE TO BE COPED WITH.

9. INFINITE NUMBERS OF BUGS HAVE TO BE FIXED.

10. MCODES NEED TO BE INVENTED TO 
	BIND A SPECIAL IN A SPECIFIC, PRE-ALLOCATED, SLOT ON THE
STACK. 	

11. CURRENTLY THE COMPILER DOES NOTHING USEFUL ABOUT LVALS THAT ARE
NOT BOUND. THIS SHOULD BE EASY TO FIX. A FLAG OR SOMETHING SHOULD BE
AROUND FOR CHANGING THE BEHAVIOR WHEN COMPILING ANONYMOUS FUNCTIONS,
WHICH, INCIDENTLY, ARE ALSO NEGLECTED (AND IMPORTANT, SINCE THAT IS
THE BEST WAY TO PUNT).

12. CODE FOR AND, OR NEEDS TO BE WRITTEN (OLD VERSIONS EXIST NOW).

13. COMPILE:PROG NEEDS TO HAVE SOME FLAGS THROWN IN TO MAKE IT WORK
FOR BIND AND REPEAT.

THERE IS LOTS MORE, BUT I CAN'T REMEMBER IT, SO I WILL ADD TO THIS FILE
LATER. 	 

