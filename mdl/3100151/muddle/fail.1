MFUNCTION FAIL,SUBR
	ENTRY
	HLRE	A,AB
	MOVNS	A
	CAILE	A,4		;AT MOST 2 ARGS
	JRST	WNA
	CAIGE	A,2		;IF FIRST ARG NOT GIVEN, 
	JRST	MFALS		;ASSUME <>
	MOVE	B,(AB)		;OTHERWISE, FIRST ARG IS MESSAGE
	MOVEM	B,MESS(PVP)
	MOVE	B,1(AB)
	MOVEM	B,MESS+1(PVP)

	CAIE	A,4		;PLACE TO FAIL TO GIVEN?
	JRST	UNSAVE
	HLRZ	A,2(AB)		;YES--DO AN "AGAIN" AND SYNCHRONIZE PP
	CAIE	A,TACT		;CAN ONLY FAIL TO AN ACTIVATION
	JRST	WTYP
	MOVE	A,3(AB)
	HRR	B,A
	HLL	B,OTBSAV(B)	;WITH CORRECT TIME
	HRRZ	C,A		;AND PLACE
	CAIG	C,1(TP)
	CAME	A,B
	JRST	ILLFRA
	HLRZ	C,FSAV(C)		;AND STRUCTURE
	CAIE	C,TENTRY
	JRST	ILLFRA
	SKIPN	C,OTBSAV(A)
	JRST	BDFAIL
	HRR	TB,OTBSAV(A)
	MOVE	TP,TPSAV(TB)
	MOVE	P,PSAV(TB)
	CAME	SP,SPSAV(TB)
	PUSHJ	P,SPECSTO		;UNDOING BINDINGS IF NECESSARY
	MOVE	AB,ABSAV(TB)
;THROW AWAY ANY PP STUFF THAT IS NOW INAPPROPRIATE
CHNXT:	HRRZ	A,(PP)		;GET FRAME ADDRESS
	CAIG	A,(TB)
	JRST	UNSAV1		;IF NOT TOO BIG, USE IT
	SUB	PP,[2,,2]		;ELSE, THROW AWAY A PP "FRAME"
UNMLP:	GETYP	A,-1(PP)		;FIRST, ALL UNMARKED TEMPS
	CAIE	A,TTP
	JRST	TOSBLK
	SUB	PP,[4,,4]
	JRST	UNMLP
TOSBLK:	CAIE	A,TFIX		;THEN A TP FRAME
	JRST	BADPP
	SUB	PP,(PP)
	SUB	PP,[2,,2]
	GETYP	A,-1(PP)
	CAIE	A,TFIX		;THEN A P "FRAME"
	JRST	CHPC		;IF ANY
	SUB	PP,(PP)
	SUB	PP,[3,,3]
	GETYP	A,-1(PP)
CHPC:	CAIN	A,TPC
	SUB	PP,[2,,2]
	JRST	CHNXT;
;NOW REBUILD TP FROM PP
UNSAVE:	HRRZ	A,(PP)		;GET FRAME TO NESTLE IN
UNSAV1:	JUMPE	A,BDFAIL
	CAIN	A,(TB)
	JRST	START
	HRR	TB,A		;MAY TAKE MORE WORK
	MOVE	TP,TPSAV(TB)
	MOVE	P,PSAV(TB)
	CAME	SP,SPSAV(TB)
	PUSHJ	P,SPECSTO
	MOVE	AB,ABSAV(TB)
START:	SUB	PP,[2,,2]
UNMLP2:	GETYP	A,-1(PP)
	CAIE	A,TTP
	JRST	USTPBK
	HRRZ	A,(PP)		;RESTORE AN UNNAMED TEMPORARY
	MOVE	B,-3(PP)
	MOVEM	B,(A)
	MOVE	B,-2(PP)
	MOVEM	B,1(A)
	SUB	PP,[4,,4]
	JRST	UNMLP2
;MOVE A TP BLOCK FROM PP TO TP
USTPBK:	CAIE	A,TFIX
	JRST	BADPP
	MOVSI	A,TPP
	MOVEM	A,ASTO(PVP)
	MOVE	TP,PP		;RESTORE TP TO WHAT IT WAS ON ENTRY TO THIS FRAME
	SUB	TP,-1(PP)		
	MOVE	TP,-1(TP)	;TP NOW POINTS TO OLD FRAME
	MOVE	A,PP
	SUB	A,(PP)	;A POINTS TO TOP OF BLOCK
	MOVEI	E,		;E IS A KLUDGY KOUNTER FOR HACKING BINDINGS
PSHLP4:	INTGO
	GETYP	B,-1(A)		;ANYTHING SPECIAL?
	CAIN	B,TENTS
	JRST	USVBLK
	CAIN	B,TBVLS
	JRST	USVBVL
	CAIN	B,TBNDS
	JRST	USVBND
	AOJE	E,REBIND		;IF AT END OF BLOCK, BIND THINGS
USV:	CAIN	B,TTBS
	JRST	USVTB
	PUSH	TP,-1(A)		;NO-- JUST MOVE IT
ARND7:	PUSH	TP,(A)
ARND12:	ADD	A,[2,,2]		;BUMP POINTER
ARND6:	CAMGE	A,PP
	JRST	PSHLP4
	AOJN	E,USV2		;IF FRAME ENDS WITH BIND BLOCK, BIND
	PUSHJ	P,SPECBIND
;MOVE A P BLOCK BACK TO P
USV2:	SUB	PP,(PP)
	SUB	PP,[2,,2]		;NOW BACK BEYOND TP BLOCK
	GETYP	A,-1(PP)
	CAIE	A,TFIX		;GET P BLOCK...
	JRST	CHPC2		;...IF ANY
	MOVE	A,PP
	SUB	A,(PP)		;A POINTS TO FIRST
PSHLP5:	INTGO
	PUSH	P,-1(A)		;MOVE BLOCK
	ADD	A,[1,,1]
	CAMGE	A,PP
	JRST	PSHLP5
	SUB	PP,(PP)
	SUB	PP,[3,,3]		;NOW AT NEXT PP "FRAME"
	GETYP	A,-1(PP)
CHPC2:	CAIE	A,TPC
	JRST	UNSAVE
	MOVSI	A,TFIX
	MOVEM	A,ASTO(PVP)
	MOVEM	A,CSTO(PVP)
	SUB	PP,[2,,2]		;PP NOW WHERE IT SHOULD BE
	JRST	@2(PP)		;GO DO WHAT IS NECESSARY
;HERE TO MOVE A SAVE BLOCK
USVBLK:	MOVSI	D,TENTRY
	HRR	D,-1(A)
	PUSH	TP,D
	PUSH	TP,(A)		;OTBSAV,
	PUSH	TP,1(A)		;AND ABSAV TO THIS FRAME
	CAME	SP,2(A)
	JRST	BADPP
	MOVEM	SP,SPSAV(TB)		;SPSAV,
	MOVE	P,3(A)
	MOVEM	P,PSAV(TB)		;AND PSAV,
	MOVE	D,4(A)
	MOVEM	D,TPSAV(TB)		;AND TPSAV,
	MOVE	D,5(A)
	MOVEM	D,PPSAV(TB)		;AND PPSAV,
	MOVE	D,6(A)
	MOVEM	D,PCSAV(TB)		;AND PCSAV TO PREVIOUS FRAME
	ADD	TP,[FRAMLN-3,,FRAMLN-3]
	HRRI	TB,1(TP)		;NOW RESTORE ENVIRONMENT
	MOVE	D,OTBSAV(TB)	;UNRELATIVIZING CERTAIN THINGS
	ADDI	D,(TB)
	MOVEM	D,OTBSAV(TB)
	MOVE	AB,ABSAV(TB)
	ADDI	AB,(TB)
	MOVEM	AB,ABSAV(TB)
	ADD	A,[FRAMLN,,FRAMLN]	;SKIP TO END OF BLOCK
	JRST	ARND6
;HERE TO HACK A BINDING
USVBVL:	MOVNI	E,2
	PUSH	TP,BNDV
	JRST	ARND7
USVBND:	MOVNI	E,3
	PUSH	TP,BNDA
	JRST	ARND7
;HERE TO UNRELATIVIZE A TTB
USVTB:	MOVE	D,-1(A)
	HRLI	D,TTB
	PUSH	TP,D
	MOVE	D,(A)
	ADDI	D,(TB)
	PUSH	TP,D
	JRST	ARND12;
;RESTORE BINDINGS
REBIND:	PUSH	PP,$TPP		;SAVE A ON PP
	PUSH	PP,A
	PUSHJ	P,SPECBIND	;BIND EVERYTHING ACCUMULATED ON TP
	POP	PP,A		;UNSAVE A
	SUB	PP,[1,,1]	;BACK
	GETYP	B,-1(A)		;RESTORE B
	MOVEI	E,		;RESET COUNTER
	JRST	USV
;DEFAULT MESSAGE IS <>
MFALS:	MOVSI	B,TFALSE	;TYPE FALSE
	MOVEM	B,MESS(PVP)
	SETZM	MESS+1(PVP)
	JRST	UNSAVEMFUNCTION FAILCOND,FSUBR,[FAILCOND]
	ENTRY	1
;GROW PP
	PUSH	PP,$TPC
	PUSH	PP,[FC]
MFUNCTION FAILCOND,FSUBR,[FAILCOND]
	ENTRY	1
;GROW PP
	PUSH	PP,$TPC
	PUSH	PP,[FC]
;BIND MESSAGE ATOM
FCSTUP:	HLRZ	A,(AB)		;CHECK ARG FOR LIST
	CAIE	A,TLIST
	JRST	WTYP
	PUSH	TP,$TLIST	;SLOT FOR CLAUSELIST
	PUSH	TP,[0]
	SKIPN	C,1(AB)		;GET CLAUSE BODY
	JRST	NOBODY
	PUSHJ	P,CARATM		;CAR MUST BE ATOM
	JRST	MPD
	HRRZ	D,(C)		;SAVE CDR
	MOVEM	D,1(AB)		;AS NEW BODY
	PUSH	TP,BNDA		;BIND ATOM AS (), INITIALLY
	PUSH	TP,E
	PUSH	TP,$TLIST
	REPEAT	3,PUSH	TP,[0]
	PUSHJ	P,SPECBI		;DO BINDING
;RETURN ;()
	MOVSI	A,TLIST
	MOVEI	B,
FAKOUT:	MOVEM	SP,SPSAV(TB)		;FOOL BCKTRK INTO THINKING
	MOVEM	P,PSAV(TB)		;FAILCOND CALLED SOMETHING
	MOVEM	TP,TPSAV(TB)
	JRST	FINIS
;FAIL TO HERE
FC:	PUSH	P,[ZFAIL]		;WHAT TO DO AT END OF CLAUSE
FC1:	MOVE	A,MESS(PVP)		;SET ATOM TO MESSAGE
	MOVEM	A,4(TB)
	MOVE	A,MESS+1(PVP)
	MOVEM	A,5(TB)
	MOVE	A,1(AB)		;SET CLAUSELIST & GO
	MOVEM	A,1(TB)
CLOOP1:	SKIPN	B,1(TB)		;IF CLAUSELIST NIL,
	JRST	IFAIL		;FAIL
	GETYP	A,(B)		;NO-- GET TYPE OF CAR
	CAIE	A,TLIST		;LIST?
	JRST	BADCLS
	MOVE	A,1(B)		;A IS CLAUSE
	JUMPE	A,BADCLS		;WHICH MUST BE NON-NIL
	PUSH	TP,(A)		;GET PREDICATE
	HLLZS	(TP)
	PUSH	TP,1(A)
	JSP	E,CHKARG
	MCALL	1,EVAL		;EVALUATE IT
	CAMN	A,$TFALSE
	JRST	NXCLS1		;IF FALSE, TRY NEXT
	MOVE	C,1(TB)		;ELSE, EVALUATE REST OF CLAUSE
	MOVE	C,1(C)
	HRRZ	C,(C)
	JUMPE	C,@(P)		;IF NONE, FAIL
DOFC:	HRRZM	C,1(TB)		;ELSE DO LIKE A PROG
	PUSH	TP,(C)		;GET CAR OF CLAUSE
	HLLZS	(TP)
	PUSH	TP,1(C)
	JSP	E,CHKARG
	MCALL	1,EVAL		;EVALUATE IT
	HRRZ	C,@1(TB)
	JUMPN	C,DOFC		;DO AGAIN
	POP	P,C
	JRST	(C)		;ELSE DO WHAT YOU'RE SUPPOSED TO AT END OF CLAUSE
NXCLS1:	HRRZ	A,@1(TB)		;CDR CLAUSELIST
	HRRZM	A,1(TB)
	JRST	CLOOP1î;IF NO MORE CLAUSES, KEEP FAILING
IFAIL:	PUSH	TP,MESS(PVP)		;WITH SAME MESSAGE
	PUSH	TP,MESS+1(PVP)
	MCALL	1,FAIL		;FAIL WILL NOT RETURN, OF COURSE
;IF FAILCOND RUNS OFF CLAUSE, IT KEEPS FAILING
ZFAIL:	MCALL	0,FAIL		;NO RETURN FROM THIS

;GATE IS LIKE FAILCOND, BUT IF IT GOES OFF CLAUSE, IT REESTABLISHES FAILPOINT AND ACTS LIKE COND
MFUNCTION GATE,FSUBR
	ENTRY 1
	PUSH	PP,$TPC
	PUSH	PP,[GT]
	JRST	FCSTUP		;SETUP LIKE FAILCOND
;FAIL TO HERE
GT:	PUSH	P,[RESTFP]	;WHAT TO DO AT END OF A CLAUSE
	JRST	FC1
;RE-ESTABLISH FAIL POINT
RESTFP:	SKIPN	C,OTBSAV(TB)
	JRST	FINIS
	CAME	PP,PPSAV(C)	;UNLESS SOMEONE BEAT US TO IT,
	JRST	FINIS
	PUSH	PP,$TPC
	PUSH	PP,[GT]
	JRST	FAKOUT		;RETURN VALUE GIVEN