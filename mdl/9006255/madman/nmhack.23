<USE "MADMAN">
<SETG HASHPAGE 4>
<SETG HASHLOC 7>		; "LOCATION IN MFD OF HASH PAGE"

; "DEFINITIONS WITHIN HASH PAGE"

<SETG HASHLO 3>			; "LOWEST UNUSED WORD"
<SETG HASHFREE 4>		; "START OF FREE CHAINS OF DELETED ENTRIES"
<SETG LOBUCKET <+ ,HASHFREE 40>>; "BUCKET 0"
<SETG HIBUCKET <+ ,LOBUCKET 256 1>>
<SETG HASHUV <FREEZE <IUVECTOR 40 0>>>

; "MAXIMUM STRING SIZE IS 40*5=200 CHARACTERS"

%%<DEFINE OFFSET (VAR) <- <* <VALUE .VAR> 2> 1>>

<TITLE NAME-FIND-ADD>
	<DECLARE ("VALUE" <OR FIX FALSE> ASYLUM STRING)>
	<DPUSH	TP* (AB)>
	<DPUSH	TP* 2(AB)>
	<PUSHJ	P* INFA>
	<JRST	FINIS>

<INTERNAL-ENTRY INFA 2>
	<SUBM	M* (P)>
	<PUSH	P* [-1]>
	<JRST	INFIN>

<SUB-ENTRY NAME-FIND-GIVEN ("VALUE" FIX FIX ASYLUM STRING)>
	<PUSH	TP* (AB)>
	<AOBJN	AB* HERE -1>
	<PUSHJ	P* INFG>
	<JRST	FINIS>

<INTERNAL-ENTRY INFG 3>
	<SUBM	M* (P)>
	<PUSH	P* [-2]>
	<JRST	INFIN>


<SUB-ENTRY NAME-FIND-DELETE ("VALUE" <OR FALSE FIX> ASYLUM STRING)>
	<DPUSH	TP* (AB)>
	<DPUSH	TP* 2(AB)>
	<PUSHJ	P* INFD>
	<JRST	FINIS>

<INTERNAL-ENTRY INFD 2>
	<SUBM	M* (P)>
	<PUSH	P* [1]>
	<JRST	INFIN>

<SUB-ENTRY NAME-FIND ("VALUE" <OR FALSE FIX> ASYLUM STRING)>
	<DPUSH	TP* (AB)>
	<DPUSH	TP* 2(AB)>
	<PUSHJ	P* INF>
	<JRST	FINIS>

<INTERNAL-ENTRY INF 2>
	<SUBM	M* (P)>
	<PUSH	P* [0]>
INFIN	<HRRZ	O* -1(TP)>
	<IDIVI	O* 5>
	<JUMPE	A* HERE 2>
	<ADDI	O* 1>
	<ADDI	O* 2>
	<PUSH	P* O>
	<MOVE	A* <MQUOTE '%<RGLOC HASHUV T>>>
	<ADD	A* GLOTOP 1>
	<PUSH	P* 1(A)>
	<PUSHJ	P* HASHER>	; "GET CODE IN A"
	<PUSH	P* A>		; "SAVE THE HASH BUCKET"
	<MOVE	D* -2(TP)>	; "THE ASYLUM"
	<SKIPG	B* <OFFSET HASHPAGE> (D)>
	<PUSHJ	P* HASHMP>	; "GET HASH TABLE CORE LOCATION IN B"
	<LSH	B* 10>
	<ADDI	B* LOBUCKET (A)>; "POINT B AT THE BUCKET"
	<SKIPN	C* (B)>		; "GET THE POINTER"
	<JRST	NMELP1>
	<PUSH	P* [0]>
	<PUSH	P* B>		; "SAVE BACK POINTER"
	<PUSH	P* C>		; "SAVE CURRENT POINTER"
NMLOOP	<LDB	A* [<(*340700*) C>]>
	<PUSH	P* A>
	<TLZ	C* *776000*>
	<PUSH	TP* -3(TP)>	; "THE ASYLUM"
	<PUSH	TP* -3(TP)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* A>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* C>
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<PUSH	TP* -5(P)>
	<MCALL	4 DATREAD>
	<POP	P* B>
	<MOVE	A* -4(P)>	; "STRING IN 1(A) AND 2(A)"
	<CAME	B* -5(P)>	; "BETTER BE THE SAME LENGTH"
	<JRST	NMELP>
	<MOVE	O* -5(P)>
	<SUBI	O* 2>
	<MOVE	B* (TP)>	; "BP TO STRING"
	<MOVEI	C* 2(A)>
CKLOOP	<SOJL	O* CKWIN>
	<ADDI	B* 1>
	<MOVE	D* (C)>
	<CAME	D* (B)>
	<JRST	NMELP>
	<AOJA	C* CKLOOP>
CKWIN	<LDB	B* [<(*3000*) 1(A)>]>	; "TASTE AND WINNAGE"
	<SKIPLE	-6(P)>
	<PUSHJ	P* NAMDEL>	; "DELETE THIS ENTRY"
	<MOVE	A* <TYPE-WORD FIX>>
	<SUB	P* [<3 (3)>]>	; "FLUSH SAVED POINTERS"
NMEND	<AOSGE	-3(P)>		; "SKIP IF ORIGINAL ENTRY TOOK TWO ARGS INSTEAD OF THREE"
	 <SUB	TP* [<(2) 2>]>	; "FLUSH THIRD ARG"
	<SUB	P* [<4 (4)>]>
	<SUB	TP* [<4 (4)>]>
	<JRST	MPOPJ>

NMELP	<MOVE	C* (P)>		; "CURRENT POINTER"
	<MOVEM	C* -1(P)>	; "BACK POINTER"
	<MOVE	C* 1(A)>
	<MOVEM	C* -2(P)>	; "ID OF BACK POINTER"	
	<MOVE	C* (A)>
	<MOVEM	C* (P)>		; "SAVE CURRENT POINTER"
	<LDB	D* [<(*3400*) C>]>
	<JUMPN	D* NMLOOP>	; "HAVE CDR POINTER IN C"
	<SUB	P* [<3 (3)>]>	; "FLUSH SAVED POINTERS"
NMELP1	<SKIPL	-3(P)>		; "FLAG FOR PRINT MODE"
	<JRST	NMFLS>

; "HERE TO CREATE A NEW ID AND HASH TABLE ENTRY"

NEWNM	<MOVNI	A* 1>		; "SPECIAL HACK FOR GC'ING"
	<CAME	A* -3(P)>	; "ID PASSED AS ARGUMENT"
	 <JRST	[<MOVE	B* -4(TP)>
		 <JRST	NEWNMX>]>
	<PUSH	TP* -3(TP)>	; "NOW GEN-ID AND CREATE ENTRY"
	<PUSH	TP* -3(TP)>
	<MCALL	1 NEW-ID>	; "CONS UP A FROBNITZ"
	<GETYP	C* A>
	<CAIN	C* <TYPE-CODE FALSE>>
	<JRST	NMEND>		; "RETURN THE FALSE (USED TO GO TO NMENDX)"
NEWNMX	<PUSH	P* B>		; "SAVE THE ID NUMBER"
	<MOVE	D* -2(TP)>
	<MOVE	A* <OFFSET HASHPAGE> (D)>
	<LSH	A* 10>		; "LOCATION OF HASH PAGE"
	<MOVE	C* -3(P)>	; "WORDS NEEDED"
	<PUSH	P* A>
	<ADD	A* C>
	<SKIPE	B* HASHFREE (A)>	
	<JRST	RECYCL>
	<POP	P* A>
	<MOVE	B* HASHLO (A)>	; "LOWEST FREE HASH TABLE ENTRY"
	<MOVE	C* B>		; "GET A COPY"
	<ANDI	C* *1777*>
	<ADD	C* -3(P)>
	<CAILE	C* *1777*>
	<JRST	HASHGR>		
HSHGR1	<MOVE	D* -3(P)>
	<ADDM	D* HASHLO (A)>	; "ADD 3 TO HASHLO"
NEWNM1	<MOVE	C* -2(P)>	; "UVECTOR"
	<MOVE	E* (TP)>	; "STRING"
	<ADDI	E* 1>
	<ADDI	C* 2>
	<HRL	C* E>
	<MOVEI	E* (C)>
	<CAIN	D* 2>
	<JRST	NEWNM2>
	<ADDI	E* -3(D)>
	<BLT	C* (E)>
NEWNM2	<MOVE	E* (P)>		; "ID NUMBER"
	<DPB	E* [<(*3000*) -1(C)>]>
	<MOVE	E* -1(P)>
	<ADD	E* A>
	<MOVE	O* LOBUCKET (E)> 	; "GET THE FORWARD BUCKET POINTER"
	<MOVEM	O* -2(C)>		; "AND SAVE IT"
;	<DPB	D* [<(*340700*) -2(C)>]>; "ALSO THE WORD COUNT"
	<PUSH	P* E>
	<PUSH	P* D>
	<PUSH	P* B>
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* D>
	<PUSH	TP* <TYPE-WORD FIX>>
	<LDB	B* [<(*3400*) B>]>
	<PUSH	TP* B>
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<PUSH	TP* -5(P)>
	<MCALL	4 DATWRITE>	; "WRITE OUT THE ENTRY"
	<POP	P* B>
	<POP	P* D>
	<POP	P* E>
	<DPB	D* [<(*340700*) B>]>
	<MOVEM	B* LOBUCKET (E)>
	<POP	P* B>
	<MOVE	A* <TYPE-WORD FIX>>
	<JRST	NMEND>		; "USED TO SUB 6,,6 FROM TP HERE"

NMFLS	<MOVE	B* <MQUOTE (8)>>
	<MOVE	A* <TYPE-WORD FALSE>>
	<JRST	NMEND>	

; "RECYCLE A HASH TABLE TRIO"

RECYCL	<PUSH	P* C>		; "COUNT OF WORDS USED"
	<PUSH	P* B>		; "PLACE WE USE"
	<PUSH	P* A>		; "HACKED PTR TO FREE SLOT"
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [1]>
	<PUSH	TP* <TYPE-WORD FIX>>
	<LDB	B* [<(*3400*) B>]>
	<PUSH	TP* B>		; "DISK ADDRESS"
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<PUSH	TP* -6(P)>	
	<MCALL	4 DATREAD>	; "READ AT THIS WORD"
	<MOVE	D* -6(P)>	
	<MOVE	C* (D)>		; "GET THE GOOD WORD"
	<LDB	D* [<(*340700*) C>]>
	<POP	P* A>
	<MOVEM	C* HASHFREE (A)>; "POINT TO NEXT ON CHAIN"
	<POP	P* B>
	<POP	P* D>		; "RESTORE WORD COUNT"
	<POP	P* A>
	<JRST	NEWNM1>	


; "CONS UP THE HASH TABLE.  D HAS THE ASYLUM"

HASHMP	<SUBM	M* (P)>
	<PUSH	P* A>
	<MOVE	C* <OFFSET MFDPAGE> (D)>
	<LSH	C* 10>
	<SKIPG	A* HASHLOC (C)>
	<JRST	HASHMK>
	<LSH	A* -10>		; "DISK PAGE NUMBER"
	<PUSH	P* A>
	<PUSH	P* D>
	<PUSHJ	P* GHPAGE>
	<PUSH	P* B>
	<MOVE	A* -2(P)>
	<PUSHJ	P* HMAPIN>
	<POP	P* B>
	<POP	P* D>
	<POP	P* A>
	<MOVE	A* <TYPE-WORD FIX>>
	<MOVEM	A* <- <OFFSET HASHPAGE> 1> (D)>
	<MOVEM	B* <OFFSET HASHPAGE> (D)>
	<POP	P* A>
	<JRST	MPOPJ>

GHPAGE	<SUBM	M* (P)>
	<PUSH	P* B>
	<PUSHJ	P* APGFND>
	<JRST	GHWIN>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [1]>
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<MOVE	A* -2(P)>
	<PUSH	TP* <OFFSET HASHPAGE> (A)>
	<MCALL	2 ARESERVE>
	<GETYP	A* A>
	<CAIN	A* <TYPE-CODE FALSE>>
	<JRST	NOHPG>
	<PUSHJ	P* APGFND>
	<SKIPA>
	<JRST	NOHPG>
GHWIN	<SUB	P* [<1 (1)>]>
	<JRST	MPOPJ>

NOHPG	<ERRUUO* <MQUOTE NO-PAGE-FOR-HASHING!-ERRORS>>

APGFND	<SUBM	M* (P)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [-1]>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [1]>
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<MOVE	A* -3(P)>
	<PUSH	TP* <OFFSET HASHPAGE> (A)>
	<MCALL	3 APGFIND>
	<GETYP	A* A>
	<CAIN	A* <TYPE-CODE FALSE>>
	<SOS	(P)>
	<JRST	MPOPJ>

HMAPIN	<SUBM	M* (P)>
	<PUSH	TP* <TYPE-WORD CHANNEL>>
	<MOVE	C* -3(TP)>
	<PUSH	TP* 1(C)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* A>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* B>
	<MCALL	3 MAP-PAGE>
	<JRST	MPOPJ>

; "CREATE THE HASH PAGE AND FORMAT IT PROPERLY.
   C HAS THE LOCATION OF THE START OF THE MFDPAGE"

HASHMK	<PUSH	P* C>
	<PUSHJ	P* HGETPG>	; "GET A PAGE FROM ASYLUM"
	<JRST	HMLOSR>
	<MOVE	C* (P)>
	<MOVE	A* B>
	<LSH	A* -10>		; "PAGE NUMBER OF HASH PAGE"
	<PUSH	P* A>
	<PUSH	P* D>
	<PUSHJ	P* GHPAGE>
	<PUSH	P* B>
	<MOVE	A* -2(P)>
	<PUSHJ	P* HMAPIN>	; "BRING IN THAT PAGE"
	<POP	P* B>
	<POP	P* D>
	<LSH	B* 10>
	<POP	P* A>
	<LSH	A* 10>
	<MOVE	E* A>
	<ADDI	E* HIBUCKET>
	<MOVEM	E* HASHLO (B)>
	<EXCH	B* (P)>
	<MOVEM	A* HASHLOC (B)>
	<POP	P* B>
	<MOVE	D* -2(TP)>
	<LSH	B* -10>
	<MOVE	A* <TYPE-WORD FIX>>
	<MOVEM	A* <- <OFFSET HASHPAGE> 1> (D)>
	<MOVEM	B* <OFFSET HASHPAGE> (D)>
	<POP	P* A>
	<JRST	MPOPJ>	

; "HERE TO GET A PAGE FROM THE END OF AN ASYLUM FOR HASH HACKING
   C HAS THE ADDRESS OF START OF MFDPAGE
   -2(TP) IS THE ASYLUM (ALLOCATOR LOCKED)
   NO SKIP = NO ROOM
   1 SKIP = B HAS LOCATION OF START OF WINNING PAGE (PG # IS LSH B* -10) "

HGETPG	<SUBM	M* (P)>
	<PUSH	P* D>		; "SAVE D"
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>	; "PUSH THE ASYLUM"
	<PUSH	TP* <TYPE-WORD FIX>>
	<MOVSI	A* *610000*>
	<PUSH	TP* A>		; "AND 610000,,0"
	<MCALL	2 DATALLOC>	; "GET A NEW PAGE"
	<POP	P* D>
	<GETYP	A* A>
	<CAIE	A* <TYPE-CODE FALSE>>
	<SOS	(P)>		; "SKIP RETURN IF WINS"
	<JRST	MPOPJ>

HMLOSR	<MOVE	B* <MQUOTE (9)>>
	<SUB	P* [<6 (6)>]>	; "NO MORE ROOM ERROR"
	<SUB	TP* [<4 (4)>]>
	<MOVE	A* <TYPE-WORD FALSE>>
	<JRST	MPOPJ>

HMLSR1	<MOVE	B* <MQUOTE (9)>>
	<MOVE	A* <TYPE-WORD FALSE>>
	<JRST	NMEND>

; "HERE TO GROW HASH TABLE SPACE"

HASHGR	<PUSH	P* A>
	<MOVE	C* <OFFSET MFDPAGE> (D)>
	<LSH	C* 10>
	<PUSHJ	P* HGETPG>	; "GET NEW LOC INTO B"
	<JRST	HMLSR1>
	<POP	P* A>
	<MOVEM	B* HASHLO (A)>	; "SMASH HASHLO"
	<JRST	HSHGR1>

; "CONS UP HASH CODE FOR STRING.  
   STRING IS IN -1(TP) AND (TP).  CODE (0-63) IS IN RETURNED IN A. "

HASHER	<SUBM	M* (P)>
	<HRRZ	C* -1(TP)>
	<CAILE	C* 200>
	<ERRUUO* <MQUOTE STRING-TOO-LARGE!-ERRORS>>
	<MOVE	A* (TP)>
	<MOVE	B* [3.1416]>
	<JUMPE	C* HFINIS>
HLOOP	<ILDB	D* A>
	<TSC	B* D>
	<ROT	B* (D)>
	<SOJN	C* HLOOP>
HFINIS	<LDB	A* [<(*1000*) B>]>
	<JRST	MPOPJ>

; "HERE TO DELETE AN ENTRY FROM THE HASH TABLE
   THE WINNING ID IS IN B AND IS SAVED
   (P) IS THE CURRENT POINTER
   RIGHT 26 OCTAL BITS OF (A) IS FORWARD POINTER
   -1(P) IS THE BACK POINTER
   -2(P) IS THE ID OF THE BACK POINTER
   -3(P) IS THE HASH CODE OF THE OBJECT
   -4(P) IS THE HASH UVECTOR
   -2(TP) IS THE ASYLUM "

NAMDEL	<SUBM	M* (P)>
	<PUSH	P* B>		; "SAVE WINNING ID NUMBER"
	<HLLZ	C* -3(P)>
	<HRRZ	D* -3(P)>	; "GET THE BACK POINTER"
	<JUMPN	C* NAMDL1>
	<MOVE	C* (A)>
	<MOVEM	C* (D)>		; "STUFF IT DIRECTLY"
	<JRST	NAMDL2>
NAMDL1	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [1]>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* D>
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<PUSH	TP* -6(P)>
	<MCALL	4 DATWRITE>	; "SPLICE ME OUT OF LIST"
NAMDL2	<MOVE	B* -2(TP)>
	<MOVE	A* <OFFSET HASHPAGE> (B)>
	<LSH	A* 10>
	<ADD	A* -7(P)>
	<MOVE	C* HASHFREE (A)>; "FREE CHAIN"
	<PUSH	P* A>
	<MOVE	A* -7(P)>
	<MOVEM	C* (A)>		; "MOVE POINTER INTO UVECTOR"
	<PUSH	TP* -3(TP)>
	<PUSH	TP* -3(TP)>
	<PUSH	TP* <TYPE-WORD FIX>>
	<PUSH	TP* [1]>
	<PUSH	TP* <TYPE-WORD FIX>>
	<LDB	C* [<(*3400*) -3(P)>]>
	<PUSH	TP* C>		; "CRASH INTO CURRENT POINTER"
	<PUSH	TP* <TYPE-WORD UVECTOR>>
	<PUSH	TP* -7(P)>
	<MCALL	4 DATWRITE>
	<POP	P* B>
	<MOVE	A* -2(P)>
	<MOVEM	A* HASHFREE (B)>; "CRASH WITH CURRENT POINTER"
	<POP	P* B>		; "RESTORE THE ID OF THE DELETED ENTRY"
	<JRST	MPOPJ>		; "FINIS"

