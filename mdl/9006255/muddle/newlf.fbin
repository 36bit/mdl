'<PCODE "NEWLF">

<BLOCK (<ROOT>)> 

ITS 

TENEX 

<ENDBLOCK> 

<BLOAT 20000 0 0 50> 

<OR <LOOKUP "COMPILE" <ROOT>> <PROG (TMP) <PRINC 
"WHAT OPERATING SYSTEM IS THIS (ITS OR TENEX)? "> <COND (<==? <SET TMP <READ>> 
ITS> <SETG ITS T>) (<==? .TMP TENEX> <SETG ITS <>>) (<AGAIN>)> <CRLF>>> 

<USE "SORTX" "JCL"> 

"LOW 6 BITS OF WORD" 

<SETG LOW-BITS <BITS 6>> 

<AND <LOOKUP "COMPILE" <ROOT>> <SETG ITS T>> 

<COND (,ITS <SETG PAGE 1024>) (<SETG PAGE 512>)> 

<MANIFEST LOW-BITS> 

"OFFSETS INTO UVECTOR OF INFORMATION RETURNED BY SRCH-DIR" 

<SETG N_NM1 3> 

<SETG NAME-FIELD 1> 

<SETG VERSION-FIELD 2> 

<SETG LENGTH-FIELD 3> 

<SETG BLOCK-FIELD 4> 

<MANIFEST NAME-FIELD VERSION-FIELD BLOCK-FIELD LENGTH-FIELD> 

"OFFSETS INTO LIST RETURNED BY FILPRS" 

<SETG D_NM1 1> 

<SETG D_NM2 2> 

<SETG D_DEV 3> 

<SETG D_SNM 4> 

<MANIFEST D_NM1 D_NM2 D_DEV D_SNM> 

<SETG WRKDIR "MUDTMP"> 

<SETG MNDIR "MUDSAV"> 

<SETG STRBUF <ISTRING 50>> 

<SETG RCL ![0!]> 

<SETG DIRBUF <IUVECTOR ,PAGE 0>> 

<SETG SDIRBUF <IUVECTOR 256 0>> 

<SETG VERSION-FD <BITS 10 18>> 

<SETG VERSION-FD1 <BITS 18 0>> 

<SETG LENGTH-FD <BITS 7 28>> 

<SETG BLOCK-FD <BITS 18 0>> 

"THESE ARE UTILITY ROUTINES TO HACK THE MUDDLE DATA BASE" 

<SETG LISTF  %<RSUBR!- '[ %<PCODE!- "NEWLF" 0> LISTF #DECL ("VALUE" <OR ATOM <
FALSE STRING [REST STRING]>> "OPTIONAL" STRING ANY) INDENT-TO READJCL JCL? QUIT 
FILPRS "SAV" ALL "READB" "FILE" "DSK" %<RGLOC MNDIR T> #FALSE (
"BAD ARG TO LISTF") %<RGLOC RCL T> OUTCHAN "DIRECTORY # " %<RGLOC PAGE T> %<
RGLOC DIRBUF T> T "FREE STORAGE" "	" " BLOCKS" "FIXUP" " FILE" 
"DIRECTORY #" "		" "	FILES" "TOTAL NUMBER OF FILES= " 
"TOTAL FREE SPACE= " "DELETE" %<RGLOC WRKDIR T> %<RGLOC STRBUF T> "PRINTB" 
"PRINTO" " " "
" "BAD CHAR IN SIXBIT" D_NM1 %<RGLOC SDIRBUF T> #FALSE ("File not found") %<
RGLOC VERSION-FD T> %<RGLOC LENGTH-FD T> %<RGLOC BLOCK-FD T> #FALSE (
"BAD DATA BASE NAME") " DIRECTORY" %<RGLOC SAV-UVEC T> %<RGLOC FIX-UVEC T> 
BAD-CHANNEL-TO-GATHER-FILES!-ERRORS CAN T-OPEN-MAIN-FILE!-ERRORS BYTEL 
"FILE ALL NUMBERS?" NUM %<RGLOC VERSION-FD1 T> "ADDED" "FILES" "RESTORED" 
"DBSTAT" "STATUS" "SCCONS" "DBMAIN" "NEWLF IS READY." "DONE" "NO JCL LINE" 
"PRINT" "NOTHING TO DO" "BAD SCRIPT FILE NAME" (CHANNEL) "BAD JCL LINE" 
"ERROR-- " #FALSE ("BAD DATA-BASE NAME") "FREE AREAS" "-- " "MUDTMP;OLD SCRIPT" 
"READ" "MUDTMP;SCRIPT <"]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,LISTF PGLUE ![716177407 -1 -1 -1 -16777216!]>> 


"LIST-IT ACTUALLY LISTS A DIRECTORY. IT TAKES A NUMBER OF THE DIRECTORY AS AN ARGUMENT" 

<SETG LIST-IT %<RSUBR-ENTRY '[LISTF LIST-IT #DECL ("VALUE" ATOM CHANNEL FIX ANY)
] 218>> 

"A ROUTINE TO PRINT A 6BIT WORD OUT. ASSUMES WORD IS LEFT JUSTIFIED" 

<SETG PRINT-6BIT %<RSUBR-ENTRY '[LISTF PRINT-6BIT #DECL ("VALUE" ATOM <PRIMTYPE 
WORD>)] 340>> 

"THIS ROUTINE PRINTS THE CONTENTS OF THE FREE STORAGE LIST" 

<SETG FLIST %<RSUBR-ENTRY '[LISTF FLIST #DECL ("VALUE" ATOM "OPTIONAL" ANY)] 398
>> 

<SETG STATUS %<RSUBR-ENTRY '[LISTF STATUS #DECL ("VALUE" <OR ATOM FALSE>)] 583>> 

<SETG ISTATUS %<RSUBR-ENTRY '[LISTF ISTATUS #DECL ("VALUE" ATOM CHANNEL)] 665>> 

<SETG DELETE %<RSUBR-ENTRY '[LISTF DELETE #DECL ("VALUE" <OR ATOM FALSE> ANY)] 
948>> 

"ROUTINE TO CONVERT A STRING TO SIXBIT" 

<SETG SIXBIT %<RSUBR-ENTRY '[LISTF SIXBIT #DECL ("VALUE" FIX STRING)] 1171>> 

<SETG GET-FILE %<RSUBR-ENTRY '[LISTF GET-FILE #DECL ("VALUE" <OR ATOM FALSE> 
STRING STRING)] 1231>> 

<SETG FIND-FILE %<RSUBR-ENTRY '[LISTF FIND-FILE #DECL ("VALUE" <OR ATOM FALSE> 
STRING)] 1427>> 

"THESE ARE A GROUP OF ROUTINES USED TO FIND FILES IN THE SAV AND FIXUP
 DATA BASES." 

"ROUTINE TO LOAD A DIRECTORY GIVEN A CHANNEL TO THE FILE AND A FIRST NAME." 

<SETG LOAD-DIRECTORY %<RSUBR-ENTRY '[LISTF LOAD-DIRECTORY #DECL ("VALUE" ANY 
CHANNEL FIX)] 1523>> 

"ROUTINE TO DO A BINARY SEARCH ON A DIRECTORY FOR THE FIRST NAME AND RETURN A FALSE
 IF NOT FOUND OR THE RESTED DOWN DIRECTORY IF FOUND." 

<SETG IFIND-FILE %<RSUBR-ENTRY '[LISTF IFIND-FILE #DECL ("VALUE" <OR FALSE 
UVECTOR> STRING)] 1612>> 

<SETG BINSRCH %<RSUBR-ENTRY '[LISTF BINSRCH #DECL ("VALUE" <OR FALSE <UVECTOR <
PRIMTYPE WORD> [REST <PRIMTYPE WORD>]>> FIX <UVECTOR [REST <PRIMTYPE WORD>]> FIX
)] 1710>> 

"ROUTINE TO SEARCH A DIRECTORY FOR A FILE.  IT TAKES AS ARGUMENTS A DIRECTORY,
 A FIRST NAME, AND A VERSION #.  IT RETURNS A FALSE IF NOT FOUND OR A UVECTOR
 OF INFORMATION IF FOUND.  THIS UVECTOR CONTAINS:
	1.  FIRST FILE NAME (6BIT)
	2.  VERSION # (FIX)
	3.  LENGTH OF FILE
	4.  BLOCK OF START OF FILE" 

<SETG SRCH-DIR %<RSUBR-ENTRY '[LISTF SRCH-DIR #DECL ("VALUE" <OR <FALSE STRING [
REST STRING]> <UVECTOR FIX FIX FIX FIX [REST FIX]>> FIX FIX <UVECTOR FIX>)] 1818
>> 

"ROUTINE TO LIST THE ENTIRE DATA-BASE FOR EITHER THE SAV OR FIXUP DATA-BASES" 

"BOOTSTRAP ROUTINE TO CREATE THE APPROPRIATE UVECTORS" 

<PROG ((CH <OPEN "READB" "SAV" "FILE" "DSK" ,MNDIR>)) <READB ,RCL .CH> <SETG 
SAV-UVEC <IUVECTOR <* <1 ,RCL> ,PAGE> 0>> <CLOSE .CH>> 

<PROG ((CH <OPEN "READB" "FIXUP" "FILE" "DSK" ,MNDIR>)) <READB ,RCL .CH> <SETG 
FIX-UVEC <IUVECTOR <* <1 ,RCL> ,PAGE> 0>> <CLOSE .CH>> 

"A ROUTINE TO DO A COMPLETE LISTING OF A DATA-BASE DIRECTORY" 

<SETG CLISTF %<RSUBR-ENTRY '[LISTF CLISTF #DECL ("VALUE" <OR ATOM <FALSE STRING 
[REST STRING]>> "OPTIONAL" ANY)] 1980>> 

"ROUTINE TO GATHER ALL THE DIRECTORIES TOGETHER IN A UVECTOR AND RETURN THE UVECTOR" 

<SETG GATHER-FILES %<RSUBR-ENTRY '[LISTF GATHER-FILES #DECL ("VALUE" UVECTOR 
CHANNEL)] 2136>> 

<SETG LIST-FILES %<RSUBR-ENTRY '[LISTF LIST-FILES #DECL ("VALUE" ATOM <UVECTOR [
REST FIX]> ANY)] 2334>> 

<SETG SPEC-FIND %<RSUBR-ENTRY '[LISTF SPEC-FIND #DECL ("VALUE" ATOM ANY 
"OPTIONAL" STRING)] 2381>> 

<SETG EQNNAM %<RSUBR-ENTRY '[LISTF EQNNAM #DECL ("VALUE" <OR ATOM FALSE> ANY ANY
ANY)] 2677>> 

<SETG LISTIT %<RSUBR-ENTRY '[LISTF LISTIT #DECL ("VALUE" FIX ANY ANY ANY)] 2714>
> 

<SETG CCLOSE %<RSUBR-ENTRY '[LISTF CCLOSE #DECL ("VALUE" <OR CHANNEL FALSE> ANY)
] 2794>> 

<SETG 6TOCHS %<RSUBR-ENTRY '[LISTF 6TOCHS #DECL ("VALUE" STRING ANY)] 2819>> 

<SETG FB %<RSUBR-ENTRY '[LISTF FB #DECL ("VALUE" LIST ANY)] 2880>> 

<SETG BUILD-LIST %<RSUBR-ENTRY '[LISTF BUILD-LIST #DECL ("VALUE" LIST)] 3042>> 

<SETG DUMP-LF %<RSUBR-ENTRY '[LISTF DUMP-LF #DECL ("VALUE" <OR ATOM FALSE STRING
> ANY "OPTIONAL" ANY)] 3144>> 

<SETG HACK-JCL %<RSUBR-ENTRY '[LISTF HACK-JCL #DECL ("VALUE" FALSE)] 3228>> 

<SETG WARN %<RSUBR-ENTRY '[LISTF WARN #DECL ("VALUE" FALSE STRING)] 3367>> 

<SETG FREE-AREAS %<RSUBR-ENTRY '[LISTF FREE-AREAS #DECL ("VALUE" <OR ATOM <FALSE
STRING [REST STRING]>> "OPTIONAL" STRING)] 3389>> 

<SETG SCCONS %<RSUBR-ENTRY '[LISTF SCCONS #DECL ("VALUE" ATOM)] 3666>> 
