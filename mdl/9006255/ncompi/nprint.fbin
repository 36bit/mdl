'<PCODE "NPRINT">

<SETG NODE-COMPLAIN  %<RSUBR!- '[ %<PCODE!- "NPRINT" 0> NODE-COMPLAIN #DECL (
"VALUE" ANY NODE "OPTIONAL" FIX) %<TYPE-W NODE VECTOR> T %<TYPE-C NODE VECTOR> 
LOSER (<OR FALSE NODE>) MAX (FIX) OUTC OUTCHAN (CHANNEL) "PRINT" "INT:" %<RGLOC 
NF T> %<RGLOC NP T> NCHS (ANY) NACT (ACTIVATION) " ..." " **** " "<FUNCTION " 
" " ">" "<" %<RGLOC MAP-SPEC-PRINT T> "," %<RGLOC ST-CHRS T> ![UVECTOR VECTOR 
LIST!] %<RGLOC EN-CHRS T> "(" ")" SET %<RGLOC LGV T> %<RGLOC LVAL T> %<RGLOC 
GVAL T> %<TYPE-C SYMTAB VECTOR> %<TYPE-W SYMTAB VECTOR> INTH "\"NAME\" " 
"\"AUX\" " "\"TUPLE\" " "\"ARGS\" " "\"OPTIONAL\" " "'" "\"CALL\" " "\"BIND\" " 
ANY (VALUE)]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,NODE-COMPLAIN PGLUE ![1073741823 -1 -64 0!]>> 


<SETG NODE-PRINT %<RSUBR-ENTRY '[NODE-COMPLAIN NODE-PRINT #DECL ("VALUE" ANY ANY
"OPTIONAL" <OR FALSE NODE> FIX ANY)] 77>> 

<SETG NF %<RSUBR-ENTRY '[NODE-COMPLAIN NF #DECL ("VALUE" <OR FIX FLOAT> ANY)] 
273>> 

<SETG NP %<RSUBR-ENTRY '[NODE-COMPLAIN NP #DECL ("VALUE" CHARACTER CHARACTER)] 
312>> 

<SETG NPRINT %<RSUBR-ENTRY '[NODE-COMPLAIN NPRINT #DECL ("VALUE" <OR FALSE 
STRING> NODE)] 346>> 

<SETG MAP-SPEC-PRINT [",+" ",-" ",*" ",/" ",LIST"]> 

<SETG LGV ![,LVAL-CODE ,FLVAL-CODE ,GVAL-CODE ,FGVAL-CODE!]> 

<SETG ST-CHRS ["(" "[" "!["]> 

<SETG EN-CHRS [")" "]" "!]"]> 

<SETG SEQ-PRINT %<RSUBR-ENTRY '[NODE-COMPLAIN SEQ-PRINT #DECL ("VALUE" ANY <LIST
[REST NODE]>)] 821>> 

<SETG PRNARGL %<RSUBR-ENTRY '[NODE-COMPLAIN PRNARGL #DECL ("VALUE" <OR DECL 
FALSE> <LIST [REST SYMTAB]> ANY "OPTIONAL" ANY)] 880>> 
