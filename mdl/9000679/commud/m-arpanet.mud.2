
<PACKAGE "M-ARPANET">

;"main delivery module plus interaction with ARPANET"

<ENTRY ARPANET-DELIVERY
       MAIL-FILE
       TRY-XRCP?
       ARPANET-QUIT
       USER-LOSERS>

<USE "MADMAN" "CHAN" "FIELDS" "CLOCK" "M-DEFS" "M-TIME"
     "M-BASE" "ITIME" "M-PRCD" "M-READ" "M-DAC" "M-DOUT" "NETFTP" "HOSTS"
     "M-DATA" "M-TEMP" "M-ACK" "PRTUTI" "PRTSTR" "AP" "M-ERR" "USRUTI" "M-TAI">

\ 

<GDECL (NET-MESSAGE) <OR FALSE CHANNEL>
       (FTP-CONNECTION) <OR FALSE <LIST [2 CHANNEL]>>
       (IHAN EHAN) HANDLER
       (CR EOM) STRING
       (ICP-TRIES) FIX
       (DF) FLOAT
       (NET-RETRY-CODES USER-LOSERS) <UVECTOR FIX>
       (TRY-XRCP?) <OR ATOM FALSE>>

<SETG TRY-XRCP? T>		 ;"SHOULD WE TRY USE XRCP?  SURE, IF POSSIBLE"

<SETG FTP-CONNECTION <>>

<SETG CR <STRING <ASCII 13> <ASCII 10>>>

<SETG NET-RETRY-CODES '![7 10 11 13 14 17 18 20 21 22!]
      					   ;"CODES WHICH ARE NON-FATAL ERRORS">

<SETG USER-LOSERS '![450 451]	     ;"TEMPORARY ERRORS TO TREAT AS PERMANENT">

<SETG EOM <STRING <ASCII 13> <ASCII 10> "." <ASCII 13> <ASCII 10>>>

\

"ARPANET-DELIVERY -- network output for message.  Note that this reads
  'net-delivery-format' from the author rather than receiver area; this
  is to allow chomps like inquire updating to work, besides, what net
  receiver would have a tailor, anyway?"

<DEFINE ARPANET-DELIVERY (ADR RCVR HST "AUX" TMPFIL)
	#DECL ((ADR RCVR) STRING (HST) FIX (TMPFIL) <OR STRING CHANNEL>)
	<COND (<SET TMPFIL <MAIL-TEMP-FILE .ADR>>
	       <MAIL-FILE .ADR .RCVR .HST .TMPFIL>)>>

\

"FTP-OPEN -- open an FTP connection"

<DEFINE FTP-OPEN (HST "AUX" (ICPCNT ,ICP-TRIES) FTP)
	#DECL ((HST) FIX (ICPCNT) FIX
	       (VALUE FTP) <OR FALSE <LIST [2 CHANNEL]>>)
	<REPEAT ()
		<COND (<SET FTP <ICP .HST 3>> <RETURN .FTP>)
		      (<=? <1 .FTP> "DEVICE NOT READY">
		       <SCROUT "ARPAnet apparently down">
		       <RETURN <>>)
		      (<L? <SET ICPCNT <- .ICPCNT 1>> 0>
		       <RETURN <>>)
		      (ELSE
		       <SLEEP 5>
		       <SCROUT "Retrying ICP">)>>>

\

"MAIL-FILE -- given addressee and file containing mail, send it"

<DEFINE MAIL-FILE (ADR RCVR HST TMPFIL
		   "AUX" (QSEND? <DRDMSG "" "QSEND">)
		   (SPLIT? <SPLITS? .ADR>) RES TCH C
		   LAST? FTP OCH ICH REPLY (MS ,MSG-SPACE))
	#DECL ((ADR RCVR) STRING (TCH) <OR CHANNEL FALSE> (MS) SPACE
	       (HST) FIX (FTP) <OR FALSE <LIST [2 CHANNEL]>> (C) CINT
	       (LAST?) <OR ATOM FALSE> (QSEND? REPLY) <OR FIX FALSE>
	       (ICH OCH) CHANNEL (TMPFIL) <OR STRING CHANNEL> (RES) ANY
	       (SPLIT?) <OR ATOM FALSE>)
	<SET RES
	     <PROG MF ()
		   #DECL ((MF) ACTIVATION)
		   <COND (<SET TCH
			       <OR <AND <TYPE? .TMPFIL CHANNEL> .TMPFIL>
				   <OPEN "READ" .TMPFIL>>>
			  <SETG NET-MESSAGE .TCH>
			  <SET RES
			       <PROG NETOUT ()
				     #DECL ((NETOUT) <SPECIAL ACTIVATION>)
				     <WATCH EHAN "ERROR" ,ERRHND 4>
				     <WATCH IHAN "IOC" ,IOCHND 4>
				     <SET C <ALARM ,TIMED-OUT 900.0>>
				     <COND
				      (<SET FTP <CONNECTED? .HST>>
				       <SET ICH <1 .FTP>>
				       <SET OCH <2 .FTP>>
				       <SET LAST?
					    <OR .SPLIT?
						<NOT <QPEEK "DELIVERY"
							    <HOST <6 .ICH>>>>>>)
				      (ELSE
				       <ARPANET-QUIT>
				       <COND (<SET FTP <FTP-OPEN .HST>>
					      <SCROUT "ICP Successful">
					      <SLEEP 5>
					      <SET ICH <1 .FTP>>
					      <SET OCH <2 .FTP>>)
					     (ELSE <RETURN <AFALSE 13>>)>
				       <COND (<SET REPLY
						   <WAITRESP .ICH '(300)>>
					      <SETG FTP-CONNECTION .FTP>)
					     (ELSE
					      <CLOSE .ICH>
					      <CLOSE .OCH>
					      <SETG FTP-CONNECTION <>>
					      <RETURN <AFALSE 21>>)>
				       <SET LAST?
					    <OR .SPLIT?
						<NOT <QPEEK "DELIVERY"
							    <HOST <6 .ICH>>>>>>
				       <SETG XRCP-R? <>>
				       <SETG XRCP-T? <>>
				       <SETG XRCP-T-MAIL? <>>
				       <SETG XRCP-LIST ()>
				       <COND (<AND <NOT .LAST?> ,TRY-XRCP? <NOT .QSEND?>>
					      <PR .OCH "XRSQ R">
					      <COND
					       (<SET REPLY <WAITRESP .ICH '(200)>>
						<SETG XRCP-R? T>)
					       (ELSE
						<PR .OCH "XRSQ T">
						<COND
						 (<SET REPLY <WAITRESP .ICH '(200)>>
						  <SETG XRCP-T? T>)>)>)>)>
				     <COND (<AND ,XRCP-T? <NOT ,XRCP-T-MAIL?>>
					    <COND
					     (<AND <SET REPLY <MCMD .ICH .OCH "MAIL">>
						   <SET REPLY <SEND-MAIL .TCH .ICH .OCH>>>
					      <SETG XRCP-T-MAIL? T>)
					     (ELSE <RETURN .REPLY>)>)>
				     <COND (,XRCP-R?
					    <PR .OCH "XRCP " .RCVR>
					    <SET REPLY <WAITRESP .ICH '(200 440)>>
					    <COND (<==? .REPLY 200>
						   <SETG XRCP-LIST (.ADR !,XRCP-LIST)>)
						  (<==? .REPLY 440> <SET LAST? T>)
						  (ELSE
						   <RETURN
						    <AFALSE 19 <ACOPY .MS <1 .REPLY>>>>)>
					    <COND (.LAST?
						   <COND
						    (<SET REPLY <MCMD .ICH .OCH "MAIL">>
						     <SET REPLY <SEND-MAIL .TCH .ICH .OCH>>)>
						   <MAPF <>
							 <FUNCTION (A)
							      #DECL ((A) STRING)
							      <MAIL-RESULT .A .REPLY>>
							 ,XRCP-LIST>
						   <SETG XRCP-LIST ()>)>
					    <RETURN T .MF>)
					   (<AND .QSEND?
						 <MCMD .ICH
						       .OCH
						       <COND (<L? .QSEND? 0> "XSEN ")
							     (<0? .QSEND?> "XSEM ")
							     (ELSE "XMAS ")>
						       .RCVR>>
					    <SEND-MAIL .TCH .ICH .OCH>)
					   (,XRCP-T?
					    <PR .OCH "XRCP " .RCVR>
					    <COND (<SET REPLY <WAITRESP .ICH '(256)>>)
						  (ELSE
						   <AFALSE 19 <ACOPY .MS <1 .REPLY>>>)>)
					   (<MCMD .ICH .OCH "MAIL " .RCVR>
					    <SEND-MAIL .TCH .ICH .OCH>)>>>
			  <IGNORE EHAN>
			  <IGNORE IHAN>
			  <ALARM-OFF .C>
			  <COND (.RES T)>)
			 (ELSE
			  <AFALSE 7 <ASTRING .MS <UNPARSE .TCH>>>)>>>
	<COND (.SPLIT? <FLUSH-NET-MESSAGE>)>
	.RES>

\

"CONNECTED?"

<DEFINE CONNECTED? (HST "AUX" (FTP ,FTP-CONNECTION) ICH CHST)
	#DECL ((HST) <OR FIX FALSE VECTOR> (CHST) FIX
	       (FTP) <OR FALSE <LIST CHANNEL CHANNEL>> (ICH) CHANNEL)
	<COND (<AND .FTP
		    <NOT <0? <1 <SET ICH <1 .FTP>>>>>
		    <NOT <0? <1 <2 .FTP>>>>>
	       <SET CHST <6 .ICH>>
	       <COND (<==? .HST .CHST> .FTP)>
	       <SCROUT "FTP connection to "
		       <HOST .CHST>
		       " exists">
	       .FTP)>>

"xrcp goodies"

<SETG XRCP-R? <>>	;"in middle of XRCP?"
<SETG XRCP-T? <>>	;"text first XRCP?"
<SETG XRCP-T-MAIL? <>>	;"sent mail during XRCP-T?"

<GDECL (XRCP-R? XRCP-T? XRCP-T-MAIL?) <OR ATOM FALSE>>

\

"ARPANET-QUIT -- flush ftp connection"

<DEFINE ARPANET-QUIT ("AUX" (FTP ,FTP-CONNECTION))
	#DECL ((FTP) <OR FALSE <LIST CHANNEL CHANNEL>>)
	<SETG XRCP-R? <>>
	<SETG XRCP-T? <>>
	<SETG XRCP-T-MAIL? <>>
	<COND (.FTP
	       <CLOSE <1 .FTP>>
	       <CLOSE <2 .FTP>>
	       <SCROUT "FTP closed">
	       <SETG FTP-CONNECTION <>>)>>

\

"SEND-MAIL -- copy mail file open on first arg to ftp."

<DEFINE SEND-MAIL (CH ICH OCH "AUX" RES)
	#DECL ((CH ICH OCH) CHANNEL)
	<SET RES
	     <PROG WAIT-ACT ()
		   #DECL ((WAIT-ACT) <SPECIAL ACTIVATION>)
		   <FILECOPY .CH .OCH>
		   <PRINC ,EOM .OCH>
		   <NETS .OCH>
		   <WAITRESP .ICH '(256)>>>
	<FTP-REPLY .RES 19 17 18>>

"MCMD -- do a standard mail command (used for MAIL and XSEN)"

<DEFINE MCMD (ICH OCH CMD "OPTIONAL" RCVR "AUX" REPLY)
	#DECL ((ICH OCH) CHANNEL (CMD RCVR) STRING (REPLY) <OR FIX FALSE>)
	<COND (<ASSIGNED? RCVR> <PR .OCH .CMD .RCVR>)
	      (ELSE <PR .OCH .CMD>)>
	<SET REPLY <WAITRESP .ICH '(350 504)>>
	<COND (<==? .REPLY 350>)
	      (<==? .REPLY 504>
	       <PROG ()
		     <PR .OCH "USER NETML">
		     <COND (<SET REPLY <WAITRESP .ICH '(330)>>)
			   (ELSE <RETURN .REPLY>)> 
		     <PR .OCH "PASS NETML">
		     <COND (<SET REPLY <WAITRESP .ICH '(230)>>)
			   (ELSE <RETURN .REPLY>)>
		     <PR .OCH .CMD .RCVR>
		     <SET REPLY <WAITRESP .ICH '(350)>>>)>
	<FTP-REPLY .REPLY 19 17 10>>

"FTP-REPLY -- analyzes an FTP reply and returns an appropriate false
if it is not a winner."

<DEFINE FTP-REPLY (REPLY PERM TEMP RAND "AUX" (MS ,MSG-SPACE) S CD)
	#DECL ((REPLY) ANY (S) STRING (PERM TEMP RAND CD) FIX
	       (MS) SPACE)
	<COND (.REPLY)
	      (<AND <NOT <EMPTY? .REPLY>>
		    <SET S <1 .REPLY>>
		    <SET CD
			 <PARSE <STRING <1 .S>
					<2 .S>
					<3 .S>>>>
		    <G=? .CD 400>
		    <L=? .CD 599>>
	       <AFALSE <COND (<OR <G=? .CD 500> <MEMQ .CD ,USER-LOSERS>>
			      .PERM)
			     (ELSE .TEMP)>
		       .S>)
	      (ELSE <AFALSE .RAND <ACOPY .MS ,LAST-RESP>>)>>

"PR -- print message to net channel and script"

<DEFINE PR (CH "TUPLE" STR "AUX" (SOAK? ,SOAK?) (OUTCHAN .OUTCHAN))
	#DECL ((CH OUTCHAN) CHANNEL (STR) <TUPLE [REST STRING]>)
	<OR <0? <14 .OUTCHAN>> <CRLF>>
	<OR .SOAK? <PRINC "     ">>
	<MAPF <>
	      <FUNCTION (S)
			#DECL ((S) STRING)
			<PRINC .S .CH>
			<OR .SOAK? <PRINC .S>>>
	      .STR>
	<CRLF .CH>
	<NETS .CH>
	<OR .SOAK? <CRLF>>>

<ENDPACKAGE>
